PC에 다운로드 & 설치
https://git-scm.com/downloads
Download for Windows
Click here to download the latest (2.47.0) 64-bit version of Git for Windows. 
This is the most recent maintained build. It was released 15 days ago, on 2024-10-08.
Latest source Release
2.47.0
Release Notes (2024-10-06)
Download for Windows
Git-2.47.0-64-bit.exe

웹 깃허브에서 신규 레포지터리 생성
https://github.com/nayoungkim0920
+ -> create new -> new repository
name : libidn2
create repository
생성된 저장소의 주소
http => https://github.com/nayoungkim0920/libidn2.git
SSH => git@github.com:nayoungkim0920/libidn2.git

pc에서 업로드 
업로드하고싶은 폴더 -> 마우스 우클릭 -> 추가옵션표시 -> open Git Bash Here
MINGW64:/c/libidn2 창이 열린다.
nayou@kimnayooung MINGW64 /c/libidn2 (master)
$

초기설정
nayou@kimnayooung MINGW64 /c/libidn2 (master)
$ git config --global user.name ""
git config --global user.email ""

정보 확인
nayou@kimnayooung MINGW64 /c/libidn2 (master)
$ git config --list

github의 초기화를 진행
nayou@kimnayooung MINGW64 /c/libidn2 (master)
$ git init
Reinitialized existing Git repository in C:/libidn2/.git/

원격 remote 주소의 버전을 확인
nayou@kimnayooung MINGW64 /c/libidn2 (master)
$ git remote -v
origin  https://gitlab.com/libidn/libidn2.git (fetch)
origin  https://gitlab.com/libidn/libidn2.git (push)

remote repository 주소를 해제하는 명령어
nayou@kimnayooung MINGW64 /c/libidn2 (master)
$ git remote rm origin

디렉토리에 remote repository 가 해제 된 것 확인
nayou@kimnayooung MINGW64 /c/libidn2 (master)
$ git remote -v

연결하고자 하는 주소를 입력하면 작업하고 있는 디렉토리에 remote repository 연결 됨
nayou@kimnayooung MINGW64 /c/libidn2 (master)
$ git remote add origin https://github.com/nayoungkim0920/libidn2.git

추가할 파일 더하기(. : 모든파일, test.c: test.c)
nayou@kimnayooung MINGW64 /c/libidn2 (master)
$ git add .

상태확인
nayou@kimnayooung MINGW64 /c/libidn2 (master)
$ git status

히스토리만들기
nayou@kimnayooung MINGW64 /c/libidn2 (master)
$ git commit -m "comment 20241023"
...
create mode 100644 로컬 디스크 (C).lnk

업로드
nayou@kimnayooung MINGW64 /c/libidn2 (master)
$ git push -u origin master
Enumerating objects: 27615, done.
Counting objects: 100% (27615/27615), done.
Delta compression using up to 16 threads
Compressing objects: 100% (9495/9495), done.
Writing objects: 100% (27615/27615), 72.62 MiB | 369.96 MiB/s, done.
Total 27615 (delta 16598), reused 27409 (delta 16399), pack-reused 0 (from 0)
remote: Resolving deltas: 100% (16598/16598), done.
To https://github.com/nayoungkim0920/libidn2.git
 * [new branch]        master -> master
branch 'master' set up to track 'origin/master'.

추가/수정 후 업데이트하기
nayou@kimnayooung MINGW64 /c/libidn2 (master)
$ git add .

히스토리만들기
nayou@kimnayooung MINGW64 /c/libidn2 (master)
$ git commit -m "commit 20241023"

업로드
nayou@kimnayooung MINGW64 /c/libidn2 (master)
$ git push origin master
To https://github.com/nayoungkim0920/libidn2.git
 ! [rejected]          master -> master (fetch first)
error: failed to push some refs to 'https://github.com/nayoungkim0920/libidn2.git'
hint: Updates were rejected because the remote contains work that you do not
hint: have locally. This is usually caused by another repository pushing to
hint: the same ref. If you want to integrate the remote changes, use
hint: 'git pull' before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

=> 깃허브에서 readme파일을 수정했더니 오류가남

nayou@kimnayooung MINGW64 /c/libidn2 (master)
$ git push origin +master
Enumerating objects: 27640, done.
Counting objects: 100% (27640/27640), done.
Delta compression using up to 16 threads
Compressing objects: 100% (9518/9518), done.
Writing objects: 100% (27640/27640), 73.10 MiB | 174.08 MiB/s, done.
Total 27640 (delta 16617), reused 27399 (delta 16399), pack-reused 0 (from 0)
remote: Resolving deltas: 100% (16617/16617), done.
To https://github.com/nayoungkim0920/libidn2.git
 + a48938c7...b1411084 master -> master (forced update)

혹은
git init
git remote add origin https://github.com/nayoungkim0920/libidn2.git
git pull origin master
후에 
push를 진행한다.

(Git 업로드)
c:\libidn2\myupload.sh 생성
#!/bin/bash
# git update 하기
# c:\libidn2 폴더 > 우측마우스버튼 > 추가옵션표시 > open Git Bash Here

# Git 사용자 정보 설정 확인 및 필요 시 설정
if [ -z "$(git config --global user.name)" ]; then
    git config --global user.name "Your Name"
fi

if [ -z "$(git config --global user.email)" ]; then
    git config --global user.email "your.email@example.com"
fi

# Git 작업 파일 추가 및 커밋 메시지에 현재 날짜 설정
git add .
git commit -m "commit $(date +'%Y%m%d')"  # 오늘 날짜를 'YYYYMMDD' 형식으로 추가
git push origin master # 강제 업로드시 --force

nayou@kimnayooung MINGW64 /c/libidn2 (master)
$ chmod +x myupload.sh

nayou@kimnayooung MINGW64 /c/libidn2 (master)
$ ./myupload.sh

끝.

(오류)
MINGW64 /c/gcc-build (main)
$ git push -u origin master
error: src refspec master does not match any
error: failed to push some refs to 'https://github.com/nayoungkim0920/gcc-build.git'

MINGW64 /c/gcc-build (main)
$ git push origin master
error: src refspec master does not match any
error: failed to push some refs to 'https://github.com/nayoungkim0920/gcc-build.git'

MINGW64 /c/gcc-build (main)
$ git push origin master --force
error: src refspec master does not match any
error: failed to push some refs to 'https://github.com/nayoungkim0920/gcc-build.git'

(수정)
master 브랜치가 존재하지 않아서 발생하는 경우가 많음
Git에서 초기화 후 커밋을 생성하지 않았거나, 브랜치 이름이 main으로 되어 있을 가능성이 큼
2020년 이후로 GitHub는 기본 브랜치 이름을 master에서 main으로 변경함

로컬 브랜치 이름 확인
$ git branch
* main

*-u 옵션을 한 번 설정해 두면 매번 git push origin main과 같이 긴 명령어를 사용할 필요 없이 간단히 git push만 입력해도 됨
또 git pull을 입력하면 origin/main 브랜치에서 자동으로 변경 사항을 가져오게 됨.

MINGW64 /c/gcc-build (main)
$ git push -u origin main
Enumerating objects: 47, done.
Counting objects: 100% (47/47), done.
Delta compression using up to 16 threads
Compressing objects: 100% (40/40), done.
Writing objects: 100% (47/47), 405.95 KiB | 7.00 MiB/s, done.
Total 47 (delta 7), reused 0 (delta 0), pack-reused 0 (from 0)
remote: Resolving deltas: 100% (7/7), done.
To https://github.com/nayoungkim0920/gcc-build.git
 * [new branch]      main -> main
branch 'main' set up to track 'origin/main'.

만약 브랜치 이름을 master로 사용하고 싶다면, 로컬 브랜치 이름을 master로 변경한 후 원격에 푸시
$ git branch -m main master
$ git push -u origin master


