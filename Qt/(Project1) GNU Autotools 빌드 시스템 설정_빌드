#cmake -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=Debug ..

cmake_minimum_required(VERSION 3.14)
project(Project1 LANGUAGES CXX CUDA)

# BUILD TYPE 설정
if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Debug)
endif()
message(STATUS "CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}")

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_TOOLCHAIN_FILE "C:/vcpkg/scripts/buildsystems/vcpkg.cmake" CACHE FILEPATH "Path to vcpkg toolchain file")
set(CMAKE_PREFIX_PATH 
    "C:/vcpkg/packages" 
    "C:/onnxruntime")

# QT 설정
set(Qt6_DIR "C:/Qt/6.7.1/")
set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH};${Qt6_DIR}/msvc2019_64/lib/cmake/Qt6") #Find<Module>.cmake
set(CMAKE_PREFIX_PATH "${CMAKE_PREFIX_PATH};${Qt6_DIR}") #CMakeLists.txt
find_package(Qt6 REQUIRED COMPONENTS Widgets Core Gui)
set(CMAKE_PREFIX_PATH "${Qt6_DIR};${CMAKE_PREFIX_PATH}")
set(Qt6_INCLUDE_DIRS ${Qt6_DIR}/msvc2019_64/include)
set(Qt6_LIB_DIR ${Qt6_DIR}/msvc2019_64/lib)
set(Qt6_LIBRARIES Qt6::Widgets;Qt6::Core;Qt6::Gui)
include_directories(${Qt6_INCLUDE_DIRS})
link_directories(${Qt6_LIB_DIR})
link_libraries(${Qt6_LIBRARIES})
message(STATUS "Qt6_INCLUDE_DIRS: ${Qt6_INCLUDE_DIRS}")
message(STATUS "Qt6_LIB_DIR: ${Qt6_LIB_DIR}")
message(STATUS "Qt6_LIBRARIES: ${Qt6_LIBRARIES}")

# OpenCV 설정
set(OpenCV_DIR "C:/opencv")
set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH};${OpenCV_DIR}/sources/cmake") #Find<Module>.cmake
set(CMAKE_PREFIX_PATH "${CMAKE_PREFIX_PATH};${OpenCV_DIR}") #CMakeLists.txt
#find_package(OpenCV REQUIRED COMPONENTS core imgproc highgui dnn features2d calib3d imgcodecs ml video videoio objdetect opencv_photo)
find_package(OpenCV REQUIRED) 
set(OpenCV_LIBRARIES 
    cudaarithm cudaimgproc cudafilters imgcodecs core imgproc dnn 
    cudawarping cudacodec cudabgsegm cudafeatures2d cudalegacy features2d calib3d ml 
    video videoio objdetect photo ${OpenCV_LIBRARIES}
)
set(CMAKE_PREFIX_PATH "${OpenCV_DIR};${CMAKE_PREFIX_PATH}")
set(OpenCV_INCLUDE_DIRS "${OpenCV_DIR}/install/include" "${OpenCV_DIR}/include" "${OpenCV_INCLUDE_DIRS}")
set(OpenCV_LIB_DIR "${OpenCV_DIR}/lib/${CMAKE_BUILD_TYPE}")
set(OpenCV_BIN_DIR "${OpenCV_DIR}/x64/vc16/bin")
set(OpenCV_BIN_DIR_TYPE "${OpenCV_DIR}/bin/${CMAKE_BUILD_TYPE}")
set(OpenCV_LIB_ALL ${OpenCV_LIBRARIES};${OpenCV_LIBS})

set(OpenCV_LINK_LIBS "")
set(OpenCV_DLLS "")
foreach(lib ${OpenCV_LIB_ALL})    
    if(CMAKE_BUILD_TYPE MATCHES Debug)
        if("${OpenCV_DLLS}" STREQUAL "")
            list(APPEND OpenCV_LINK_LIBS ${OpenCV_BIN_DIR}/opencv_world4100d.lib)
            list(APPEND OpenCV_DLLS ${OpenCV_BIN_DIR}/opencv_world4100d.dll)
        endif()
        if(${lib} MATCHES "^opencv_")
            list(APPEND OpenCV_LINK_LIBS "${lib}4100d.lib")
            list(APPEND OpenCV_DLLS "${OpenCV_BIN_DIR_TYPE}/${lib}4100d.dll")
        else()
            list(APPEND OpenCV_LINK_LIBS "opencv_${lib}4100d.lib")
            list(APPEND OpenCV_DLLS "${OpenCV_BIN_DIR_TYPE}/opencv_${lib}4100d.dll")
        endif()
    else()
        if("${OpenCV_DLLS}" STREQUAL "")
            list(APPEND OpenCV_LINK_LIBS ${OpenCV_BIN_DIR}/opencv_world4100.lib)
            list(APPEND OpenCV_DLLS ${OpenCV_BIN_DIR}/opencv_world4100.dll)
        endif()
        if(${lib} MATCHES "^opencv_")
            list(APPEND OpenCV_LINK_LIBS "${lib}4100.lib")
            list(APPEND OpenCV_DLLS "${OpenCV_BIN_DIR_TYPE}/${lib}4100.dll")
        else()
            list(APPEND OpenCV_LINK_LIBS "opencv_${lib}4100.lib")
            list(APPEND OpenCV_DLLS "${OpenCV_BIN_DIR_TYPE}/opencv_${lib}4100.dll")
        endif()
    endif()      
endforeach()
#foreach(lib1 ${OpenCV_LINK_LIBS})
#    message(STATUS "${lib1}")
#endforeach()
#foreach(lib2 ${OpenCV_DLLS})
#    message(STATUS "${lib2}")
#endforeach()
include_directories(${OpenCV_INCLUDE_DIRS})
link_directories(${OpenCV_LIB_DIR} ${OpenCV_LIB_DIR_DEBUG} ${OpenCV_LIB_DIR_RELEASE})
link_libraries(${OpenCV_LINK_LIBS} ${OpenCV_DLLS})
message(STATUS "OpenCV_INCLUDE_DIRS: ${OpenCV_INCLUDE_DIRS}")
message(STATUS "OpenCV_LIB_DIR: ${OpenCV_LIB_DIR}")
message(STATUS "OpenCV_LINK_LIBS: ${OpenCV_LINK_LIBS}")

# CUDA 설정"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1\lib\cmake\thrust\FindTBB.cmake"
set(CUDAToolkit_DIR "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.1")
set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH};${CUDAToolkit_DIR}/lib/cmake") #Find<Module>.cmake
set(CMAKE_PREFIX_PATH "${CMAKE_PREFIX_PATH};${CUDAToolkit_DIR}") #CMakeLists.txt
find_package(CUDAToolkit REQUIRED)
set(CUDAToolkit_LIBRARIES 
    cudaarithm cudafilters cudawarping cudacodec cudafeatures2d cudaimgproc cudart_static cuda
    CUDA::cudart CUDA::cuda_driver CUDA::nvrtc CUDA::cublas CUDA::curand CUDA::cufft
)
# ${CUDAToolkit_INCLUDE_DIRS} C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.1/include
set(CUDAToolkit_LIB_DIR "${CUDAToolkit_DIR}/lib/x64")
set(CUDA_NVCC_EXECUTABLE "${CUDAToolkit_DIR}/bin/nvcc.exe")
set(CUDA_ARCHITECTURES "89")
set(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS} -std=c++20 --expt-relaxed-constexpr -gencode arch=compute_89,code=sm_89)
#set(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS} -std=c++20 --expt-relaxed-constexpr) # -gencode : torch의 TORCH_CUDA_ARCH_LIST과 함깨 사용하지 말것
include_directories("${CUDAToolkit_INCLUDE_DIRS}")
link_directories("${CUDAToolkit_LIB_DIR}")
link_libraries("${CUDAToolkit_LIBRARIES}")
message(STATUS "CUDAToolkit_INCLUDE_DIRS: ${CUDAToolkit_INCLUDE_DIRS}")
message(STATUS "CUDAToolkit_LIB_DIR: ${CUDAToolkit_LIB_DIR}")
message(STATUS "CUDAToolkit_LIBRARIES: ${CUDAToolkit_LIBRARIES}")




# CUDNN 설정
set(CUDNN_DIR "C:/Program Files/NVIDIA/CUDNN/v9.1")
set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH};${CUDNN_DIR}/cmake") #Find<Module>.cmake
set(CMAKE_PREFIX_PATH "${CMAKE_PREFIX_PATH};${CUDNN_DIR}") #CMakeLists.txt
#find_package(CUDNN REQUIRED) -- error occured
set(USE_CUDNN ON CACHE BOOL "Use CUDNN for deep learning") 
set(cuDNN_INCLUDE_DIR "${CUDNN_DIR}/include/12.4")
set(CUDNN_BIN "${CUDNN_DIR}/bin/12.4" ${CUDNN_BIN})
set(cuDNN_LIB_DIR "${CUDNN_DIR}/lib/12.4/x64" ${cuDNN_LIB_DIR})
set(cuDNN_LIBRARY "${CUDNN_DIR}/lib/12.4/x64/cudnn.lib" ${cuDNN_LIBRARY})
set(CUDNN_LIBRARIES "${CUDNN_DIR}/lib/12.4/x64/cudnn.lib" ${CUDNN_LIBRARIES})
include_directories("${cuDNN_INCLUDE_DIR}")
link_directories("${cuDNN_LIB_DIR}")
link_libraries("${CUDNN_LIBRARIES}")
message(STATUS "USE_CUDNN : ${USE_CUDNN}")
message(STATUS "CUDNN_INCLUDE_DIR : ${cuDNN_INCLUDE_DIR}") #C:/Program Files/NVIDIA/CUDNN/v9.1/include/12.4;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.1/include
message(STATUS "CUDNN_BIN : ${CUDNN_BIN}") # C:/Program Files/NVIDIA/CUDNN/v9.1/bin/12.4
message(STATUS "cuDNN_LIBRARY : ${cuDNN_LIBRARY}") #C:/Program Files/NVIDIA/CUDNN/v9.1/lib/12.4/x64
message(STATUS "CUDNN_LIBRARIES : ${CUDNN_LIBRARIES}") #C:/Program Files/NVIDIA/CUDNN/v9.1/lib/12.4/x64/cudnn.lib


# GStreamer 설정
set(GSTREAMER_DIR "C:/gstreamer/1.0/msvc_x86_64")
#set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH};${GSTREAMER_DIR}/cmake") #Find<Module>.cmake --cmake 폴더 없음
set(CMAKE_PREFIX_PATH "${CMAKE_PREFIX_PATH};${GSTREAMER_DIR}") #CMakeLists.txt
find_package(GStreamer REQUIRED) # 호출패이키명의 대소문자를 확실히 입력
# C:/gstreamer/1.0/msvc_x86_64/include/gstreamer-1.0;C:/gstreamer/1.0/msvc_x86_64/include/glib-2.0;C:/gstreamer/1.0/msvc_x86_64/lib/glib-2.0/include
set(GLIB2_INCLUDE_DIRS "${GSTREAMER_DIR}/include/glib-2.0") #C:/gstreamer/1.0/msvc_x86_64/include/glib-2.0
set(GLIB2_LIBRARIES "${GSTREAMER_DIR}/lib/glib-2.0.lib") #C:/gstreamer/1.0/msvc_x86_64/lib/glib-2.0.lib
set(GTHREAD2_LIBRARIES "${GSTREAMER_DIR}/lib/gthread-2.0.lib") #C:/gstreamer/1.0/msvc_x86_64/lib/gthread-2.0.lib
set(GSTREAMER_INCLUDE_DIRS "${GSTREAMER_DIR}/include/gstreamer-1.0" "${GSTREAMER_DIR}/include/glib-2.0" "${GSTREAMER_DIR}/lib/glib-2.0/include" ${GSTREAMER_INCLUDE_DIRS} ${GLIB2_INCLUDE_DIRS})
set(GSTREAMER_LIB_DIRS "${GSTREAMER_DIR}/lib") #C:/gstreamer/1.0/msvc_x86_64/lib
set(GSTREAMER_LIBRARIES gstreamer-1.0 gobject-2.0.lib glib-2.0.lib gstapp-1.0.lib gstbase-1.0.lib gstvideo-1.0.lib ${GLIB2_LIBRARIES} ${GTHREAD2_LIBRARIES})
include_directories(${GSTREAMER_INCLUDE_DIRS})
link_directories(${GSTREAMER_LIB_DIRS})
link_libraries(${GSTREAMER_LIBRARIES})
# GLib 및 GThread 라이브러리를 찾고 연결
#find_library(TMP_VALUE NAMES glib-2.0 PATHS ${GSTREAMER_LIB_DIRS}) # C:/gstreamer/1.0/msvc_x86_64/lib/glib-2.0.lib
message(STATUS "GLIB2_INCLUDE_DIRS : ${GLIB2_INCLUDE_DIRS}")
message(STATUS "GLIB2_LIBRARIES : ${GLIB2_LIBRARIES}")
message(STATUS "GTHREAD2_LIBRARIES : ${GTHREAD2_LIBRARIES}")
message(STATUS "GSTREAMER_INCLUDE_DIRS : ${GSTREAMER_INCLUDE_DIRS}")
message(STATUS "GSTREAMER_LIB_DIRS : ${GSTREAMER_LIB_DIRS}")
message(STATUS "GSTREAMER_LIBRARIES : ${GSTREAMER_LIBRARIES}")
if(NOT GLIB2_LIBRARIES)
    message(FATAL_ERROR "Could not find GLIB2_LIBRARIES")
endif()
if(NOT GTHREAD2_LIBRARIES)
    message(FATAL_ERROR "Could not find GTHREAD2_LIBRARIES")
endif()



# LibTorch 설정
set(Torch_DIR "C:/libtorch")
set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH}" "${Torch_DIR}/cmake" "${Torch_DIR}/libtorch/share/cmake") #Find<Module>.cmake --cmake 폴더 없음
set(CMAKE_PREFIX_PATH "${CMAKE_PREFIX_PATH}" "${Torch_DIR}") #CMakeLists.txt
find_package(Torch REQUIRED)
#CUDA 아키텍처 플래그를 설정
set(TORCH_CUDA_ARCH_LIST "8.9") # NVIDIA GeForce RTX 4060 8.9 Ada Lovelace 아키텍처를 기반 compute capability 8.9를 지원
#cuda_select_nvcc_arch_flags(ARCH_FLAGS ${TORCH_CUDA_ARCH_LIST}) 지원하지않아
#C:\libtorch\share\cmake\Caffe2\public\utils.cmake 수정
#cuda_select_nvcc_arch_flags(${store_var} ${TORCH_CUDA_ARCH_LIST})
# => set(TORCH_CUDA_ARCH_LIST ${TORCH_CUDA_ARCH_LIST})
set(Torch_INCLUDE_DIRS "${Torch_DIR}/include" "${Torch_DIR}/libtorch/include" "${Torch_INCLUDE_DIRS}")
set(Torch_BIN "${Torch_DIR}/bin" "${Torch_DIR}/lib")
set(Torch_LIB_DIR "${Torch_DIR}/lib" "${Torch_LIB_DIR}")
set(Torch_LIBRARY "${Torch_DIR}/lib/torch.lib" ${Torch_LIBRARY})
set(Torch_LIBRARIES "${Torch_DIR}/lib/torch.lib" ${Torch_LIBRARIES})
include_directories("${Torch_INCLUDE_DIRS}")
link_directories("${Torch_LIB_DIR}")
link_libraries("${Torch_LIBRARIES}")
message(STATUS "Torch_DIR : ${Torch_DIR}")
message(STATUS "Torch_INCLUDE_DIRS : ${Torch_INCLUDE_DIRS}")
message(STATUS "Torch_BIN : ${Torch_BIN}")
message(STATUS "Torch_LIB_DIR : ${Torch_LIB_DIR}")
message(STATUS "Torch_LIBRARY : ${Torch_LIBRARY}")
message(STATUS "Torch_LIBRARIES : ${Torch_LIBRARIES}")


# flatbuffers 설정
set(FLATBUFFERS_DIR "C:/flatbuffers")
set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH}" "${FLATBUFFERS_DIR}/Cmake") #Find<Module>.cmake --cmake 폴더 없음
set(CMAKE_PREFIX_PATH "${CMAKE_PREFIX_PATH}" "${FLATBUFFERS_DIR}") #CMakeLists.txt
set(FLATBUFFERS_BIN "${FLATBUFFERS_DIR}/build/${CMAKE_BUILD_TYPE}")
set(FLATBUFFERS_FLATC_EXECUTABLE "${FLATBUFFERS_BIN}/flatc.exe") #find_package 이전에 설정할것
find_package(FlatBuffers REQUIRED)
set(FLATBUFFERS_INCLUDE_DIRS "${FLATBUFFERS_DIR}/include" "${FLATBUFFERS_INCLUDE_DIRS}")
set(FLATBUFFERS_LIB_DIR "${FLATBUFFERS_DIR}/build/${CMAKE_BUILD_TYPE}" "${FLATBUFFERS_LIB_DIR}")
set(FLATBUFFERS_LIBRARY "${FLATBUFFERS_DIR}/build/${CMAKE_BUILD_TYPE}/flatbuffers.lib" ${FLATBUFFERS_LIBRARY})
set(FLATBUFFERS_LIBRARIES "${FLATBUFFERS_DIR}/build/${CMAKE_BUILD_TYPE}/flatbuffers.lib" ${FLATBUFFERS_LIBRARIES})
include_directories("${FLATBUFFERS_INCLUDE_DIR}")
link_directories("${FLATBUFFERS_LIB_DIR}")
link_libraries("${FLATBUFFERS_LIBRARIES}")
message(STATUS "FLATBUFFERS_DIR : ${FLATBUFFERS_DIR}")
message(STATUS "FLATBUFFERS_INCLUDE_DIRS : ${FLATBUFFERS_INCLUDE_DIRS}")
message(STATUS "FLATBUFFERS_BIN : ${FLATBUFFERS_BIN}")
message(STATUS "FLATBUFFERS_LIB_DIR : ${FLATBUFFERS_LIB_DIR}")
message(STATUS "FLATBUFFERS_LIBRARY : ${FLATBUFFERS_LIBRARY}")
message(STATUS "FLATBUFFERS_LIBRARIES : ${FLATBUFFERS_LIBRARIES}")



# tensorflow 설정
# 헤더 파일 경로 포함
#set(tensorflow_ROOT_DIR "C:/tensorflow")
#include_directories(
#    ${tensorflow_ROOT_DIR}
#    "${tensorflow_ROOT_DIR}/third_party/xla"
#    "${tensorflow_ROOT_DIR}/third_party/eigen3")
# 라이브러리 생성
#set(tensorflow_SOURCES
#    ${tensorflow_ROOT_DIR}/tensorflow/core/util/proto/proto_utils.cc
#    ${tensorflow_ROOT_DIR}/tensorflow/core/framework/shape_inference.cc
#)
#add_library(tensorflow_util_proto ${tensorflow_SOURCES})

# ONNX 설정

set(ONNX_ROOT "C:/onnx")
set(CMAKE_PREFIX_PATH "${ONNX_DIR};${CMAKE_PREFIX_PATH}")
set(onnx_DIR "${ONNX_ROOT}/build") # ONNXConfig.cmake
set(onnx_proto "${ONNX_ROOT}/onnx")
include_directories("${ONNX_ROOT}")
link_directories("${ONNX_ROOT}/build/lib/pkgconfig")

# Protobuf 설정 버전 4.25.1
set(Protobuf_INCLUDE_DIR "C:/protobuf/src")
find_package(Protobuf REQUIRED)
include_directories(${PROTOBUF_INCLUDE_DIRS})
link_directories(${PROTOBUF_LIBRARY_DIRS})

# GSL 설정 추가
set(GSL_ROOT "${CMAKE_PREFIX_PATH}/gsl_x64-windows")
set(GSL_INCLUDE_DIR "${GSL_ROOT}/include")
set(GSL_LIBRARY "${GSL_ROOT}/lib")
set(GSL_CBLAS_LIBRARY "${GSL_LIBRARY}/gslcblas.lib")
find_package(GSL REQUIRED)
include_directories(${GSL_INCLUDE_DIRS})
link_directories(${GSL_LIBRARY_DIRS})


# ONNX Runtime 설정
set(ONNX_RUNTIME_ROOT "C:/onnxruntime")
set(onnxruntime_dir "${ONNX_RUNTIME_ROOT}/build/Debug")
set(onnxruntime_include_dir 
    "${ONNX_RUNTIME_ROOT}"
    "${ONNX_RUNTIME_ROOT}/cmake/build/_deps/safeint-src"
    "${ONNX_RUNTIME_ROOT}/cmake/build/_deps/mp11-src/include"
    "${ONNX_RUNTIME_ROOT}/cmake/build/_deps/onnx-src/onnx"
    "${ONNX_RUNTIME_ROOT}/cmake/build"
    "${ONNX_RUNTIME_ROOT}/build"
    "${ONNX_RUNTIME_ROOT}/onnxruntime"
    "${ONNX_RUNTIME_ROOT}/build/_deps/mp11-src/include"
    "${ONNX_RUNTIME_ROOT}/build/_deps/safeint-src"
    "${ONNX_RUNTIME_ROOT}/include/onnxruntime"
    "${ONNX_RUNTIME_ROOT}/include/onnxruntime/core/session")
include_directories("${onnxruntime_include_dir}")
link_directories("${onnxruntime_dir}")

# Vulkan 설정
set(Vulkan_SDK "C:/VulkanSDK/1.3.290.0")
set(Vulkan_BIN "${Vulkan_SDK}/Bin")
set(Vulkan_INCLUDE_DIR "${Vulkan_SDK}/Include")
set(Vulkan_LIBRARY "${Vulkan_SDK}/Lib")
find_package(Vulkan REQUIRED)
message(STATUS "Vulkan INCLUDE found: ${Vulkan_INCLUDE_DIRS}")
message(STATUS "Vulkan LIBRARY found: ${Vulkan_LIBRARIES}")
find_program(GLSLC_EXECUTABLE glslc PATHS ${Vulkan_BIN} NO_DEFAULT_PATH)
find_program(GLSLANGVALIDATOR_EXECUTABLE glslangValidator PATHS ${Vulkan_BIN} NO_DEFAULT_PATH)
if(NOT GLSLC_EXECUTABLE)
    message(FATAL_ERROR "glslc executable not found. Please ensure Vulkan SDK is installed correctly.")
endif()
if(NOT GLSLANGVALIDATOR_EXECUTABLE)
    message(FATAL_ERROR "glslangValidator executable not found. Please ensure Vulkan SDK is installed correctly.")
endif()
message(STATUS "glslc found: ${GLSLC_EXECUTABLE}")
message(STATUS "glslangValidator found: ${GLSLANGVALIDATOR_EXECUTABLE}")

# IPP 설정
set(IPP_ROOT "C:/Program Files (x86)/Intel/oneAPI/ipp/2021.11")
include_directories("${IPP_ROOT}/include")
link_directories("${IPP_ROOT}/lib")



# IPLIB 설정
set(IPLIB_ROOT "C:/myLab/Project1/Project1/imageProcessingLib")
set(IPLIB_LIBRARY "${IPLIB_ROOT}/build/${CMAKE_BUILD_TYPE}/imageProcessingLib.lib")
set(IPLIB_DLL "${IPLIB_ROOT}/build/${CMAKE_BUILD_TYPE}/imageProcessingLib.dll")
include_directories("${IPLIB_ROOT}")
link_directories(
    "${IPLIB_ROOT}/build/bin/${CMAKE_BUILD_TYPE}" #imageProcessingLib.lib
    "${IPLIB_ROOT}/build/lib/${CMAKE_BUILD_TYPE}" #imageProcessingLib.lib
)
link_libraries("${IPLIB_LIBRARY}")

# Abseil 라이브러리 설정
# Google이 개발하고 관리하는 오픈 소스 C++ 라이브러리
set(ABSEIL_ROOT "C:/abseil-cpp")
include_directories("${ABSEIL_ROOT}")
link_directories("${ABSEIL_ROOT}/build/lib")


# date 설정
set(DATE_ROOT "C:/date")
set(DATE_INCLUDE_DIR "${DATE_ROOT}/build/${CMAKE_BUILD_TYPE}")
include_directories("${DATE_ROOT}/include")
link_directories("${DATE_INCLUDE_DIR}")



# cuSPARSELt 설정
set(USE_CUSPARSELT ON CACHE BOOL "Use USE_CUSPARSELT")
message(STATUS "USE_CUSPARSELT: ${USE_CUSPARSELT}")
set(CUSPARSELT_INCLUDE_DIR "${CUDA_TOOLKIT_INCLUDE_DIR}")
set(CUSPARSELT_LIB_DIR "${CUDA_TOOLKIT_LIB_DIR}")
set(CUSPARSELT_LIBRARY "${CUDA_TOOLKIT_LIB_DIR}/cusparse.lib")



# Thread 설정
find_package(Threads REQUIRED)

# CAFFE2 설정
set(CAFFE2_USE_CUDNN ON CACHE BOOL "Use cuDNN in Caffe2")
message(STATUS "CAFFE2_USE_CUDNN: ${CAFFE2_USE_CUDNN}")
if(CAFFE2_USE_CUDNN)
  message(STATUS "cuDNN is enabled for Caffe2.")
else()
  message(STATUS "cuDNN is not enabled for Caffe2.")
endif()

# Qt 래핑 파일 생성
qt6_wrap_cpp(MOC_FILES
    MainWindow.h
    ImageProcessor.h
)

# 실행 파일 추가
add_executable(Project1
    main.cpp
    MainWindow.cpp
    MainWindow.h
    MainWindow.ui
    ImageProcessor.cpp
    ImageProcessor.h
    ImageProcessing.cu
    ImageProcessing.cuh
    ${MOC_FILES}
)



target_link_libraries(Project1

    ${Qt6_LIBRARIES}

    ${OpenCV_LINK_LIBS}

    ${GSTREAMER_LIBRARIES}

    ${TORCH_LIBRARIES}

    flatbuffers

    ${ONNX_RUNTIME_LIB}  # ONNX Runtime 라이브러리

    ${ONNX_LIB}  # ONNX 라이브러리

    ${Protobuf_LIB}  # Protobuf 라이브러리

    ${CUDAToolkit_LIBRARIES}  # CUDA Toolkit 라이브러리

    ${CUDNN_LIBRARIES}  # cuDNN 라이브러리

    ippcc.lib
    ippcore.lib
    ippvm.lib
    ipps.lib
    ippi.lib
    ippcv.lib  # Intel IPP 라이브러리

    nppc
    nppial
    nppicc
    nppidei
    nppif
    nppig
    nppim
    nppist
    nppisu
    nppitc
    npps  # NVIDIA Performance Primitives (NPP) 라이브러리

    Threads::Threads  # POSIX 스레드 라이브러리

    ${IPLIB_LIBRARY}  # 사용자 정의 라이브러리 (경로가 명시된 라이브러리)
)

# CUDA 아키텍처 플래그 적용
target_compile_options(Project1 PRIVATE ${ARCH_FLAGS})

# 파일 인코딩 설정 추가
add_compile_options("$<$<CXX_COMPILER_ID:MSVC>:/utf-8>")

# OpenMP 설정
find_package(OpenMP REQUIRED)
if(OpenMP_CXX_FOUND)
    target_link_libraries(Project1 OpenMP::OpenMP_CXX)
endif()

file(COPY ${IPLIB_DLL}
     DESTINATION "${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}"
)
# C:/myLab/Project1/Project1/build/Debug
message(STATUS "IPLIB_DLL : ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}")

file(COPY ${IPLIB_LIBRARY}
     DESTINATION "${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}"
)
# C:/myLab/Project1/Project1/build/Debug
message(STATUS "IPLIB_LIBRARY : ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}")

#OpenCV DLL COPY
foreach(dll ${OpenCV_DLLS})
    add_custom_command(TARGET Project1 POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_if_different
        "${dll}" "$<TARGET_FILE_DIR:Project1>"
    )
endforeach()

PS C:\onnxruntime\build> cmake -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=Debug ../cmake
CMake Deprecation Warning at CMakeLists.txt:14 (cmake_policy):
  The OLD behavior for policy CMP0104 will be removed from a future version
  of CMake.

  The cmake-policies(7) manual explains that the OLD behaviors of all
  policies are deprecated and that a policy should be set to OLD only under
  specific short-term circumstances.  Projects should be ported to the NEW
  behavior and not rely on setting a policy to OLD.


-- Selecting Windows SDK version 10.0.22621.0 to target Windows 10.0.22631.
-- The C compiler identification is MSVC 19.29.30154.0
-- The CXX compiler identification is MSVC 19.29.30154.0
-- The ASM compiler identification is MSVC
-- Found assembler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/cl.exe
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/cl.exe - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/cl.exe - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found Protobuf: C:/protobuf/build/Release/libprotobuf.lib (found version "4.22.0")
CMake Warning (dev) at CMakeLists.txt:75 (include):
  Policy CMP0145 is not set: The Dart and FindDart modules are removed.  Run
  "cmake --help-policy CMP0145" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning (dev) at C:/Program Files/CMake/share/cmake-3.29/Modules/Dart.cmake:47 (message):
  Policy CMP0145 is not set: The Dart and FindDart modules are removed.  Run
  "cmake --help-policy CMP0145" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.
Call Stack (most recent call first):
  CMakeLists.txt:75 (include)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- The ASM_MASM compiler identification is MSVC
-- Found assembler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/ml64.exe
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - not found
-- Found Threads: TRUE
-- Found Patch: C:/Program Files/Git/usr/bin/patch.exe
Patch found: C:/Program Files/Git/usr/bin/patch.exe
Loading Dependencies URLs ...
Loading Dependencies ...
-- Performing Test ABSL_INTERNAL_AT_LEAST_CXX17
-- Performing Test ABSL_INTERNAL_AT_LEAST_CXX17 - Success
-- Performing Test ABSL_INTERNAL_AT_LEAST_CXX20
-- Performing Test ABSL_INTERNAL_AT_LEAST_CXX20 - Failed
-- Abseil source dir:C:/onnxruntime/build/_deps/abseil_cpp-src
# date: USE_SYSTEM_TZ_DB ON
# date: MANUAL_TZ_DB OFF
# date: USE_TZ_DB_IN_DOT OFF
# date: BUILD_SHARED_LIBS OFF
# date: ENABLE_DATE_TESTING OFF
# date: DISABLE_STRING_VIEW OFF
--
-- 3.21.12.0
-- Performing Test protobuf_HAVE_LD_VERSION_SCRIPT
-- Performing Test protobuf_HAVE_LD_VERSION_SCRIPT - Success
-- Found ZLIB: C:/zlib/build/Release/zlib.lib (found version "1.2.12")
CMake Deprecation Warning at C:/onnxruntime/build/_deps/nlohmann_json-src/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 3.5 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


-- Using the single-header code from C:/onnxruntime/build/_deps/nlohmann_json-src/single_include/
-- Proceeding with version: 23.5.26.0
-- Looking for _strtof_l
-- Looking for _strtof_l - found
-- Looking for _strtoui64_l
-- Looking for _strtoui64_l - found
-- CMAKE_CXX_FLAGS: /DWIN32 /D_WINDOWS /EHsc /Zc:__cplusplus /EHsc /wd26812 -DEIGEN_HAS_C99_MATH -DCPUINFO_SUPPORTED
CMake Deprecation Warning at C:/onnxruntime/build/_deps/pytorch_clog-src/deps/clog/CMakeLists.txt:1 (CMAKE_MINIMUM_REQUIRED):
  Compatibility with CMake < 3.5 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


CMake Warning (dev) at C:/onnxruntime/build/_deps/onnx-src/CMakeLists.txt:107 (find_package):
  Policy CMP0148 is not set: The FindPythonInterp and FindPythonLibs modules
  are removed.  Run "cmake --help-policy CMP0148" for policy details.  Use
  the cmake_policy command to set the policy and suppress this warning.

This warning is for project developers.  Use -Wno-dev to suppress it.

-- Found PythonInterp: C:/Users/nayou/AppData/Local/Programs/Python/Python312/python.exe (found version "3.12.3")
Generated: C:/onnxruntime/build/_deps/onnx-build/onnx/onnx-ml.proto
Generated: C:/onnxruntime/build/_deps/onnx-build/onnx/onnx-operators-ml.proto
Generated: C:/onnxruntime/build/_deps/onnx-build/onnx/onnx-data.proto
--
-- ******** Summary ********
--   CMake version                     : 3.29.3
--   CMake command                     : C:/Program Files/CMake/bin/cmake.exe
--   System                            : Windows
--   C++ compiler                      : C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/cl.exe
--   C++ compiler version              : 19.29.30154.0
--   CXX flags                         : /DWIN32 /D_WINDOWS /EHsc /Zc:__cplusplus /EHsc /wd26812 -DEIGEN_HAS_C99_MATH -DCPUINFO_SUPPORTED /EHsc /wd26812
--   Build type                        : Debug
--   Compile definitions               : ORT_ENABLE_STREAM;ORT_NO_RTTI;EIGEN_MPL2_ONLY;EIGEN_HAS_CONSTEXPR;EIGEN_HAS_VARIADIC_TEMPLATES;EIGEN_HAS_CXX11_MATH;EIGEN_HAS_CXX11_ATOMIC;EIGEN_STRONG_INLINE=inline;__STDC_FORMAT_MACROS
--   CMAKE_PREFIX_PATH                 :
--   CMAKE_INSTALL_PREFIX              : C:/Program Files (x86)/onnxruntime
--   CMAKE_MODULE_PATH                 : C:/onnxruntime/cmake/external
--
--   ONNX version                      : 1.16.1
--   ONNX NAMESPACE                    : onnx
--   ONNX_USE_LITE_PROTO               : ON
--   USE_PROTOBUF_SHARED_LIBS          : OFF
--   Protobuf_USE_STATIC_LIBS          : ON
--   ONNX_DISABLE_EXCEPTIONS           : OFF
--   ONNX_DISABLE_STATIC_REGISTRATION  : OFF
--   ONNX_WERROR                       : OFF
--   ONNX_BUILD_TESTS                  : OFF
--   ONNX_BUILD_BENCHMARKS             : OFF
--   ONNX_BUILD_SHARED_LIBS            :
--   BUILD_SHARED_LIBS                 : OFF
--
--   Protobuf compiler                 : C:/protobuf/build/Release/protoc.exe
--   Protobuf includes                 : C:/protobuf/build/install/include
--   Protobuf libraries                : C:/protobuf/build/Release/libprotobuf.lib
--   BUILD_ONNX_PYTHON                 : OFF
Finished fetching external dependencies
-- Found Git: C:/Program Files/Git/cmd/git.exe (found version "2.45.1.windows.1")
fatal: detected dubious ownership in repository at 'C:/onnxruntime'
'C:/onnxruntime' is owned by:
        BUILTIN/Administrators (S-1-5-32-544)
but the current user is:
        KIMNAYOOUNG/nayou (S-1-5-21-3734693049-4166439889-937236257-1001)
To add an exception for this directory, call:

        git config --global --add safe.directory C:/onnxruntime
fatal: detected dubious ownership in repository at 'C:/onnxruntime'
'C:/onnxruntime' is owned by:
        BUILTIN/Administrators (S-1-5-32-544)
but the current user is:
        KIMNAYOOUNG/nayou (S-1-5-21-3734693049-4166439889-937236257-1001)
To add an exception for this directory, call:

        git config --global --add safe.directory C:/onnxruntime
CMake Warning at CMakeLists.txt:1649 (message):
  MPI and NCCL are disabled because build is on Windows or USE_NCCL is set to
  OFF.


-- Configuring done (31.3s)
-- Generating done (12.9s)
-- Build files have been written to: C:/onnxruntime/build

Deprecated CMake 정책 경고:

cmake_policy 관련 경고가 몇 가지 나타납니다. 이는 특정 CMake 정책이 향후 버전에서 지원되지 않거나 변경될 예정이라는 경고입니다.
예를 들어, CMP0104, CMP0145, CMP0148 등의 정책이 포함되어 있습니다. 이는 프로젝트 유지 관리자가 새로운 정책을 사용하도록 코드를 업데이트해야 한다는 의미입니다.
경고: FindDart 모듈 제거:

Dart 및 FindDart 모듈이 제거되었으며, 관련된 정책이 설정되지 않았다는 경고입니다. 이는 현재 사용 중인 CMakeLists.txt 파일이 오래된 모듈을 참조하고 있다는 것을 의미합니다.
Git 소유권 문제:

Git 리포지토리에서 dubious ownership(의심스러운 소유권) 문제가 발생했습니다. 현재 사용자와 리포지토리의 소유자가 다르기 때문에 발생하는 문제입니다.
이 문제를 해결하려면 아래 명령어를 사용하여 해당 디렉터리를 안전한 디렉터리로 설정할 수 있습니다:
bash
코드 복사
git config --global --add safe.directory C:/onnxruntime

Windows에서 MPI와 NCCL 비활성화:

MPI와 NCCL이 Windows에서는 비활성화되었음을 알리는 메시지가 있습니다. 이는 Windows 환경에서의 제한 사항을 나타냅니다.

PS C:\onnxruntime\build> cmake -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=Debug ../cmake
-- Selecting Windows SDK version 10.0.22621.0 to target Windows 10.0.22631.
CMake Error at CMakeLists.txt:80 (include):
  include could not find requested file:

    Dart
PS C:\> git clone https://github.com/dart-lang/sdk.git
"C:\onnxruntime\cmake\CMakeLists.txt" 수정
# cmake_policy(SET CMP0104 OLD) # 권장되지 않음
# 추가
cmake_policy(SET CMP0104 NEW)
cmake_policy(SET CMP0145 NEW)
cmake_policy(SET CMP0148 NEW)
# Set Dart SDK root 추가
set(DART_ROOT "C:/Dart")

Debug 폴더 생성 안되는 현상
PS C:\onnxruntime\build> Remove-Item -Recurse -Force C:/onnxruntime/build/CMakeCache.txt
PS C:\onnxruntime\build> Remove-Item -Recurse -Force C:/onnxruntime/build/CMakeFiles
PS C:\onnxruntime> Remove-Item -Recurse -Force C:/onnxruntime/build
PS C:\onnxruntime> New-Item -ItemType Directory -Path C:/onnxruntime/build
    디렉터리: C:\onnxruntime
Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----      2024-08-24   오전 7:05                build

PS C:\onnxruntime> cd build
PS C:\onnxruntime\build> cmake -G "Visual Studio 16 2019" ../cmake
"C:\onnxruntime\build\onnxruntime.sln" -> Visual Studio 2019 로 열기 한 후 디버그 모드/릴리즈 모드로 빌드하면 
C:\onnxruntime\build\Debug, C:\onnxruntime\build\Relase 폴더 생성됨

CMake Error at C:/opencv/sources/cmake/FindONNX.cmake:1 (ocv_clear_vars):
  Unknown CMake command "ocv_clear_vars".
Call Stack (most recent call first):
  CMakeLists.txt:267 (find_package)
"C:\opencv\sources\cmake\FindONNX.cmake" 수정
#ocv_clear_vars(HAVE_ONNX) #주석처리
# if(NOT HAVE_ONNX) 주석처리
#  ocv_clear_vars(HAVE_ONNX ORT_LIB ORT_INCLUDE_DIR)
# endif()
# 추가
if(NOT HAVE_ONNX)
  # 수동으로 변수 초기화
  set(HAVE_ONNX)
  set(ORT_LIB)
  set(ORT_INCLUDE_DIR)
endif()
PS C:\onnx\build> cmake -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=Debug ..
PS C:\onnx\build> cmake -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=Release ..
C:\onnx\build에 Debug or Relase 폴더가 생성되지않으면 Visual Studio 2019로 sln파일 열어서
Debug, Relase 모드로 빌드를 해주면 생성이 된다.

gsl 재설치(깃 주소 오류)
GNU Scientific Library (GSL)은 다양한 수학 및 과학 계산을 위한 라이브러리
MSYS2 MinGW 64-bit 쉘을 열고 다음 명령어를 실행하여 패키지를 업데이트
cd /c/
패키지를 업데이트
pacman -Syu
MinGW-w64 및 필요한 도구를 설치
pacman -S mingw-w64-x86_64-gcc mingw-w64-x86_64-make
깃 설치
pacman -S git
깃 로그인
아이디 입력, 패스워드에 Personal Access Token 생성해서 붙여넣기
GitHub에서 Personal Access Token 생성
[순서]
GitHub 계정에 로그인합니다.
우측 상단 프로필 아이콘을 클릭하고 Settings로 이동합니다.
Developer settings를 클릭하고, 왼쪽 메뉴에서 Personal access tokens > **Tokens (classic)**를 선택합니다.
Generate new token 버튼을 클릭합니다.
토큰에 이름을 지정하고, repo (모든 리포지토리에 대한 액세스 권한)와 read
(조직 정보 읽기 권한)와 같은 필요한 권한을 선택합니다.
토큰의 유효 기간을 선택한 후 Generate token 버튼을 클릭합니다.
생성된 토큰을 복사합니다. 이 토큰은 다시 표시되지 않으므로 안전한 곳에 저장하세요.
Git 명령어로 Personal Access Token 사용
GSL 리포지토리를 클론할 때 사용자 이름 대신 GitHub 사용자 이름을 입력하고, 
비밀번호 대신 Personal Access Token을 입력합니다.
다시 클론 명령어를 실행한 후:
git clone https://github.com/gnu/gsl.git
Username for 'https://github.com': 프롬프트가 나오면 GitHub 사용자 이름을 입력합니다.
Password for 'https://<your-email>@github.com': 프롬프트가 나오면, 
복사한 Personal Access Token을 붙여넣습니다.
nayou@kimnayooung MINGW64 /c
# git clone https://github.com/ampl/gsl.git
nayou@kimnayooung MINGW64 /c
# git clone https://github.com/ampl/gsl.git
'gsl'에 복제합니다...
remote: Enumerating objects: 5373, done.
remote: Counting objects: 100% (1071/1071), done.
remote: Compressing objects: 100% (529/529), done.
remote: Total 5373 (delta 576), reused 921 (delta 506), pack-reused 4302 (from 1)
오브젝트를 받는 중: 100% (5373/5373), 13.89 MiB | 10.35 MiB/s, 완료.
델타를 알아내는 중: 100% (2921/2921), 완료.
warning: Clone succeeded, but checkout failed.
You can inspect what was checked out with 'git status'
and retry with 'git restore --source=HEAD :/'
nayou@kimnayooung MINGW64 /c/gsl
# git restore --source=HEAD :/

nayou@kimnayooung MINGW64 /c/gsl
# git config --system core.longpaths true

nayou@kimnayooung MINGW64 /c/gsl
# git reset --hard HEAD
Updating files: 100% (2290/2290), 완료.
HEAD의 현재 위치는 60539d2입니다 Docs: replace direct link by reference
cd /c/
rm -rf gsl
git clone https://github.com/ampl/gsl.git
설치완료
CMake Error at ampl/CMakeLists.txt:6 (add_subdirectory):
  The source directory

    C:/gsl/ampl/thirdparty/asl

  does not contain a CMakeLists.txt file.


CMake Error at ampl/CMakeLists.txt:7 (add_to_folder):
  Unknown CMake command "add_to_folder".

nayou@kimnayooung MINGW64 /c/gsl
# git submodule update --init --recursive
'ampl/thirdparty/asl' 경로에 대해 'ampl/thirdparty/asl' (https://github.com/ampl/asl.git) 하위 모듈 등록
'/c/gsl/ampl/thirdparty/asl'에 복제합니다...
Submodule path 'ampl/thirdparty/asl': checked out 'dd1c4c4e5647ead51169caad280c36a88d0f0237'
"C:\gsl\CMakeLists.txt"
"C:\gsl\ampl\thirdparty\asl\CMakeLists.txt"
두파일의 CMake 버전 에러 -> 3.5로 변경
Debug, Release로 visual studio  2019로 빌드

CMake Error at C:/Program Files/CMake/share/cmake-3.29/Modules/FindPackageHandleStandardArgs.cmake:230 (message):
  Could NOT find GSL (missing: GSL_INCLUDE_DIR GSL_LIBRARY GSL_CBLAS_LIBRARY)
  (found version "")
Call Stack (most recent call first):
  C:/Program Files/CMake/share/cmake-3.29/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE)
  C:/Program Files/CMake/share/cmake-3.29/Modules/FindGSL.cmake:151 (find_package_handle_standard_args)
  CMakeLists.txt:337 (find_package)
#find_package(GSL REQUIRED) 주석처리 후 성공

date date.lib 생성안돼서 재설치
c:/date 삭제
C:\>git clone https://github.com/HowardHinnant/date.git
Cloning into 'date'...
remote: Enumerating objects: 3989, done.
remote: Counting objects: 100% (334/334), done.
remote: Compressing objects: 100% (139/139), done.
remote: Total 3989 (delta 178), reused 254 (delta 155), pack-reused 3655 (from 1)
Receiving objects: 100% (3989/3989), 3.31 MiB | 10.51 MiB/s, done.
Resolving deltas: 100% (2556/2556), done.
C:\date\build>cmake -G "Visual Studio 16 2019" -DCMAKEBUILD_TYPE=Debug ..
C:\date\build>cmake -G "Visual Studio 16 2019" -DCMAKEBUILD_TYPE=Debug ..
-- Selecting Windows SDK version 10.0.22621.0 to target Windows 10.0.22631.
-- The C compiler identification is MSVC 19.29.30154.0
-- The CXX compiler identification is MSVC 19.29.30154.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/cl.exe - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/cl.exe - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
# date: USE_SYSTEM_TZ_DB OFF
# date: MANUAL_TZ_DB OFF
# date: USE_TZ_DB_IN_DOT OFF
# date: BUILD_SHARED_LIBS OFF
# date: ENABLE_DATE_TESTING OFF
# date: DISABLE_STRING_VIEW OFF
-- Configuring done (6.8s)
-- Generating done (0.0s)
CMake Warning:
  Manually-specified variables were not used by the project:

    CMAKEBUILD_TYPE


-- Build files have been written to: C:/date/build
C:\date\build>cmake --build . --config=Debug
.NET Framework용 Microsoft (R) Build Engine 버전 16.11.2+f32259642
Copyright (C) Microsoft Corporation. All rights reserved.

  1>Checking Build System
  Building Custom Rule C:/date/CMakeLists.txt

date.lib 생성안됨
"C:\date\CMakeLists.txt" 분석
BUILD_TZ_LIB 옵션이 켜져야 date-tz 라이브러리가 컴파일되며, 
date-tz 라이브러리는 date.lib와 같은 실제 라이브러리 파일을 생성
C:\date\build>cmake -G "Visual Studio 16 2019" -DBUILD_TZ_LIB=ON ..
Could NOT find CURL (missing: CURL_LIBRARY CURL_INCLUDE_DIR)
CURL 라이브러리를 설치
C:\>git clone https://github.com/curl/curl.git
C:\>cd curl
C:\curl>mkdir build
C:\curl>cd build
C:\curl\build>cmake -G "Visual Studio 16 2019" -DCMAKEBUILD_TYPE=Debug ..
visual studio 2019에서 curl.sln 열어서 빌드

- Could NOT find Libssh2 (missing: LIBSSH2_INCLUDE_DIR LIBSSH2_LIBRARY)
Protocols: dict file ftp gopher http imap ipfs ipns ldap ldaps mqtt pop3 rtsp smb smtp telnet tftp
Features: alt-svc AsynchDNS HSTS IPv6 Largefile libz NTLM threadsafe UnixSockets
-- Enabled SSL backends:

https://packages.msys2.org/package/gettext-devel
pacman -S gettext-devel
/usr/share/gettext/archive.dir.tar.xz

nayou@kimnayooung MINGW64 /c/libidn2
# autoreconf -v -i
autoreconf-2.72: export WARNINGS=
autoreconf-2.72: Entering directory '.'
autoreconf-2.72: running: autopoint
autoreconf-2.72: running: aclocal
configure.ac:175: error: '#' is already registered with AC_CONFIG_FILES.
../autoconf-2.72/lib/autoconf/status.m4:289: AC_CONFIG_FILES is expanded from...
configure.ac:175: the top level
autom4te-2.72: error: /usr/bin/m4 failed with exit status: 1
aclocal-1.17: error: /usr/bin/autom4te-2.72 failed with exit status: 1
autoreconf-2.72: error: aclocal failed with exit status: 1
AC_CONFIG_FILES에 동일한 파일이 여러 번 등록되었거나 중복된 파일명이 들어있기 때문
"C:\libidn2\configure.ac" 수정

nayou@kimnayooung MINGW64 /c/libidn2
autoreconf -v -i
nayou@kimnayooung MINGW64 /c/libidn2
# autoreconf -v -i
autoreconf-2.72: export WARNINGS=
autoreconf-2.72: Entering directory '.'
autoreconf-2.72: running: autopoint
autoreconf-2.72: running: aclocal
configure.ac:175: error: '#' is already registered with AC_CONFIG_FILES.
../autoconf-2.72/lib/autoconf/status.m4:289: AC_CONFIG_FILES is expanded from...
configure.ac:175: the top level
autom4te-2.72: error: /usr/bin/m4 failed with exit status: 1
aclocal-1.17: error: /usr/bin/autom4te-2.72 failed with exit status: 1
autoreconf-2.72: error: aclocal failed with exit status: 1

nayou@kimnayooung MINGW64 /c/libidn2
# touch Makefile.am
"C:\libidn2\Makefile.am" 생성됨
파일 생성: 만약 해당 디렉터리에 Makefile.am 파일이 없다면, 
touch Makefile.am 명령어를 실행하면 빈 Makefile.am 파일이 생성
이미 존재하는 파일의 수정 시간이 갱신

각 Makefile.am생성 후 내용을 입력하고 저장한다.
src/Makefile.am:
bin_PROGRAMS = myprogram
myprogram_SOURCES = main.c utils.c
doc/Makefile.am:
dist_doc_DATA = README.md INSTALL.md
tests/Makefile.am:
check_PROGRAMS = test_program
test_program_SOURCES = test_main.c
examples/Makefile.am:
bin_PROGRAMS = example
example_SOURCES = example.c
lib/Makefile.am:
lib_LIBRARIES = libmylib.a
libmylib_a_SOURCES = mylib.c mylib.h
gl/Makefile.am:
include gnulib.mk
fuzz/Makefile.am:
# Include fuzzing related build files here.
po/Makefile.am:
# Include localization related build files here.
nayou@kimnayooung MINGW64 /c/libidn2
# autoreconf -v -i
nayou@kimnayooung MINGW64 /c/libidn2
# autoreconf -v -i
autoreconf-2.72: export WARNINGS=
autoreconf-2.72: Entering directory '.'
autoreconf-2.72: running: autopoint
autoreconf-2.72: running: aclocal -I m4
autoreconf-2.72: configure.ac: tracing
autoreconf-2.72: running: libtoolize --copy
autoreconf-2.72: configure.ac: not using Intltool
autoreconf-2.72: configure.ac: not using Gtkdoc
autoreconf-2.72: running: aclocal -I m4
autoreconf-2.72: running: /usr/bin/autoconf-2.72
autoreconf-2.72: running: /usr/bin/autoheader-2.72
autoreconf-2.72: running: automake --add-missing --copy --no-force
Makefile.am:1: warning: AM_GNU_GETTEXT used but 'po' not in SUBDIRS
Makefile.am:4: error: 'pkgconfig_DATA' is used but 'pkgconfigdir' is undefined
fuzz/Makefile.am:5: error: 'fuzz_PROGRAMS' is used but 'fuzzdir' is undefined
fuzz/Makefile.am:6: warning: variable 'fuzz_test_SOURCES' is defined but no program or
fuzz/Makefile.am:6: library has 'fuzz_test' as canonical name (possible typo)
fuzz/Makefile.am:8: warning: variable 'fuzz_test_LDADD' is defined but no program or
fuzz/Makefile.am:8: library has 'fuzz_test' as canonical name (possible typo)
configure.ac:150: error: required file 'lib/idn2.h.in' not found
autoreconf-2.72: error: automake failed with exit status: 1

c:/libidn2 하위폴더안에 Makefile.am을 모두 만든다
c:/libidn2/Maekfile.am 수정
c:/libidn2/configure.ac 수정
에러)
Makefile.am:1: warning: AM_GNU_GETTEXT used but 'po' not in SUBDIRS
Makefile.am:4: error: 'pkgconfig_DATA' is used but 'pkgconfigdir' is undefined
수정)
# Root 디렉토리의 Makefile.am
# 이 파일은 프로젝트의 최상위 디렉토리에서 Makefile을 설정합니다.

# Include subdirectories Makefile.am
SUBDIRS = gl gnulib lib m4 po src tests tmpwrk2270 unistring build-aux contrib doc examples fuzz gettext-0.19.8 gettext-0.19.8/os2

# Specify the directory for pkg-config files
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libidn2.pc

# Define ACLOCAL_AMFLAGS for additional macros
ACLOCAL_AMFLAGS = -I m4

# Automake options
AM_GNU_GETTEXT([external])
에러)
fuzz/Makefile.am:5: error: 'fuzz_PROGRAMS' is used but 'fuzzdir' is undefined
fuzz/Makefile.am:6: warning: variable 'fuzz_test_SOURCES' is defined but no program or
fuzz/Makefile.am:6: library has 'fuzz_test' as canonical name (possible typo)
fuzz/Makefile.am:8: warning: variable 'fuzz_test_LDADD' is defined but no program or
fuzz/Makefile.am:8: library has 'fuzz_test' as canonical name (possible typo)
수정)
# fuzz 디렉토리의 Makefile.am
# 이 디렉토리에서 fuzz 테스트를 수행할 수 있습니다.

# Define the fuzz test programs
noinst_PROGRAMS = libidn2_to_ascii_8z_fuzzer libidn2_to_unicode_8z8z_fuzzer

# Source files for the fuzz test programs
libidn2_to_ascii_8z_fuzzer_SOURCES = libidn2_to_ascii_8z_fuzzer.c
libidn2_to_unicode_8z8z_fuzzer_SOURCES = libidn2_to_unicode_8z8z_fuzzer.c

# Linker flags for the fuzz test programs
libidn2_to_ascii_8z_fuzzer_LDADD = ../lib/libidn2.la
libidn2_to_unicode_8z8z_fuzzer_LDADD = ../lib/libidn2.la

# Additional files needed for fuzzing
EXTRA_DIST = libidn2_to_ascii_8z_fuzzer.dict libidn2_to_unicode_8z8z_fuzzer.dict README.md run-afl.sh run-clang.sh suppressions.valgrind libidn2_register_fuzzer.in libidn2_to_ascii_8z_fuzzer.in libidn2_to_ascii_8z_fuzzer.repro libidn2_to_unicode_8z8z_fuzzer.in fuzzer.h get_all_corpora get_ossfuzz_corpora libidn2_register_fuzzer.c
에러)
configure.ac:150: error: required file 'lib/idn2.h.in' not found
수정)
'lib/idn2.h.in' 파일을만든다.
에러)
autoreconf-2.72: error: automake failed with exit status: 1

nayou@kimnayooung MINGW64 /c/libidn2
# autoreconf -v -i
autoreconf-2.72: export WARNINGS=
autoreconf-2.72: Entering directory '.'
autoreconf-2.72: running: autopoint
autoreconf-2.72: running: aclocal -I m4
autoreconf-2.72: configure.ac: tracing
autoreconf-2.72: running: libtoolize --copy
autoreconf-2.72: configure.ac: not using Intltool
autoreconf-2.72: configure.ac: not using Gtkdoc
autoreconf-2.72: running: aclocal -I m4
autoreconf-2.72: running: /usr/bin/autoconf-2.72
autoreconf-2.72: running: /usr/bin/autoheader-2.72
autoreconf-2.72: running: automake --add-missing --copy --no-force
autoreconf-2.72: Leaving directory '.'

nayou@kimnayooung MINGW64 /c/libidn2
# automake --version
autoconf --version
automake (GNU automake) 1.17
Features: subsecond-mtime

Copyright (C) 2024 Free Software Foundation, Inc.
License GPLv2+: GNU GPL version 2 or later
  <https://gnu.org/licenses/gpl-2.0.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Tom Tromey <tromey@redhat.com>
       and Alexandre Duret-Lutz <adl@gnu.org>.
autoconf (GNU Autoconf) 2.72
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+/Autoconf: GNU GPL version 3 or later
<https://gnu.org/licenses/gpl.html>, <https://gnu.org/licenses/exceptions.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David J. MacKenzie and Akim Demaille.

configure 스크립트를 실행하여 빌드 시스템을 구성
./configure
(에러)
nayou@kimnayooung MINGW64 /c/libidn2
# ./configure
configure: loading site script /etc/config.site
configure: Libidn2 2.3.7.2-64ab-dirty libidn2 2.3.7 0x02030007 4:0:4 0
checking for a BSD-compatible install... /usr/bin/install -c
checking whether sleep supports fractional seconds... yes
checking filesystem timestamp resolution... 0.01
checking whether build environment is sane... yes
checking for a race-free mkdir -p... /usr/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking xargs -n works... yes
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.exe
checking for suffix of executables... .exe
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether the compiler supports GNU C... yes
checking whether gcc accepts -g... yes
checking for gcc option to enable C11 features... none needed
checking whether gcc understands -c and -o together... yes
checking whether make supports the include directive... yes (GNU style)
checking dependency style of gcc... gcc3
checking for stdio.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for strings.h... yes
checking for sys/stat.h... yes
checking for sys/types.h... yes
checking for unistd.h... yes
checking for wchar.h... yes
checking for minix/config.h... no
checking whether it is safe to define __EXTENSIONS__... yes
checking whether _XOPEN_SOURCE should be defined... no
./configure: line 4950: gl_EARLY: command not found
./configure: line 4951: unistring_EARLY: command not found
checking build system type... x86_64-w64-mingw32
checking host system type... x86_64-w64-mingw32
checking how to print strings... printf
checking for a sed that does not truncate output... /usr/bin/sed
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for fgrep... /usr/bin/grep -F
checking for ld used by gcc... C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe
checking if the linker (C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... /mingw64/bin/nm -B
checking the name lister (/mingw64/bin/nm -B) interface... BSD nm
checking whether ln -s works... no, using cp -pR
checking the maximum length of command line arguments... 8192
checking how to convert x86_64-w64-mingw32 file names to x86_64-w64-mingw32 format... func_convert_file_msys_to_w32
checking how to convert x86_64-w64-mingw32 file names to toolchain format... func_convert_file_msys_to_w32
checking for C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe option to reload object files... -r
checking for file... file
checking for objdump... objdump
checking how to recognize dependent libraries... file_magic ^x86 archive import|^x86 DLL
checking for dlltool... dlltool
checking how to associate runtime and link libraries... func_cygming_dll_for_implib
checking for ar... ar
checking for archiver @FILE support... @
checking for strip... strip
checking for ranlib... ranlib
checking command to parse /mingw64/bin/nm -B output from gcc object... ok
checking for sysroot... no
checking for a working dd... /usr/bin/dd
checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
checking for mt... no
checking if : is a manifest tool... no
checking for dlfcn.h... no
checking for as... as
checking for dlltool... (cached) dlltool
checking for objdump... (cached) objdump
checking for objdir... .libs
checking if gcc supports -fno-rtti -fno-exceptions... no
checking for gcc option to produce PIC... -DDLL_EXPORT -DPIC
checking if gcc PIC flag -DDLL_EXPORT -DPIC works... yes
checking if gcc static flag -static works... yes
checking if gcc supports -c -o file.o... yes
checking if gcc supports -c -o file.o... (cached) yes
checking whether the gcc linker (C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe) supports shared libraries... yes
checking whether -lc should be explicitly linked in... yes
checking dynamic linker characteristics... Win32 ld.exe
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
./configure: line 13550: gl_INIT: command not found
./configure: line 13551: unistring_INIT: command not found
checking whether NLS is requested... yes
checking for msgfmt... /usr/bin/msgfmt
checking for gmsgfmt... /usr/bin/msgfmt
checking for xgettext... /usr/bin/xgettext
checking for msgmerge... /usr/bin/msgmerge
checking for ld used by gcc... C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe
checking if the linker (C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe) is GNU ld... yes
checking for shared library run path origin... done
checking how to run the C preprocessor... gcc -E
checking for egrep -e... (cached) /usr/bin/grep -E
checking for CFPreferencesCopyAppValue... no
checking for CFLocaleCopyCurrent... no
checking for GNU gettext in libc... no
checking for iconv... yes
checking for working iconv... yes
checking how to link with libiconv... /mingw64/lib/libiconv.dll.a -L/mingw64/lib
checking for GNU gettext in libintl... yes
checking whether to use NLS... yes
checking where the gettext function comes from... external libintl
checking how to link with libintl... /mingw64/lib/libintl.dll.a -L/mingw64/lib
checking whether to build with code coverage support... no
./configure: line 16464: syntax error near unexpected token `-Werror,'
./configure: line 16464: `     gl_WARN_ADD(-Werror, WERROR_CFLAGS)'
(수정)
"C:\libidn2\configure.ac"
# Add warnings 추가
AM_CFLAGS = -Werror

"C:\libidn2\configure"
if test "$enable_gcc_warnings" = error; then
     gl_WARN_ADD(-Werror, WERROR_CFLAGS)
     gl_WARN_ADD(-Wno-error=analyzer-use-of-uninitialized-value, WERROR_CFLAGS)
     gl_WARN_ADD(-Wno-error=missing-field-initializers, WERROR_TESTS_CFLAGS)
     gl_WARN_ADD(-Wno-error=analyzer-double-free, WERROR_TESTS_CFLAGS)
   fi
여기서
gl_WARN_ADD(-Werror, WERROR_CFLAGS) 이부분이 에러
./configure: line 16464: syntax error near unexpected token -Werror,'
./configure: line 16464:      gl_WARN_ADD(-Werror, WERROR_CFLAGS)'
(수정)
if test "$enable_gcc_warnings" = error; then
     #gl_WARN_ADD(-Werror, WERROR_CFLAGS) 주석처리
     # Define gl_WARN_ADD if not defined 추가
     gl_WARN_ADD() {
         echo "Adding warning flags $1 to $2"
         CFLAGS="$CFLAGS $1"
     }
     gl_WARN_ADD(-Wno-error=analyzer-use-of-uninitialized-value, WERROR_CFLAGS)
     gl_WARN_ADD(-Wno-error=missing-field-initializers, WERROR_TESTS_CFLAGS)
     gl_WARN_ADD(-Wno-error=analyzer-double-free, WERROR_TESTS_CFLAGS)
   fi
"C:\libidn2\configure.ac"
# 주석처리
 #   if test "$enable_gcc_warnings" = error; then
 #    gl_WARN_ADD([-Werror], [WERROR_CFLAGS])
 #    gl_WARN_ADD([-Wno-error=analyzer-use-of-uninitialized-value], [WERROR_CFLAGS])
 #    gl_WARN_ADD([-Wno-error=missing-field-initializers], [WERROR_TESTS_CFLAGS])
 #    gl_WARN_ADD([-Wno-error=analyzer-double-free], [WERROR_TESTS_CFLAGS])
 #  fi

#gl_MANYWARN_ALL_GCC([possible_warning_options]) 주석처리

   # 추가
   # Define gl_MANYWARN_ALL_GCC if not defined 
   gl_MANYWARN_ALL_GCC() {
       echo "Adding warning options $1"
       CFLAGS="$CFLAGS $1"
   }

   # 추가
   if test "$enable_gcc_warnings" = error; then
       gl_MANYWARN_ALL_GCC "-Werror"
   fi

   # 추가
   AC_REQUIRE([gl_MANYWARN_ALL_GCC]) 
   AC_PROG_CC 
   AC_PROG_MAKE_SET 

자동화 도구 호출: 매크로 정의와 호출을 추가한 후, autoreconf를 사용하여 변경 사항을 적용
autoreconf -v -i
configure 파일은 configure.ac에서 자동으로 생성

"C:\libidn2\m4\custom-macros.m4" 생성
# custom-macros.m4

# Define gl_MANYWARN_ALL_GCC
gl_MANYWARN_ALL_GCC() {
    echo "Adding warning options $1"
    CFLAGS="$CFLAGS $1"
}

# Define gl_MANYWARN_COMPLEMENT
gl_MANYWARN_COMPLEMENT() {
    echo "Complementing warning options $1 with $2 and excluding $3"
    CFLAGS="$CFLAGS $1"
}

"C:\libidn2\configure.ac"
# 추가
AC_CONFIG_MACRO_DIR([m4])
m4_include([m4/custom-macros.m4])
자동화 도구 호출: 매크로 정의와 호출을 추가한 후, autoreconf를 사용하여 변경 사항을 적용
autoreconf -v -i
#빌드
./configure
nayou@kimnayooung MINGW64 /c/libidn2
# ./configure

checking whether to build with code coverage support... no
checking for CFPreferencesCopyAppValue... no
checking for CFLocaleCopyCurrent... no
checking for GNU gettext in libc... no
checking whether stripping libraries is possible... no
checking for mt... no
checking if : is a manifest tool... no
checking for dlfcn.h... no
./configure: line 4950: gl_EARLY: command not found
./configure: line 4951: unistring_EARLY: command not found
./configure: line 13550: gl_INIT: command not found
./configure: line 13551: unistring_INIT: command not found
./configure: line 13554: AM_CFLAGS: command not found
./configure: line 16474: syntax error near unexpected token \"$desired_warning_options",`
./configure: line 16474: gl_MANYWARN_COMPLEMENT("$desired_warning_options", "$possible_warning_options")

m4/custom-macros.m4 수정
# Define gl_MANYWARN_ALL_GCC
gl_MANYWARN_ALL_GCC() {
    echo "Adding warning options $1"
    CFLAGS="$CFLAGS $1"
}

# Define gl_MANYWARN_COMPLEMENT
gl_MANYWARN_COMPLEMENT() {
    echo "Complementing warning options $1 with $2 and excluding $3"
    CFLAGS="$CFLAGS $1"
    CFLAGS="$CFLAGS $2"
    # Remove $3 from CFLAGS
    CFLAGS=$(echo "$CFLAGS" | sed "s/$3//g")
}

configuer.ac수정
# Define or use gl_MANYWARN_ALL_GCC
    gl_MANYWARN_ALL_GCC "$nw" 

    # Complement and modify warning options 주석처리
    #desired_warning_options="-Werror"
    #possible_warning_options="$nw"
    # Define warning options 추가
    nw="-Wall -Wextra"
    desired_warning_options="-Werror"
    possible_warning_options="$nw"
    remaining_undesired_warning_options="-Wno-unused-parameter"
    # Use gl_MANYWARN_ALL_GCC to add warning options
    gl_MANYWARN_ALL_GCC([$nw])
    # Use gl_MANYWARN_COMPLEMENT to adjust warning options
    gl_MANYWARN_COMPLEMENT([$desired_warning_options], [$possible_warning_options], [$remaining_undesired_warning_options])

    #주석처리
    #gl_MANYWARN_COMPLEMENT("$desired_warning_options", "$possible_warning_options")
    #gl_MANYWARN_COMPLEMENT("$remaining_undesired_warning_options", "$nw")

자동화 도구 호출: 매크로 정의와 호출을 추가한 후, autoreconf를 사용하여 변경 사항을 적용
autoreconf -v -i

m4/custom-macros.m4 수정
# custom-macros.m4

# Define gl_MANYWARN_ALL_GCC
gl_MANYWARN_ALL_GCC() {
    echo "Adding warning options $1"
    CFLAGS="$CFLAGS $1"
}

# Define gl_MANYWARN_COMPLEMENT
gl_MANYWARN_COMPLEMENT() {
    echo "Complementing warning options $1 with $2 and excluding $3"
    CFLAGS="$CFLAGS $1"
}

# Define gl_WARN_ADD
gl_WARN_ADD() {
    echo "Adding warning option $1"
    CFLAGS="$CFLAGS $1"
}
configuer.ac수정
AC_CONFIG_MACRO_DIR([m4])
m4_include([m4/custom-macros.m4])
# Define or use gl_MANYWARN_ALL_GCC
    gl_MANYWARN_ALL_GCC $nw 

    # Complement and modify warning options 주석처리
    #desired_warning_options="-Werror"
    #possible_warning_options="$nw"
    # Define warning options 추가
    nw="-Wall -Wextra"
    desired_warning_options="-Werror"
    possible_warning_options="$nw"
    
    # Define or use gl_MANYWARN_COMPLEMENT
    gl_MANYWARN_COMPLEMENT "$desired_warning_options" "$possible_warning_options"
    gl_MANYWARN_COMPLEMENT "$remaining_undesired_warning_options" "$nw"
 

    #주석처리
    #gl_MANYWARN_COMPLEMENT("$desired_warning_options", "$possible_warning_options")
    #gl_MANYWARN_COMPLEMENT("$remaining_undesired_warning_options", "$nw")


autoconf 및 automake 재생성
autoreconf -v -i
nayou@kimnayooung MINGW64 /c/libidn2
# ./configure
configure: loading site script /etc/config.site
configure: Libidn2 2.3.7.2-64ab-dirty libidn2 2.3.7 0x02030007 4:0:4 0
checking for a BSD-compatible install... /usr/bin/install -c
checking whether sleep supports fractional seconds... yes
checking filesystem timestamp resolution... 0.01
checking whether build environment is sane... yes
checking for a race-free mkdir -p... /usr/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking xargs -n works... yes
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.exe
checking for suffix of executables... .exe
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether the compiler supports GNU C... yes
checking whether gcc accepts -g... yes
checking for gcc option to enable C11 features... none needed
checking whether gcc understands -c and -o together... yes
checking whether make supports the include directive... yes (GNU style)
checking dependency style of gcc... gcc3
checking for stdio.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for strings.h... yes
checking for sys/stat.h... yes
checking for sys/types.h... yes
checking for unistd.h... yes
checking for wchar.h... yes
checking for minix/config.h... no
checking whether it is safe to define __EXTENSIONS__... yes
checking whether _XOPEN_SOURCE should be defined... no
./configure: line 4970: gl_EARLY: command not found
./configure: line 4971: unistring_EARLY: command not found
checking build system type... x86_64-w64-mingw32
checking host system type... x86_64-w64-mingw32
checking how to print strings... printf
checking for a sed that does not truncate output... /usr/bin/sed
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for fgrep... /usr/bin/grep -F
checking for ld used by gcc... C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe
checking if the linker (C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... /mingw64/bin/nm -B
checking the name lister (/mingw64/bin/nm -B) interface... BSD nm
checking whether ln -s works... no, using cp -pR
checking the maximum length of command line arguments... 8192
checking how to convert x86_64-w64-mingw32 file names to x86_64-w64-mingw32 format... func_convert_file_msys_to_w32
checking how to convert x86_64-w64-mingw32 file names to toolchain format... func_convert_file_msys_to_w32
checking for C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe option to reload object files... -r
checking for file... file
checking for objdump... objdump
checking how to recognize dependent libraries... file_magic ^x86 archive import|^x86 DLL
checking for dlltool... dlltool
checking how to associate runtime and link libraries... func_cygming_dll_for_implib
checking for ar... ar
checking for archiver @FILE support... @
checking for strip... strip
checking for ranlib... ranlib
checking command to parse /mingw64/bin/nm -B output from gcc object... ok
checking for sysroot... no
checking for a working dd... /usr/bin/dd
checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
checking for mt... no
checking if : is a manifest tool... no
checking for dlfcn.h... no
checking for as... as
checking for dlltool... (cached) dlltool
checking for objdump... (cached) objdump
checking for objdir... .libs
checking if gcc supports -fno-rtti -fno-exceptions... no
checking for gcc option to produce PIC... -DDLL_EXPORT -DPIC
checking if gcc PIC flag -DDLL_EXPORT -DPIC works... yes
checking if gcc static flag -static works... yes
checking if gcc supports -c -o file.o... yes
checking if gcc supports -c -o file.o... (cached) yes
checking whether the gcc linker (C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe) supports shared libraries... yes
checking whether -lc should be explicitly linked in... yes
checking dynamic linker characteristics... Win32 ld.exe
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
./configure: line 13570: gl_INIT: command not found
./configure: line 13571: unistring_INIT: command not found
./configure: line 13574: AM_CFLAGS: command not found
checking whether NLS is requested... yes
checking for msgfmt... /usr/bin/msgfmt
checking for gmsgfmt... /usr/bin/msgfmt
checking for xgettext... /usr/bin/xgettext
checking for msgmerge... /usr/bin/msgmerge
checking for ld used by gcc... C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe
checking if the linker (C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe) is GNU ld... yes
checking for shared library run path origin... done
checking how to run the C preprocessor... gcc -E
checking for egrep -e... (cached) /usr/bin/grep -E
checking for CFPreferencesCopyAppValue... no
checking for CFLocaleCopyCurrent... no
checking for GNU gettext in libc... no
checking for iconv... yes
checking for working iconv... yes
checking how to link with libiconv... /mingw64/lib/libiconv.dll.a -L/mingw64/lib
checking for GNU gettext in libintl... yes
checking whether to use NLS... yes
checking where the gettext function comes from... external libintl
checking how to link with libintl... /mingw64/lib/libintl.dll.a -L/mingw64/lib
checking whether to build with code coverage support... no
Adding warning options -Wbad-function-cast
Complementing warning options -Werror with -Wall -Wextra and excluding
Complementing warning options  with -Wall -Wextra and excluding
Adding warning option -Werror
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: creating gl/Makefile
config.status: creating doc/Makefile
config.status: creating lib/Makefile
config.status: creating gnulib/lib/unictype/Makefile
config.status: creating gnulib/Makefile
config.status: creating src/Makefile
config.status: creating tests/Makefile
config.status: creating doc/reference/Makefile
config.status: creating examples/Makefile
config.status: creating fuzz/Makefile
config.status: creating gettext-0.19.8/os2/Makefile
config.status: creating po/Makefile
config.status: creating libidn2.pc
config.status: creating po/Makefile.in
config.status: creating lib/idn2.h
config.status: creating config.h
config.status: executing depfiles commands
config.status: executing libtool commands
config.status: executing po-directories commands
config.status: creating po/POTFILES
config.status: creating po/Makefile
config.status: executing post-configure commands
chmod: cannot access 'misc/gettextize': No such file or directory
chmod: cannot access 'misc/autopoint': No such file or directory
chmod: cannot access 'misc/convert-archive': No such file or directory
./config.status: line 2199: FIX_MAKEFILE_DISTRIB: command not found
configure: summary of main build options:

  Version:            2.3.7.2-64ab-dirty
  Libtool version     4:0:4
  DLL version:        0
  Header version:     major 2 minor 3 patch 7 number 0x02030007
  Build system:       x86_64-w64-mingw32
  Host/Target system: x86_64-w64-mingw32
  Install prefix:     /mingw64
  Compiler:           gcc
  CFLAGS:             -g -O2 -Wbad-function-cast -Werror  -Werror
  CPPFLAGS:           -I/mingw64/include
  LDFLAGS:
  Library types:      Shared=yes, Static=yes

  Warning flags:
      WERROR_CFLAGS:
WERROR_TESTS_CFLAGS:
        WARN_CFLAGS:

  Documentation:      yes

  nl_langinfo:
  Libiconv:
         LTLIBICONV:  -L/mingw64/lib -liconv -R/mingw64/lib
  Libunistring:
            VERSION:
     LTLIBUNISTRING:

  Version script:

  Valgrind:
경고와 오류 메시지가 있지만, configure 과정 자체는 성공적으로 완료
나머지오류만해결하면됨(no로 끝나는 항목은 비활성화상태를 나타냄)
./configure: line 4970: gl_EARLY: command not found
./configure: line 4971: unistring_EARLY: command not found
./configure: line 13570: gl_INIT: command not found
./configure: line 13571: unistring_INIT: command not found
./configure: line 13574: AM_CFLAGS: command not found
./configure: line 16474: syntax error near unexpected token "$desired_warning_options",'
./configure: line 16474: gl_MANYWARN_COMPLEMENT("$desired_warning_options", "$possible_warning_options")
./configure: line 16502: syntax error near unexpected token $w'
./configure: line 16502: gl_WARN_ADD($w)
checking whether to build with code coverage support... no
checking for CFPreferencesCopyAppValue... no
checking for CFLocaleCopyCurrent... no
checking for GNU gettext in libc... no
checking whether stripping libraries is possible... no
checking for mt... no
checking if : is a manifest tool... no
checking for dlfcn.h... no

configure.ac
주로 autoconf 매크로들을 사용하는 곳
# Add warnings 추가 Makefile.am파일에서 설정하는게 일반적
#AM_CFLAGS = -Werror #제거
Makefile.am
# Add warnings 추가 Makefile.am파일에서 설정하는게 일반적
#AM_CFLAGS = -Werror #추가
configure.ac
AC_PROG_LIBTOOL-> LT_INIT
autoreconf-2.72: ... not using Intltool
autoreconf-2.72: ... not using Gtkdoc
# 추가
IT_PROG_INTLTOOL([0.40.0]) # 다국어 지원을 위한 도구
GTK_DOC_CHECK([1.0]) # API 문서를 생성하는 도구
#추가
CFLAGS="$CFLAGS -Werror"
#추가
AC_SUBST(CFLAGS)
(에러)
nayou@kimnayooung MINGW64 /c/libidn2
# autoreconf -v -i
autoreconf-2.72: export WARNINGS=
autoreconf-2.72: Entering directory '.'
autoreconf-2.72: running: autopoint
autoreconf-2.72: running: aclocal -I m4
m4/custom-macros.m4:44: warning: macro 'AM_CFLAGS' not found in library
autoreconf-2.72: configure.ac: tracing
autoreconf-2.72: running: libtoolize --copy
autoreconf-2.72: configure.ac: not using Intltool
autoreconf-2.72: configure.ac: not using Gtkdoc
autoreconf-2.72: running: aclocal -I m4
m4/custom-macros.m4:44: warning: macro 'AM_CFLAGS' not found in library
autoreconf-2.72: running: /usr/bin/autoconf-2.72
configure.ac:216: error: possibly undefined macro: AC_PROG_GETTEXT
      If this token and others are legitimate, please use m4_pattern_allow.
      See the Autoconf documentation.
autoreconf-2.72: error: /usr/bin/autoconf-2.72 failed with exit status: 1

gettext 설치 확인
pacman -S mingw-w64-x86_64-gettext
AC_PROG_GETTEXT 설정
configure.ac에 추가
AM_GNU_GETTEXT([external])
AM_GNU_GETTEXT_VERSION([0.19.8])
autopoint 확인
autopoint는 gettext 패키지의 일부로, 자동으로 프로젝트에 필요한 국제화 파일을 설정
 ACLOCAL_PATH 설정
export ACLOCAL_PATH="/usr/share/aclocal:$ACLOCAL_PATH"
Makefile.am 추
ACLOCAL_AMFLAGS = -I /usr/share/aclocal -I m4
# Add warnings 추가 Makefile.am파일에서 설정하는게 일반적
#AM_CFLAGS = -Werror #m4/custom-macros.m4:44: warning: macro 'AM_CFLAGS' not found in library

autoreconf-2.72: configure.ac: not using Intltool
autoreconf-2.72: configure.ac: not using Gtkdoc
Intltool 사용하기
pacman -S intltool
configure.ac 파일 수정
IT_PROG_INTLTOOL([0.40.0]) #추가
Gtkdoc 사용하기(https://gitlab.gnome.org/GNOME/gtk-doc)
nayou@kimnayooung MINGW64 /c/libidn2
# git clone https://gitlab.gnome.org/GNOME/gtk-doc.git
cp /c/libidn2/gtk-doc/buildsystems/autotools/gtk-doc.m4 /c/libidn2/m4

# Root 디렉토리의 Makefile.am
# 이 파일은 프로젝트의 최상위 디렉토리에서 Makefile을 설정합니다.

# Include subdirectories Makefile.am
SUBDIRS = gl gnulib lib m4 po src tests tmpwrk2270 unistring build-aux contrib doc examples fuzz gettext-0.19.8 gettext-0.19.8/os2

# Specify the directory for pkg-config files
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libidn2.pc

ACLOCAL_AMFLAGS = -I /usr/share/aclocal -I /c/libidn2/m4 #export ACLOCAL_PATH="/c/libidn2/m4:$ACLOCAL_PATH"

# Automake options
AM_GNU_GETTEXT([external])

# Add warnings 추가 Makefile.am파일에서 설정하는게 일반적
#AM_CFLAGS = -Werror #m4/custom-macros.m4:44: warning: macro 'AM_CFLAGS' not found in library

# 추가
gtkdocdir = $(datadir)/gtk-doc/html #/c/libidn2/gtk-doc/html
gtkdoc_DATA = $(DOCS)
nayou@kimnayooung MINGW64 /c/libidn2
# autoreconf -v -i
Makefile.am
ACLOCAL_AMFLAGS = -I /usr/share/aclocal -I m4
configure.ac
AC_CONFIG_MACRO_DIRS([/usr/share/aclocal])

intltoolize: 'po/Makefile.in.in' exists: use '--force' to overwrite
intltoolize: 'po/Makefile.in.in' is out of date: use '--force' to overwrite
po/Makefile.in.in 파일이 존재하거나 구버전이라는 것을 알림
intltoolize는 이 파일이 이미 존재하거나 오래되었기 때문에 덮어쓰기를 제안
덮어쓰기를 하려면 --force 옵션을 사용하라는 메시지
nayou@kimnayooung MINGW64 /c/libidn2
# intltoolize --force
nayou@kimnayooung MINGW64 /c/libidn2
# autoreconf -v -i
autoreconf-2.72: export WARNINGS=
autoreconf-2.72: Entering directory '.'
autoreconf-2.72: running: autopoint
autopoint: File po/Makefile.in.in has been locally modified.
autopoint: *** Some files have been locally modified. Not overwriting them because --force has not been specified. For your convenience, you find the local modifications in the file '/tmp/ar8PLRf3/gtJ1QdHy/autopoint.diff'.
autopoint: *** Stop.
autoreconf-2.72: error: autopoint failed with exit status: 1
/tmp/ar8PLRf3/gtJ1QdHy/autopoint.diff 파일을 열어 로컬 수정 내용을 확인
nayou@kimnayooung MINGW64 /c/libidn2
# autopoint --force
Copying file po/Makefile.in.in
파일을 삭제한 후, autopoint를 다시 실행
rm po/Makefile.in.in
autopoint
nayou@kimnayooung MINGW64 /c/libidn2
# autopoint
Copying file po/Makefile.in.in
autopoint와 autoreconf를 포함하여 전체 빌드 시스템을 재구성
nayou@kimnayooung MINGW64 /c/libidn2
# autoreconf -v -i
intltoolize: 'po/Makefile.in.in' exists: use '--force' to overwrite
intltoolize: 'po/Makefile.in.in' is out of date: use '--force' to overwrite
autoreconf-2.72: error: intltoolize failed with exit status: 1
최신상태로 업데이트
intltoolize --force
수동삭
nayou@kimnayooung MINGW64 /c/libidn2
# rm po/Makefile.in.in
intltoolize
pacman -Syu gettext intltool
intltoolize: 'po/Makefile.in.in' exists: use '--force' to overwrite
intltoolize: 'po/Makefile.in.in' is out of date: use '--force' to overwrite

[google keyword autopoint: File po/Makefile.in.in has been locally modified.]
https://www.linuxquestions.org/questions/linux-software-2/building-cinelerra-cv-from-git-repository-syntax-error-820826-print/
nayou@kimnayooung MINGW64 /c/libidn2
# autoreconf -if

Copying file po/Makefile.in.in
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize:   error: '/usr/share/aclocal/libtool.m4' does not exist.
autoreconf-2.72: error: libtoolize failed with exit status: 1

libtoolize:   error: '/usr/share/aclocal/libtool.m4' does not exist.
nayou@kimnayooung MINGW64 /c/libidn2
# pacman -S libtool automake
intltoolize: 'po/Makefile.in.in' exists: use '--force' to overwrite
intltoolize: 'po/Makefile.in.in' is out of date: use '--force' to overwrite
intltoolize 명령어를 실행할 때, po/Makefile.in.in 파일이 이미 존재하고 있지만, 
해당 파일이 현재 사용 중인 버전과 일치하지 않아서 업데이트가 필요
intltoolize는 이미 존재하는 파일을 덮어쓰지 않도록 설계되어 있다.
--force 옵션을 사용하여 강제로 덮어쓸 수 있다.
nayou@kimnayooung MINGW64 /c/libidn2
# intltoolize --force
autopoint: File po/Makefile.in.in has been locally modified.
autopoint: *** Some files have been locally modified. Not overwriting them because --force has not been specified. For your convenience, you find the local modifications in the file '/tmp/arjezVBk/gtWcVd0M/autopoint.diff'.
autopoint: *** Stop.
autopoint 도구가 po/Makefile.in.in 파일이 로컬에서 수정되었음을 감지하고, 
이를 덮어쓰지 않기 위해 작업을 중단한 것임
파일 덮어쓰기를 위해서는 추가적으로 --force 옵션이 필요하다고 경고
만약 백업할경우 cp po/Makefile.in.in po/Makefile.in.in.bak
nayou@kimnayooung MINGW64 /c/libidn2
# autopoint --force
Copying file po/Makefile.in.in

nayou@kimnayooung MINGW64 /c/libidn2
# intltoolize --force

https://www.linuxquestions.org/questions/linux-software-2/building-cinelerra-cv-from-git-repository-syntax-error-820826-print/
nayou@kimnayooung MINGW64 /c/libidn2
Autotools 기반의 프로젝트에서 일반적으로 사용되는 명령어로, 
configure 스크립트를 자동으로 생성하고 갱신하는 데 사용
-i 또는 --install: 필요한 경우, 프로젝트 디렉토리에 누락된 파일을 추가합니다. 예를 들어, config.guess, config.sub, install-sh 등의 파일을 추가합니다.
-f 또는 --force: 기존 파일을 강제로 덮어씁니다.
# autoreconf -if
aclocal, autoconf, autoheader, automake, libtoolize 등의 도구를 실행하여 configure 스크립트와 관련 파일들을 생성하고 갱신
nayou@kimnayooung MINGW64 /c/libidn2
# autoreconf -if
Copying file po/Makefile.in.in
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize:   error: '/usr/share/aclocal/libtool.m4' does not exist.
autoreconf-2.72: error: libtoolize failed with exit status: 1
/usr/share/aclocal/libtool.m4 파일을 찾지 못함
pacman -S libtool
nayou@kimnayooung MINGW64 /c/libidn2
# autoreconf -if
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize:   error: '/usr/share/aclocal/libtool.m4' does not exist.
autoreconf-2.72: error: libtoolize failed with exit status: 1
pacman -Syu           # 시스템 및 패키지 업데이트
pacman -S libtool     # libtool 설치
pacman -S autoconf automake  # autoconf 및 automake도 설치
nayou@kimnayooung MINGW64 /c/libidn2
# find /usr/share -name "libtool.m4"
/usr/share/aclocal/libtool.m4
export ACLOCAL_PATH="/usr/share/aclocal"
autoreconf -if
libtoolize:   error: '/usr/share/aclocal/libtool.m4' does not exist.
libtoolize --copy --install --automake
환경변수설정할때
Makefile.am (현재 세션만 적용)
#m4 디렉토리는 AC_CONFIG_MACRO_DIRS에서 이미 포함되므로, 중복된 경로를 제거
#ACLOCAL_AMFLAGS = -I /usr/share/aclocal -I /c/libidn2/m4 
#export ACLOCAL_PATH="export ACLOCAL_PATH="/usr/share/aclocal:/c/libidn2/m4":$ACLOCAL_PATH"
ACLOCAL_AMFLAGS = -I /usr/share/aclocal -I m4
# -I m4를 제거 configure.ac파일의  AC_CONFIG_MACRO_DIRS([m4]) #여기에서 찾음
.bashrc 또는 .bash_profile 추가(지속적설정)
echo 'export ACLOCAL_PATH="/usr/share/aclocal"' >> ~/.bashrc
source ~/.bashrc
nayou@kimnayooung MINGW64 /usr/share/aclocal
# find / -name "libtool.m4" 2>/dev/null
/home/nayou/_bazel_nayou/4yp365mj/external/protobuf~/m4/libtool.m4
/home/nayou/_bazel_nayou/4yp365mj/external/protobuf~/third_party/googletest/googletest/m4/libtool.m4
/mingw64/share/aclocal/libtool.m4
nayou@kimnayooung MINGW64 /usr/share/aclocal
# echo 'export ACLOCAL_PATH="/mingw64/share/aclocal:/usr/share/aclocal"' >> ~/.bashrc

nayou@kimnayooung MINGW64 /usr/share/aclocal
# source ~/.bashrc

AC_CONFIG_MACRO_DIRS([/usr/share/aclocal]) 
AC_CONFIG_MACRO_DIRS([/usr/share/aclocal, /mingw64/share/aclocal]) 
ACLOCAL_AMFLAGS = -I /usr/share/aclocal -I /mingw64/share/aclocal -I m4
echo 'export ACLOCAL_PATH="/mingw64/share/aclocal:/usr/share/aclocal"' >> ~/.bashrc
source ~/.bashrc
export ACLOCAL_PATH="/mingw64/share/aclocal:/usr/share/aclocal"
=> libtoolize:   error: '/usr/share/aclocal/libtool.m4' does not exist.

nayou@kimnayooung MINGW64 /c/libidn2
/dev/null로 오류 메시지를 버려서 결과를 깨끗하게 확인하는 것
파일 디스크립터 표준 입력 (stdin) 0, 표준 출력 (stdout) 1, 표준 오류 (stderr) 2
# find / -name "libtool.m4" 2>/dev/null
/home/nayou/_bazel_nayou/4yp365mj/external/protobuf~/m4/libtool.m4
/home/nayou/_bazel_nayou/4yp365mj/external/protobuf~/third_party/googletest/googletest/m4/libtool.m4
/mingw64/share/aclocal/libtool.m4
nayou@kimnayooung MINGW64 /c/libidn2
# echo $ACLOCAL_PATH
/mingw64/share/aclocal:/usr/share/aclocal
삭제하고 다시설치
pacman -R libtool
pacman -S libtool
libtoolize --verbose
pacman -R autoconf automake
pacman -S autoconf automake
libtoolize:   error: '/usr/share/aclocal/libtool.m4' does not exist.
Makefile.am
AC_CONFIG_MACRO_DIRS([/mingw64/share/aclocal, /usr/share/aclocal, m4])
configure.ac
ACLOCAL_AMFLAGS = -I /mingw64/share/aclocal -I /usr/share/aclocal -I m4
nayou@kimnayooung MINGW64 /c/libidn2
# chmod 644 /mingw64/share/aclocal/libtool.m4

nayou@kimnayooung MINGW64 /c/libidn2
# ls -l /mingw64/share/aclocal/libtool.m4
-rw-r--r-- 1 nayou nayou 307384  8월 14  2023 /mingw64/share/aclocal/libtool.m4

nayou@kimnayooung MINGW64 /mingw64/share/aclocal
# find / -name "libtool.m4" 2>/dev/null
/home/nayou/_bazel_nayou/4yp365mj/external/protobuf~/m4/libtool.m4
/home/nayou/_bazel_nayou/4yp365mj/external/protobuf~/third_party/googletest/googletest/m4/libtool.m4

cp /home/nayou/_bazel_nayou/4yp365mj/external/protobuf~/m4/libtool.m4 /mingw64/share/aclocal/

nayou@kimnayooung MINGW64 /mingw64/share/aclocal
# find / -name "libtool.m4" 2>/dev/null                                        /home/nayou/_bazel_nayou/4yp365mj/external/protobuf~/m4/libtool.m4
/home/nayou/_bazel_nayou/4yp365mj/external/protobuf~/third_party/googletest/googletest/m4/libtool.m4
/mingw64/share/aclocal/libtool.m4

nayou@kimnayooung MINGW64 /c/libidn2
# libtoolize --version
libtoolize (GNU libtool) 2.4.7
Written by Gary V. Vaughan <gary@gnu.org>, 2003

Copyright (C) 2022 Free Software Foundation, Inc.

Can't exec "gtkdocize": No such file or directory at /usr/share/autoconf-2.72/Autom4te/FileUtils.pm line 318.
nayou@kimnayooung MINGW64 /c/libidn2
# pacman -S gtk-doc
의존성 해결 중...
꾸러미 충돌을 찾는 중...

꾸러미 (16) docbook-xml-4.5-4  docbook-xsl-1.79.2-3  glib2-2.80.4-1
            itstool-2.0.7-1  libxml2-2.13.3-1  libxml2-python-2.13.3-1
            libxslt-1.1.42-1  mpdecimal-4.0.0-1  python-3.12.5-1
            python-lxml-5.2.2-4  python-mallard-ducktype-1.0.2-6
            python-pygments-2.18.0-2  vim-9.1.0648-1  yelp-tools-42.1-1
            yelp-xsl-42.1-1  gtk-doc-1.34.0-1

총 다운로드 크기:   39.19 MiB
총 설치 크기:      292.29 MiB

:: 설치를 진행하시겠습니까? [Y/n] y
:: 꾸러미 가져오는 중...
 vim-9.1.0648-1-x...     9.0 MiB  3.02 MiB/s 00:03 [####################] 100%
 python-pygments-...  1895.1 KiB   622 KiB/s 00:03 [####################] 100%
 docbook-xsl-1.79...   677.8 KiB  1281 KiB/s 00:01 [####################] 100%
 python-lxml-5.2....  1222.3 KiB   305 KiB/s 00:04 [####################] 100%
 glib2-2.80.4-1-x...     2.5 MiB   607 KiB/s 00:04 [####################] 100%
 gtk-doc-1.34.0-1...   304.3 KiB   664 KiB/s 00:00 [####################] 100%
 yelp-xsl-42.1-1-any   191.1 KiB   357 KiB/s 00:01 [####################] 100%
 libxslt-1.1.42-1...   138.0 KiB   271 KiB/s 00:01 [####################] 100%
 python-mallard-d...   100.1 KiB   211 KiB/s 00:00 [####################] 100%
 docbook-xml-4.5-...    85.0 KiB   152 KiB/s 00:01 [####################] 100%
 mpdecimal-4.0.0-...    73.7 KiB  88.8 KiB/s 00:01 [####################] 100%
 yelp-tools-42.1-...    32.9 KiB  47.9 KiB/s 00:01 [####################] 100%
 python-3.12.5-1-...    22.4 MiB  3.16 MiB/s 00:07 [####################] 100%
 itstool-2.0.7-1-...    19.7 KiB  33.0 KiB/s 00:01 [####################] 100%
 libxml2-2.13.3-1...   485.3 KiB   180 KiB/s 00:03 [####################] 100%
 libxml2-python-2...   260.0 KiB   401 KiB/s 00:01 [####################] 100%
 총합 (16/16)           39.2 MiB  2.06 MiB/s 00:19 [####################] 100%
오류: 파일 'libxml2-2.13.3-1-x86_64.pkg.tar.zst'를 mirror.msys2.org에서 가져오는 데 실패 : Operation too slow. Less than 1 bytes/sec transferred the last 10 seconds
오류: 파일 'libxml2-python-2.13.3-1-x86_64.pkg.tar.zst'를 mirror.msys2.org에서 가져오는 데 실패 : Operation too slow. Less than 1 bytes/sec transferred the last 10 seconds
(16/16) 키링의 키를 검사 중                        [####################] 100%
(16/16) 꾸러미 무결성 검사 중                      [####################] 100%
(16/16) 꾸러미 파일 불러오는 중                    [####################] 100%
(16/16) 파일 충돌 검사 중                          [####################] 100%
(16/16) 사용 가능한 디스크 공간 검사 중            [####################] 100%
:: 꾸러미 변경사항을 처리 중...
( 1/16) 설치 중 libxml2                            [####################] 100%
etc/xml/catalog:1: parser error : Document is empty

^
( 2/16) 설치 중 libxslt                            [####################] 100%
( 3/16) 설치 중 docbook-xml                        [####################] 100%
( 4/16) 설치 중 docbook-xsl                        [####################] 100%
( 5/16) 설치 중 glib2                              [####################] 100%
( 6/16) 설치 중 libxml2-python                     [####################] 100%
( 7/16) 설치 중 mpdecimal                          [####################] 100%
( 8/16) 설치 중 python                             [####################] 100%
( 9/16) 설치 중 python-pygments                    [####################] 100%
(10/16) 설치 중 vim                                [####################] 100%
(11/16) 설치 중 yelp-xsl                           [####################] 100%
(12/16) 설치 중 python-lxml                        [####################] 100%
(13/16) 설치 중 itstool                            [####################] 100%
(14/16) 설치 중 python-mallard-ducktype            [####################] 100%
(15/16) 설치 중 yelp-tools                         [####################] 100%
(16/16) 설치 중 gtk-doc                            [####################] 100%

# echo $PATH
/usr/bin:/mingw64/bin:/c/Program Files/Java/jdk-21/bin:/c/bazel:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/usr/bin:/mingw64/bin:/c/Program Files/Java/jdk-21/bin:/c/bazel:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/mingw64/bin:/usr/local/bin:/usr/bin:/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0/:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl
export PATH="/mingw64/bin:$PATH"
# which gtkdocize
/usr/bin/gtkdocize
nayou@kimnayooung MINGW64 /c/libidn2
# pacman -Qi gtk-doc
이름               : gtk-doc
버전               : 1.34.0-1
설명               : Documentation tool for public library API
아키텍처           : x86_64
URL                : https://gitlab.gnome.org/GNOME/gtk-doc
라이선스           : GPL  FDL
모음들             : 없음
다음을 제공        : 없음
다음에 의존        : docbook-xsl  glib2  libxml2-python  python
                     python-pygments  vim  yelp-tools
선택 의존성        : 없음
다음이 요구        : 없음
다음의 선택 의존성 : 없음
다음과 충돌        : 없음
다음을 대체        : 없음
설치된 크기        : 2.63 MiB
꾸러미 만든이      : CI (msys2/msys2-autobuild/dad66715/8220363058)
빌드 날짜          : 2024년 03월 10일 일 오후 4:24:49
설치 날짜          : 2024년 08월 27일 화 오전 9:48:31
설치 이유          : 명시적으로 설치했습니다
설치 스크립트      : 아니요
유효검사자         : SHA-256 합  서명

# autoreconf -if
Copying file build-aux/config.rpath
Copying file po/Makefile.in.in
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize:   error: '/mingw64/share/aclocal/libtool.m4' does not exist.
autoreconf-2.72: error: libtoolize failed with exit status: 1
libtoolize:   error: '/mingw64/share/aclocal/libtool.m4' does not exist.
cp /usr/share/aclocal/libtool.m4 /mingw64/share/aclocal/

# pacman -Ql libtool | grep libtool.m4
libtool /usr/share/aclocal/libtool.m4

autoreconf-2.72: running: intltoolize --copy --force
autoreconf-2.72: running: gtkdocize --copy
cp: cannot create regular file './/mingw64/share/aclocal/': No such file or directory
autoreconf-2.72: error: gtkdocize failed with exit status: 1
cd /c/libidn2
폴더를 생성
mkdir -p .//mingw64/share/aclocal/
ls -l .//mingw64/share/aclocal/
0개
autoreconf는 소프트웨어 프로젝트의 설정 및 빌드를 위한 자동화 도구인 
autoconf, automake, libtool 등을 업데이트하는 과정
프로젝트의 빌드 및 설정을 위해 필요한 파일을 준비하고 갱신
# autoreconf -if --verbose
# ls -l .//mingw64/share/aclocal/
합계 8
-rw-r--r-- 1 nayou nayou 4528  8월 27 13:19 gtk-doc.m4
gtkdocize가 잘못된 경로를 참조하는지 확인
gtkdocize --copy
성공!
(autoreconf)
configure.ac 또는 configure.in 파일과 같은 입력 파일을 기반으로 configure 스크립트를 생성하거나 갱신합니다.
configure 스크립트는 시스템 환경을 검사하여 적절한 Makefile과 기타 빌드 설정 파일을 생성
aclocal: aclocal.m4 파일을 생성하고, 필요한 m4 매크로 파일을 포함합니다.
autoconf: configure 스크립트를 생성합니다.
autoheader: config.h 헤더 파일을 생성합니다.
automake: Makefile.in 파일을 생성합니다.
libtoolize: libtool 관련 파일을 생성합니다.
-i 옵션은 autoreconf가 aclocal.m4와 같은 필수 파일을 설치하도록 지시

autoreconf가 생성하거나 갱신한 configure 스크립트를 실행하여 프로젝트의 빌드 환경을 설정
./configure
셸 스크립트를 run_configure.sh라는 파일생성
#!/bin/bash

# 로그 파일 설정
LOG_FILE="configure.log"

# ./configure 실행 및 로그 파일에 기록
./configure &> "$LOG_FILE"

# 로그 파일에서 ./configure 또는 : error로 시작하는 줄만 출력
grep -E '^./configure|^: error' "$LOG_FILE"
저장
chmod +x run_configure.sh
./run_configure.sh
(참고)
./configure &> configure.log
grep -E '^./configure|^: error' configure.log | sort | uniq
nayou@kimnayooung MINGW64 /c/libidn2
# ./run_configure.sh
./configure: line 13736: as_fn_executable_p: command not found
./configure: line 13837: as_fn_executable_p: command not found
./configure: line 13882: as_fn_executable_p: command not found
./configure: line 13930: as_fn_executable_p: command not found
./configure: line 13980: as_fn_executable_p: command not found
./configure: line 14303: as_fn_executable_p: command not found
./configure: line 1614: as_fn_set_status: command not found
./configure: line 17405: `        gl_WARN_ADD("-W$w")'
./configure: line 17405: syntax error near unexpected token `"-W$w"'
./configure: line 1800: as_fn_set_status: command not found
./configure: line 2856: as_fn_executable_p: command not found
./configure: line 2962: as_fn_executable_p: command not found
./configure: line 3076: as_fn_executable_p: command not found
./configure: line 3184: as_fn_executable_p: command not found
./configure: line 3912: as_fn_executable_p: command not found
./configure: line 411: as_fn_exit: command not found
./configure: line 4354: as_fn_executable_p: command not found
./configure: line 4405: as_fn_executable_p: command not found
./configure: line 5208: as_fn_executable_p: command not found
./configure: line 5292: as_fn_executable_p: command not found
./configure: line 5366: as_fn_executable_p: command not found
./configure: line 5443: as_fn_executable_p: command not found
./configure: line 6232: as_fn_executable_p: command not found
./configure: line 6342: as_fn_executable_p: command not found
./configure: line 6697: as_fn_executable_p: command not found
./configure: line 6855: as_fn_executable_p: command not found
./configure: line 7051: as_fn_executable_p: command not found
./configure: line 7162: as_fn_executable_p: command not found
./configure: line 7661: as_fn_executable_p: command not found
./configure: line 8061: as_fn_executable_p: command not found
./configure: line 8934: as_fn_executable_p: command not found
: error: C compiler cannot create executables
: error: C preprocessor "/lib/cpp" fails sanity check
: error: cannot compute suffix of executables: cannot compile and link
: error: cannot compute suffix of object files: cannot compile
: error: cannot run C compiled programs.
: error: in '/c/libidn2':
: error: no acceptable C compiler found in $PATH
: error: no acceptable egrep could be found in /usr/bin:/mingw64/bin:/c/Program Files/Java/jdk-21/bin:/c/bazel:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/mingw64/bin:/usr/local/bin:/usr/bin:/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0/:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/usr/xpg4/bin
: error: no acceptable fgrep could be found in /usr/bin:/mingw64/bin:/c/Program Files/Java/jdk-21/bin:/c/bazel:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/mingw64/bin:/usr/local/bin:/usr/bin:/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0/:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/usr/xpg4/bin
: error: no acceptable grep could be found in /usr/bin:/mingw64/bin:/c/Program Files/Java/jdk-21/bin:/c/bazel:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/mingw64/bin:/usr/local/bin:/usr/bin:/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0/:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/usr/xpg4/bin
: error: no acceptable sed could be found in $PATH
# gcc --version
g++ --version
make --version
gcc.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

g++.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

GNU Make 4.4.1
x86_64-pc-msys 빌드
Copyright (C) 1988-2023 Free Software Foundation, Inc.
라이선스 GPLv3+: GNU GPL 버전 3 또는 이후 <https://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
# grep --version
sed --version
grep (GNU grep) 3.0
Copyright (C) 2017 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Haertel and others, see <http://git.sv.gnu.org/cgit/grep.git/tree/AUTHORS>.
sed (GNU sed) 4.9
Copyright (C) 2022 Free Software Foundation, Inc.
GPLv3+ 라이선스: GNU GPL 버전 3 이상 <https://gnu.org/licenses/gpl.html>.
이 프로그램은 자유 소프트웨어입니다: 자유롭게 바꾸고 재배포할 수 있습니다.
법률이 허용하는 모든 범위내의 보증은 없습니다.

Jay Fenlason와(과) Tom Lord, Ken Pizzini,
Paolo Bonzini, Jim Meyering, Assaf Gordon이(가) 작성함.

이 sed 프로그램은 SELinux 기능을 제외하고 빌드했습니다.

GNU sed 홈 페이지: <https://www.gnu.org/software/sed/>.
GNU 소프트웨어 활용 일반 도움말: <https://www.gnu.org/gethelp/>.
버그 보고 전자메일 주소: <bug-sed@gnu.org>.

# echo $PATH
/usr/bin:/mingw64/bin:/c/Program Files/Java/jdk-21/bin:/c/bazel:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/mingw64/bin:/usr/local/bin:/usr/bin:/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0/:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl

autoconf, automake, libtool 재설치 및 업데이트
autoreconf 명령어를 사용하여 configure 스크립트를 다시 생성
autoreconf -fi
# autoreconf -fi
Copying file po/Makefile.in.in
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, '/mingw64/share/aclocal'.
libtoolize: copying file '/mingw64/share/aclocal/libtool.m4'
libtoolize: copying file '/mingw64/share/aclocal/ltoptions.m4'
libtoolize: copying file '/mingw64/share/aclocal/ltsugar.m4'
libtoolize: copying file '/mingw64/share/aclocal/ltversion.m4'
libtoolize: copying file '/mingw64/share/aclocal/lt~obsolete.m4'
configure.ac:65: installing 'build-aux/compile'
configure.ac:67: installing 'build-aux/missing'
examples/Makefile.am: installing 'build-aux/depcomp'

./configure &> configure.log

nayou@kimnayooung MINGW64 /c/libidn2
# export CC=/usr/bin/gcc
export CXX=/usr/bin/g++

nayou@kimnayooung MINGW64 /c/libidn2
# which egrep
which fgrep
/usr/bin/egrep
/usr/bin/fgrep

autoreconf -i
nayou@kimnayooung MINGW64 /c/libidn2
# autoreconf -i
autopoint: File po/Makefile.in.in has been locally modified.
autopoint: *** Some files have been locally modified. Not overwriting them because --force has not been specified. For your convenience, you find the local modifications in the file '/tmp/arMvdyxx/gtNCTlWp/autopoint.diff'.
autopoint: *** Stop.
autoreconf-2.72: error: autopoint failed with exit status: 1

configure 스크립트 다시생
grep -E '^./configure|^: error' configure.log | sort | uniq

nayou@kimnayooung MINGW64 /c/libidn2
# autoreconf -if
Copying file po/Makefile.in.in
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, '/mingw64/share/aclocal'.
libtoolize: copying file '/mingw64/share/aclocal/libtool.m4'
libtoolize: copying file '/mingw64/share/aclocal/ltoptions.m4'
libtoolize: copying file '/mingw64/share/aclocal/ltsugar.m4'
libtoolize: copying file '/mingw64/share/aclocal/ltversion.m4'
libtoolize: copying file '/mingw64/share/aclocal/lt~obsolete.m4'
configure.ac:65: installing 'build-aux/compile'
configure.ac:67: installing 'build-aux/missing'
examples/Makefile.am: installing 'build-aux/depcomp'
./configure &> configure.log
# which gcc
which g++
which make
which grep
which sed
/mingw64/bin/gcc
/mingw64/bin/g++
/usr/bin/make
/usr/bin/grep
/usr/bin/sed
notepad ~/.bashrc에 추가
export PATH=/mingw64/bin/gcc:/mingw64/bin/g++:/usr/bin/make:/usr/bin/grep:/usr/bin/sed:$PATH # 추가
적용
source ~/.bashrc
# echo $PATH
/mingw64/bin/gcc:/mingw64/bin/g++:/usr/bin/make:/usr/bin/grep:/usr/bin/sed:/usr/bin:/mingw64/bin:/c/Program Files/Java/jdk-21/bin:/c/bazel:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/mingw64/bin/gcc:/mingw64/bin/g++:/usr/bin/make:/usr/bin/grep:/usr/bin/sed:/usr/bin:/mingw64/bin:/c/Program Files/Java/jdk-21/bin:/c/bazel:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/usr/bin:/mingw64/bin:/c/Program Files/Java/jdk-21/bin:/c/bazel:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/mingw64/bin:/usr/local/bin:/usr/bin:/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0/:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl
autoreconf를 사용하여 configure 스크립트 재생성

# autoconf --version
automake --version
libtool --version
autoconf (GNU Autoconf) 2.72
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+/Autoconf: GNU GPL version 3 or later
<https://gnu.org/licenses/gpl.html>, <https://gnu.org/licenses/exceptions.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David J. MacKenzie and Akim Demaille.
automake (GNU automake) 1.17
Features: subsecond-mtime

Copyright (C) 2024 Free Software Foundation, Inc.
License GPLv2+: GNU GPL version 2 or later
  <https://gnu.org/licenses/gpl-2.0.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Tom Tromey <tromey@redhat.com>
       and Alexandre Duret-Lutz <adl@gnu.org>.
libtool (GNU libtool) 2.4.7
Written by Gordon Matzigkeit, 1996

Copyright (C) 2014 Free Software Foundation, Inc.

autoreconf 명령을 사용하여 configure 스크립트를 재생성 
-i 플래그는 필요한 파일을 설치하고, -f 플래그는 강제로 재생성을 수행
configure 스크립트와 관련된 모든 필요한 파일을 재생성하고 업데이트
autoreconf -i -f
configure 스크립트 실행
./configure

notepad ~./bashrc
~./bashrc 수정
# MinGW 64-bit 경로 추가
export PATH="/mingw64/bin:$PATH"

# 기본 유틸리티 경로 추가
export PATH="/usr/bin:$PATH"

# Java 설치 경로
export JAVA_HOME="/c/Program Files/Java/jdk-21"
export PATH="$JAVA_HOME/bin:$PATH"

# gRPC Java Plugin 경로
export GRPC_JAVA_PLUGIN="/c/grpc-java/build/gradle/wrapper/protoc-gen-grpc-java.exe"

# 기본 유틸리티 경로
export PATH="/usr/local/bin:/bin:$PATH"

# Windows 시스템 경로
export PATH="/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:$PATH"

# Perl 모듈 경로
export PATH="/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:$PATH"

# Python 경로
export PATH="/c/Users/nayou/AppData/Local/Programs/Python/Python312:$PATH"

/c/libidn2
autoreconf -if
run_configure.sh #./configure

환경설정 
export PATH="/c/Program Files/Java/jdk-21/bin:/c/bazel:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/mingw64/bin:/usr/local/bin:/usr/bin:/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0/:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl"
/c/libidn2
autoreconf -if
run_configure.sh #./configure
libtoolize:   error: '/mingw64/share/aclocal/libtool.m4' does not exist.

notepad ~./bashrc
# aclocal 경로 추가
export PATH="/usr/share/aclocal:/mingw64/share/aclocal:$PATH"
source ~/.bashrc
autoreconf -if
# autoreconf -if
FIND: 매개 변수 형식이 틀립니다.
autopoint: *** infrastructure files for version 0.19.8 not found; this is autopoint from GNU gettext-tools 0.22.4
autopoint: *** Stop.
autoreconf-2.72: error: autopoint failed with exit status: 1
autopoint 도구가 필요한 파일들을 찾지 못해 발생하는 문제
autopoint는 gettext 패키지의 일부이며, 인프라 파일들 (예: config.guess, config.sub 등)이 
특정 버전과 일치하지 않거나 누락된 경우
# gettext --version
gettext (GNU gettext-runtime) 0.22.4
Copyright (C) 1995-2023 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Ulrich Drepper이(가) 만들었습니다.
# autopoint --version
/bin/autopoint (GNU gettext-tools) 0.22.4
This binary is configured to use a versions archive in dirxz format.

Copyright (C) 2002-2023 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Written by Bruno Haible

버전 아카이브를 재설치하거나 갱신
autopoint --force
# autopoint --force
FIND: 매개 변수 형식이 틀립니다.
autopoint: *** infrastructure files for version 0.19.8 not found; this is autopoint from GNU gettext-tools 0.22.4
autopoint: *** Stop.

# which find
/c/Windows/System32/find

~/.bashrc 수정
export PATH="/mingw64/bin:/usr/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/Program Files/Java/jdk-21/bin:/usr/local/bin:/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312"
source ~/.bashrc
which find
/usr/bin/find (성공!)

프로젝트에 필요한 gettext 인프라 파일들을 가져오고 설정
autopoint --force

autotools를 사용하는 프로젝트에서 configure 스크립트와 
관련된 모든 파일들을 생성하거나 업데이트하는 데 사용
configure.ac 또는 configure.in 파일을 기반으로 
configure 스크립트와 기타 관련 파일을 자동으로 생성하거나 갱신하는 역할
autoreconf -if (install, force)
autoreconf -if는 더 포괄적인 작업을 수행

libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize:   error: '/mingw64/share/aclocal/libtool.m4' does not exist.
autoreconf-2.72: error: libtoolize failed with exit status: 1

libtool 설치 확인
pacman -Q libtool
# pacman -Q libtool
libtool 2.4.7-4
libtoolize --force
/mingw64/share/aclocal/libtool.m4 파일이 여전히 없거나 문제가 계속된다면,
libtool의 설치 상태를 점검하고 필요한 파일이 포함된 패키지를 재설치하거나 업데이트한다.
# pacman -Fy
:: 꾸러미 데이터베이스 동기화 중...
 clangarm64              3.7 MiB   726 KiB/s 00:05 [#########################] 100%
 mingw32              1454.7 KiB   744 KiB/s 00:02 [#########################] 100%
 mingw64                 4.7 MiB   909 KiB/s 00:05 [#########################] 100%
 ucrt64                  5.0 MiB  1772 KiB/s 00:03 [#########################] 100%
 clang32              1281.8 KiB   294 KiB/s 00:04 [#########################] 100%
 clang64                 4.8 MiB  1063 KiB/s 00:05 [#########################] 100%
 msys                 1188.5 KiB  1776 KiB/s 00:01 [#########################] 100%

pacman -F libtool.m4
clangarm64/mingw-w64-clang-aarch64-libtool 2.4.7-2
    clangarm64/share/aclocal/libtool.m4
mingw32/mingw-w64-i686-libtool 2.4.7-2
    mingw32/share/aclocal/libtool.m4
mingw64/mingw-w64-x86_64-libtool 2.4.7-2 [설치함]
    mingw64/share/aclocal/libtool.m4
ucrt64/mingw-w64-ucrt-x86_64-libtool 2.4.7-2
    ucrt64/share/aclocal/libtool.m4
clang32/mingw-w64-clang-i686-libtool 2.4.7-2
    clang32/share/aclocal/libtool.m4
clang64/mingw-w64-clang-x86_64-libtool 2.4.7-2
    clang64/share/aclocal/libtool.m4
msys/libtool 2.4.7-4 [설치함]
    usr/share/aclocal/libtool.m4

pacman -S libtool

nayou@kimnayooung MINGW64 /c/libidn2
# ls -l /mingw64/share/aclocal/libtool.m4
-rw-r--r-- 1 nayou nayou 307384  8월 27 19:30 /mingw64/share/aclocal/libtool.m4

nayou@kimnayooung MINGW64 /c/libidn2
# autoreconf -if
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize:   error: '/mingw64/share/aclocal/libtool.m4' does not exist.
autoreconf-2.72: error: libtoolize failed with exit status: 1

nayou@kimnayooung MINGW64 /c/libidn2

nayou@kimnayooung MINGW64 /c/libidn2
# cp /usr/share/aclocal/libtool.m4 /mingw64/share/aclocal/

nayou@kimnayooung MINGW64 /c/libidn2
# ls -l /mingw64/share/aclocal/libtool.m4
-rw-r--r-- 1 nayou nayou 307384  8월 27 20:10 /mingw64/share/aclocal/libtool.m4

nayou@kimnayooung MINGW64 /c/libidn2
# chmod 644 /mingw64/share/aclocal/libtool.m4

nayou@kimnayooung MINGW64 /c/libidn2
# libtool --version
libtool (GNU libtool) 2.4.7
Written by Gordon Matzigkeit, 1996

Copyright (C) 2014 Free Software Foundation, Inc.


nayou@kimnayooung MINGW64 /c/libidn2
# pacman -R libtool
의존성 검사 중...

꾸러미 (1) libtool-2.4.7-4

총 제거 크기:  2.15 MiB

:: 이 꾸러미를 제거하시겠습니까? [Y/n] y
:: 전처리 훅들을 실행 중...
(1/1) Removing old entries from the info directory file...
:: 꾸러미 변경사항을 처리 중...
(1/1) 삭제 중 libtool                              [#] 100%

nayou@kimnayooung MINGW64 /c/libidn2
# pacman -S libtool
의존성 해결 중...
꾸러미 충돌을 찾는 중...

꾸러미 (1) libtool-2.4.7-4

총 설치 크기:  2.15 MiB

:: 설치를 진행하시겠습니까? [Y/n] y
(1/1) 키링의 키를 검사 중                          [#] 100%
(1/1) 꾸러미 무결성 검사 중                        [#] 100%
(1/1) 꾸러미 파일 불러오는 중                      [#] 100%
(1/1) 파일 충돌 검사 중                            [#] 100%
(1/1) 사용 가능한 디스크 공간 검사 중              [#] 100%
:: 꾸러미 변경사항을 처리 중...
(1/1) 설치 중 libtool                              [#] 100%
:: 후처리 훅들을 실행 중...
(1/1) Updating the info directory file...

nayou@kimnayooung MINGW64 /c/libidn2
# echo $ACLOCAL_PATH
/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/m4

nayou@kimnayooung MINGW64 /c/libidn2
# find . -name "config.cache" -delete
find . -name "config.log" -delete

libtoolize를 소스에서 직접 빌드
# wget https://ftp.gnu.org/gnu/libtool/libtool-2.4.6.tar.gz
# tar -xzvf libtool-2.4.6.tar.gz
# cd libtool-2.4.6
# ./configure
configure: creating ./config.status
config.status: creating Makefile
config.status: creating config.h
config.status: executing tests/atconfig commands
config.status: executing depfiles commands
config.status: executing libtool commands
# make
# make install

# which libtoolize
/mingw64/bin/libtoolize

nayou@kimnayooung MINGW64 /c/libidn2/libtool-2.4.6
# notepad ~/.bashrc
PATH에 /c/libidn2/libtool-2.4.6 추가

nayou@kimnayooung MINGW64 /c/libidn2/libtool-2.4.6
# source ~/.bashrc

nayou@kimnayooung MINGW64 /c/libidn2/libtool-2.4.6
# which libtoolize
/c/libidn2/libtool-2.4.6/libtoolize

경로확인 
# ls /c/libidn2/libtool-2.4.6/libtoolize
/c/libidn2/libtool-2.4.6/libtoolize

# libtoolize --version
libtoolize (GNU libtool) 2.4.6
Written by Gary V. Vaughan <gary@gnu.org>, 2003

Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

# find / -name libtool.m4
/home/nayou/_bazel_nayou/4yp365mj/external/protobuf~/m4/libtool.m4
/home/nayou/_bazel_nayou/4yp365mj/external/protobuf~/third_party/googletest/googletest/m4/libtool.m4
/mingw64/share/aclocal/libtool.m4 (있음)
/usr/share/aclocal/libtool.m4

nayou@kimnayooung MINGW64 /c/libidn2/libtool-2.4.6
# ls -l /mingw64/share/aclocal/libtool.m4
ls -l /usr/share/aclocal/libtool.m4
-rw-r--r-- 1 nayou nayou 305723  8월 27 20:17 /mingw64/share/aclocal/libtool.m4
-rw-r--r-- 1 nayou nayou 307384  7월  5 17:31 /usr/share/aclocal/libtool.m4

nayou@kimnayooung MINGW64 /c/libidn2/libtool-2.4.6
# chmod 644 /mingw64/share/aclocal/libtool.m4
chmod 644 /usr/share/aclocal/libtool.m4

nayou@kimnayooung MINGW64 /c/libidn2/libtool-2.4.6
# chmod 755 /mingw64/share/aclocal
chmod 755 /usr/share/aclocal

libtool의 설정 파일들을 프로젝트 디렉토리에 복사하거나 업데이트하여, 
라이브러리 관리와 관련된 설정을 자동으로 처리할 수 있게 됨.
configure.ac나 Makefile.am 파일에 필요한 설정을 추가하는 데 도움이 됨.
# libtoolize --force --copy
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/compile'
libtoolize: copying file 'build-aux/config.guess'
libtoolize: copying file 'build-aux/config.sub'
libtoolize: copying file 'build-aux/depcomp'
libtoolize: copying file 'build-aux/install-sh'
libtoolize: copying file 'build-aux/missing'
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
libtoolize: copying file 'm4/libtool.m4'
libtoolize: copying file 'm4/ltoptions.m4'
libtoolize: copying file 'm4/ltsugar.m4'
libtoolize: copying file 'm4/ltversion.m4'
libtoolize: copying file 'm4/lt~obsolete.m4'

autoreconf는 autoconf, automake, libtool, 등과 같은 Autotools 구성 도구들을 자동으로 업데이트하는 데 사용
프로젝트의 빌드 시스템을 최신 상태로 유지하는 데 도움
# autoreconf -if
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/compile'
libtoolize: copying file 'build-aux/config.guess'
libtoolize: copying file 'build-aux/config.sub'
libtoolize: copying file 'build-aux/depcomp'
libtoolize: copying file 'build-aux/install-sh'
libtoolize: copying file 'build-aux/missing'
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
libtoolize: copying file 'm4/libtool.m4'
libtoolize: copying file 'm4/ltargz.m4'
libtoolize: You should add the contents of 'm4/ltargz.m4' to 'aclocal.m4'.
libtoolize: copying file 'm4/ltdl.m4'
libtoolize: You should add the contents of 'm4/ltdl.m4' to 'aclocal.m4'.
libtoolize: copying file 'm4/ltoptions.m4'
libtoolize: copying file 'm4/ltsugar.m4'
libtoolize: copying file 'm4/ltversion.m4'
libtoolize: copying file 'm4/lt~obsolete.m4'
libtoolize: putting libltdl files in LT_CONFIG_LTDL_DIR, 'libltdl'.
libtoolize: copying file 'libltdl/COPYING.LIB'
libtoolize: copying file 'libltdl/Makefile.am'
libtoolize: copying file 'libltdl/README'
libtoolize: copying file 'libltdl/configure.ac'
libtoolize: copying file 'libltdl/aclocal.m4'
libtoolize: copying file 'libltdl/Makefile.in'
libtoolize: copying file 'libltdl/config-h.in'
libtoolize: copying file 'libltdl/configure'
libtoolize: copying file 'libltdl/libltdl/lt__alloc.h'
libtoolize: copying file 'libltdl/libltdl/lt__argz_.h'
libtoolize: copying file 'libltdl/libltdl/lt__dirent.h'
libtoolize: copying file 'libltdl/libltdl/lt__glibc.h'
libtoolize: copying file 'libltdl/libltdl/lt__private.h'
libtoolize: copying file 'libltdl/libltdl/lt__strl.h'
libtoolize: copying file 'libltdl/libltdl/lt_dlloader.h'
libtoolize: copying file 'libltdl/libltdl/lt_error.h'
libtoolize: copying file 'libltdl/libltdl/lt_system.h'
libtoolize: copying file 'libltdl/libltdl/slist.h'
libtoolize: copying file 'libltdl/loaders/dld_link.c'
libtoolize: copying file 'libltdl/loaders/dlopen.c'
libtoolize: copying file 'libltdl/loaders/dyld.c'
libtoolize: copying file 'libltdl/loaders/load_add_on.c'
libtoolize: copying file 'libltdl/loaders/loadlibrary.c'
libtoolize: copying file 'libltdl/loaders/preopen.c'
libtoolize: copying file 'libltdl/loaders/shl_load.c'
libtoolize: copying file 'libltdl/lt__alloc.c'
libtoolize: copying file 'libltdl/lt__argz.c'
libtoolize: copying file 'libltdl/lt__dirent.c'
libtoolize: copying file 'libltdl/lt__strl.c'
libtoolize: copying file 'libltdl/lt_dlloader.c'
libtoolize: copying file 'libltdl/lt_error.c'
libtoolize: copying file 'libltdl/ltdl.c'
libtoolize: copying file 'libltdl/ltdl.h'
libtoolize: copying file 'libltdl/slist.c'
libtoolize: Remember to add 'LTDL_INIT' to configure.ac.
automake-1.15: error: cannot open < libltdl/ltdl.mk: No such file or directory
autoreconf-2.69: automake failed with exit status: 1

libltdl 디렉토리 확인
# ls -l /c/libidn2/libtool-2.4.6/libltdl
합계 909
-rw-r--r-- 1 nayou nayou  42362  8월 27 20:31 aclocal.m4
-rw-r--r-- 1 nayou nayou   4863  8월 27 20:31 config-h.in
-rwxr-xr-x 1 nayou nayou 461349  8월 27 20:31 configure
-rw-r--r-- 1 nayou nayou   2628  8월 27 20:31 configure.ac
-rw-r--r-- 1 nayou nayou  26530  8월 27 20:31 COPYING.LIB
drwxr-xr-x 1 nayou nayou      0  8월 27 20:31 libltdl
-rw-r--r-- 1 nayou nayou    941  8월 27 20:16 libltdl.la
-rw-r--r-- 1 nayou nayou    344  8월 27 20:16 libltdl_libltdl_la-lt__alloc.lo
-rw-r--r-- 1 nayou nayou   8636  8월 27 20:16 libltdl_libltdl_la-lt__alloc.o
-rw-r--r-- 1 nayou nayou    350  8월 27 20:16 libltdl_libltdl_la-lt_dlloader.lo
-rw-r--r-- 1 nayou nayou  12489  8월 27 20:16 libltdl_libltdl_la-lt_dlloader.o
-rw-r--r-- 1 nayou nayou    341  8월 27 20:16 libltdl_libltdl_la-lt_error.lo
-rw-r--r-- 1 nayou nayou   8080  8월 27 20:16 libltdl_libltdl_la-lt_error.o
-rw-r--r-- 1 nayou nayou    329  8월 27 20:16 libltdl_libltdl_la-ltdl.lo
-rw-r--r-- 1 nayou nayou 100456  8월 27 20:16 libltdl_libltdl_la-ltdl.o
-rw-r--r-- 1 nayou nayou    332  8월 27 20:16 libltdl_libltdl_la-slist.lo
-rw-r--r-- 1 nayou nayou  13258  8월 27 20:16 libltdl_libltdl_la-slist.o
drwxr-xr-x 1 nayou nayou      0  8월 27 20:31 loaders
-rw-r--r-- 1 nayou nayou    859  8월 27 20:16 loadlibrary.la
-rw-r--r-- 1 nayou nayou   2298  8월 27 20:31 lt__alloc.c
-rw-r--r-- 1 nayou nayou   5896  8월 27 20:31 lt__argz.c
-rw-r--r-- 1 nayou nayou    284  8월 27 20:16 lt__argz.lo
-rw-r--r-- 1 nayou nayou  11779  8월 27 20:16 lt__argz.o
-rw-r--r-- 1 nayou nayou   3014  8월 27 20:31 lt__dirent.c
-rw-r--r-- 1 nayou nayou   3610  8월 27 20:31 lt__strl.c
-rw-r--r-- 1 nayou nayou    284  8월 27 20:16 lt__strl.lo
-rw-r--r-- 1 nayou nayou   5959  8월 27 20:16 lt__strl.o
-rw-r--r-- 1 nayou nayou   6088  8월 27 20:31 lt_dlloader.c
-rw-r--r-- 1 nayou nayou   2967  8월 27 20:31 lt_error.c
-rw-r--r-- 1 nayou nayou  55324  8월 27 20:31 ltdl.c
-rw-r--r-- 1 nayou nayou   5709  8월 27 20:31 ltdl.h
-rw-r--r-- 1 nayou nayou   5146  8월 27 20:31 Makefile.am
-rw-r--r-- 1 nayou nayou  53358  8월 27 20:31 Makefile.in
-rw-r--r-- 1 nayou nayou    693  8월 27 20:31 README
-rw-r--r-- 1 nayou nayou   9830  8월 27 20:31 slist.c
-rw-r--r-- 1 nayou nayou      6  2월 16  2015 stamp-mk
=>libltdl/ltdl.mk 파일이 누락

libtool 소스에서 libltdl 디렉토리 설치
# make
make: *** 'm4/ltversion.m4'에서 필요한 'm4/ltversion.in' 타겟을 만들 규칙이 없습니다.  멈춤.

/c/libidn2
# wget https://ftp.gnu.org/gnu/libtool/libtool-2.4.6.tar.gz
tar -xzf libtool-2.4.6.tar.gz
cd libtool-2.4.6
--2024-08-27 20:45:41--  https://ftp.gnu.org/gnu/libtool/libtool-2.4.6.tar.gz
'/usr/ssl/certs/ca-bundle.crt' CA 인증서를 불러왔습니다
ftp.gnu.org (ftp.gnu.org) 해석 중... 209.51.188.20, 2001:470:142:3::b
다음으로 연결 중: ftp.gnu.org (ftp.gnu.org)|209.51.188.20|:443... 연결했습니다.
HTTP 요청을 보냈습니다. 응답 기다리는 중... 200 OK
길이: 1806697 (1.7M) [application/x-gzip]
저장 위치: `libtool-2.4.6.tar.gz.1'

libtool-2.4.6. 100%[====>]   1.72M   864KB/s    /  2.0s

2024-08-27 20:45:45 (864 KB/s) - `libtool-2.4.6.tar.gz.1' 저장함 [1806697/1806697]

cd libtool-2.4.6
# make
  GEN      libtoolize
  GEN      libltdl/libltdl/lt__argz.h
make  all-recursive
make[1]: Entering directory '/c/libidn2/libtool-2.4.6'
Making all in .
make[2]: Entering directory '/c/libidn2/libtool-2.4.6'
  CC       libltdl/loaders/libltdl_libltdl_la-preopen.lo
  CC       libltdl/libltdl_libltdl_la-lt__alloc.lo
  CC       libltdl/libltdl_libltdl_la-lt_dlloader.lo
  CC       libltdl/libltdl_libltdl_la-lt_error.lo
  CC       libltdl/libltdl_libltdl_la-ltdl.lo
  CC       libltdl/libltdl_libltdl_la-slist.lo
  CC       libltdl/loaders/loadlibrary.lo
  CCLD     libltdl/loadlibrary.la
C:\msys64\mingw64\bin\ar.exe: `u' modifier ignored since `D' is the default (see `U')
  CC       libltdl/lt__argz.lo
  CCLD     libltdl/libltdl.la
C:\msys64\mingw64\bin\ar.exe: `u' modifier ignored since `D' is the default (see `U')
make[2]: Leaving directory '/c/libidn2/libtool-2.4.6'
make[1]: Leaving directory '/c/libidn2/libtool-2.4.6'

# make install
make  install-recursive
make[1]: Entering directory '/c/libidn2/libtool-2.4.6'
Making install in .
make[2]: Entering directory '/c/libidn2/libtool-2.4.6'
make[3]: Entering directory '/c/libidn2/libtool-2.4.6'
 /usr/bin/mkdir -p '/mingw64/bin'
 /usr/bin/install -c libtool '/mingw64/bin'
 /usr/bin/mkdir -p '/mingw64/lib'
 /bin/sh ./libtool   --mode=install /usr/bin/install -c   libltdl/libltdl.la '/mingw64/lib'
libtool: install: /usr/bin/install -c libltdl/.libs/libltdl.dll.a /mingw64/lib/libltdl.dll.a
libtool: install: base_file=`basename libltdl/libltdl.la`
libtool: install:  dlpath=`/bin/sh 2>&1 -c '. libltdl/.libs/'libltdl.la'i; echo libltdl-7.dll'`
libtool: install:  dldir=/mingw64/lib/`dirname ../bin/libltdl-7.dll`
libtool: install:  test -d /mingw64/lib/../bin || mkdir -p /mingw64/lib/../bin
libtool: install:  /usr/bin/install -c libltdl/.libs/libltdl-7.dll /mingw64/lib/../bin/libltdl-7.dll
libtool: install:  chmod a+x /mingw64/lib/../bin/libltdl-7.dll
libtool: install:  if test -n '' && test -n 'strip --strip-unneeded'; then eval 'strip --strip-unneeded /mingw64/lib/../bin/libltdl-7.dll' || exit 0; fi
libtool: install: /usr/bin/install -c libltdl/.libs/libltdl.lai /mingw64/lib/libltdl.la
libtool: install: /usr/bin/install -c libltdl/.libs/libltdl.a /mingw64/lib/libltdl.a
libtool: install: chmod 644 /mingw64/lib/libltdl.a
libtool: install: ranlib /mingw64/lib/libltdl.a
 GREP='/usr/bin/grep' SED='/usr/bin/sed' './build-aux/inline-source' libtoolize > '/mingw64/bin/libtoolize'
rm -rf '/mingw64/share/libtool'/*
 /usr/bin/install -c -m 644 './m4/libtool.m4' '/mingw64/share/aclocal/libtool.m4'
 /usr/bin/install -c -m 644 './m4/ltargz.m4' '/mingw64/share/aclocal/ltargz.m4'
 /usr/bin/install -c -m 644 './m4/ltdl.m4' '/mingw64/share/aclocal/ltdl.m4'
 /usr/bin/install -c -m 644 './m4/ltoptions.m4' '/mingw64/share/aclocal/ltoptions.m4'
 /usr/bin/install -c -m 644 './m4/ltsugar.m4' '/mingw64/share/aclocal/ltsugar.m4'
 /usr/bin/install -c -m 644 './m4/ltversion.m4' '/mingw64/share/aclocal/ltversion.m4'
 /usr/bin/install -c -m 644 './m4/lt~obsolete.m4' '/mingw64/share/aclocal/lt~obsolete.m4'
 /usr/bin/install -c './build-aux/compile' '/mingw64/share/libtool/build-aux/compile'
 /usr/bin/install -c './build-aux/config.guess' '/mingw64/share/libtool/build-aux/config.guess'
 /usr/bin/install -c './build-aux/config.sub' '/mingw64/share/libtool/build-aux/config.sub'
 /usr/bin/install -c './build-aux/depcomp' '/mingw64/share/libtool/build-aux/depcomp'
 /usr/bin/install -c './build-aux/install-sh' '/mingw64/share/libtool/build-aux/install-sh'
 /usr/bin/install -c './build-aux/missing' '/mingw64/share/libtool/build-aux/missing'
 /usr/bin/install -c -m 644 './build-aux/ltmain.sh' '/mingw64/share/libtool/build-aux/ltmain.sh'
 /usr/bin/install -c -m 644 './libltdl/COPYING.LIB' '/mingw64/share/libtool/COPYING.LIB'
 /usr/bin/install -c -m 644 './libltdl/Makefile.am' '/mingw64/share/libtool/Makefile.am'
 /usr/bin/install -c -m 644 './libltdl/README' '/mingw64/share/libtool/README'
 /usr/bin/install -c -m 644 './libltdl/configure.ac' '/mingw64/share/libtool/configure.ac'
 /usr/bin/install -c -m 644 './libltdl/aclocal.m4' '/mingw64/share/libtool/aclocal.m4'
 /usr/bin/install -c -m 644 './libltdl/Makefile.in' '/mingw64/share/libtool/Makefile.in'
 /usr/bin/install -c -m 644 './libltdl/config-h.in' '/mingw64/share/libtool/config-h.in'
 /usr/bin/install -c -m 644 './libltdl/configure' '/mingw64/share/libtool/configure'
 /usr/bin/install -c -m 644 './libltdl/libltdl/lt__alloc.h' '/mingw64/share/libtool/libltdl/lt__alloc.h'
 /usr/bin/install -c -m 644 './libltdl/libltdl/lt__argz_.h' '/mingw64/share/libtool/libltdl/lt__argz_.h'
 /usr/bin/install -c -m 644 './libltdl/libltdl/lt__dirent.h' '/mingw64/share/libtool/libltdl/lt__dirent.h'
 /usr/bin/install -c -m 644 './libltdl/libltdl/lt__glibc.h' '/mingw64/share/libtool/libltdl/lt__glibc.h'
 /usr/bin/install -c -m 644 './libltdl/libltdl/lt__private.h' '/mingw64/share/libtool/libltdl/lt__private.h'
 /usr/bin/install -c -m 644 './libltdl/libltdl/lt__strl.h' '/mingw64/share/libtool/libltdl/lt__strl.h'
 /usr/bin/install -c -m 644 './libltdl/libltdl/lt_dlloader.h' '/mingw64/share/libtool/libltdl/lt_dlloader.h'
 /usr/bin/install -c -m 644 './libltdl/libltdl/lt_error.h' '/mingw64/share/libtool/libltdl/lt_error.h'
 /usr/bin/install -c -m 644 './libltdl/libltdl/lt_system.h' '/mingw64/share/libtool/libltdl/lt_system.h'
 /usr/bin/install -c -m 644 './libltdl/libltdl/slist.h' '/mingw64/share/libtool/libltdl/slist.h'
 /usr/bin/install -c -m 644 './libltdl/loaders/dld_link.c' '/mingw64/share/libtool/loaders/dld_link.c'
 /usr/bin/install -c -m 644 './libltdl/loaders/dlopen.c' '/mingw64/share/libtool/loaders/dlopen.c'
 /usr/bin/install -c -m 644 './libltdl/loaders/dyld.c' '/mingw64/share/libtool/loaders/dyld.c'
 /usr/bin/install -c -m 644 './libltdl/loaders/load_add_on.c' '/mingw64/share/libtool/loaders/load_add_on.c'
 /usr/bin/install -c -m 644 './libltdl/loaders/loadlibrary.c' '/mingw64/share/libtool/loaders/loadlibrary.c'
 /usr/bin/install -c -m 644 './libltdl/loaders/preopen.c' '/mingw64/share/libtool/loaders/preopen.c'
 /usr/bin/install -c -m 644 './libltdl/loaders/shl_load.c' '/mingw64/share/libtool/loaders/shl_load.c'
 /usr/bin/install -c -m 644 './libltdl/lt__alloc.c' '/mingw64/share/libtool/lt__alloc.c'
 /usr/bin/install -c -m 644 './libltdl/lt__argz.c' '/mingw64/share/libtool/lt__argz.c'
 /usr/bin/install -c -m 644 './libltdl/lt__dirent.c' '/mingw64/share/libtool/lt__dirent.c'
 /usr/bin/install -c -m 644 './libltdl/lt__strl.c' '/mingw64/share/libtool/lt__strl.c'
 /usr/bin/install -c -m 644 './libltdl/lt_dlloader.c' '/mingw64/share/libtool/lt_dlloader.c'
 /usr/bin/install -c -m 644 './libltdl/lt_error.c' '/mingw64/share/libtool/lt_error.c'
 /usr/bin/install -c -m 644 './libltdl/ltdl.c' '/mingw64/share/libtool/ltdl.c'
 /usr/bin/install -c -m 644 './libltdl/ltdl.h' '/mingw64/share/libtool/ltdl.h'
 /usr/bin/install -c -m 644 './libltdl/ltdl.mk' '/mingw64/share/libtool/ltdl.mk'
 /usr/bin/install -c -m 644 './libltdl/slist.c' '/mingw64/share/libtool/slist.c'
chmod a+x '/mingw64/share/libtool/configure'
 /usr/bin/mkdir -p '/mingw64/include'
 /usr/bin/install -c -m 644 libltdl/ltdl.h '/mingw64/include'
 /usr/bin/mkdir -p '/mingw64/share/info'
 /usr/bin/install -c -m 644 ./doc/libtool.info ./doc/libtool.info-1 ./doc/libtool.info-2 '/mingw64/share/info'
 install-info --info-dir='/mingw64/share/info' '/mingw64/share/info/libtool.info'
 /usr/bin/mkdir -p '/mingw64/include/libltdl'
 /usr/bin/install -c -m 644 libltdl/libltdl/lt_system.h libltdl/libltdl/lt_error.h libltdl/libltdl/lt_dlloader.h '/mingw64/include/libltdl'
 /usr/bin/mkdir -p '/mingw64/share/man/man1'
 /usr/bin/install -c -m 644 ./doc/libtool.1 ./doc/libtoolize.1 '/mingw64/share/man/man1'
make[3]: Leaving directory '/c/libidn2/libtool-2.4.6'
make[2]: Leaving directory '/c/libidn2/libtool-2.4.6'
make[1]: Leaving directory '/c/libidn2/libtool-2.4.6'

=> libtool 실행 파일: /mingw64/bin/libtoolize
라이브러리 파일들: /mingw64/lib/
헤더 파일들: /mingw64/include/
문서와 매뉴얼: /mingw64/share/info/ 및 /mingw64/share/man/man1/

/c/libidn2/libtool-2.4.6
# /mingw64/bin/libtool --version
libtool (GNU libtool) 2.4.6
Written by Gordon Matzigkeit, 1996

Copyright (C) 2014 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

# which libtoolize
/c/libidn2/libtool-2.4.6/libtoolize

다시 돌아와서
cd /c/libidn2
# autoreconf -if
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize:   error: '/mingw64/share/aclocal/libtool.m4' does not exist.
autoreconf-2.72: error: libtoolize failed with exit status: 1

# libtoolize --install --force
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: linking file 'build-aux/config.guess'
libtoolize: linking file 'build-aux/config.sub'
libtoolize: linking file 'build-aux/install-sh'
libtoolize: linking file 'build-aux/ltmain.sh'
libtoolize:   error: '/mingw64/share/aclocal/libtool.m4' does not exist.

nayou@kimnayooung MINGW64 /c/libidn2
# which
/c/libidn2/libtool-2.4.6/libtoolize

nayou@kimnayooung MINGW64 /c/libidn2
# cd /c/libidn2/libtool-2.4.6

nayou@kimnayooung MINGW64 /c/libidn2/libtool-2.4.6
# notepad libtoolize

  # Locations for important files:
  prefix="/mingw64"
  datadir="/mingw64/share"
  pkgauxdir="/mingw64/share/libtool/build-aux"
  pkgltdldir="/mingw64/share/libtool"
  aclocaldir="/mingw64/share/aclocal"
=>
  #aclocaldir="/mingw64/share/aclocal"
  aclocaldir="/usr/share/aclocal"

다시 돌아와서
cd /c/libidn2
필요한 파일들을 생성 및 재생성
# autoreconf -if
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, '/mingw64/share/aclocal'.
libtoolize: copying file '/mingw64/share/aclocal/libtool.m4'
libtoolize: copying file '/mingw64/share/aclocal/ltoptions.m4'
libtoolize: copying file '/mingw64/share/aclocal/ltsugar.m4'
libtoolize: copying file '/mingw64/share/aclocal/ltversion.m4'
libtoolize: copying file '/mingw64/share/aclocal/lt~obsolete.m4'
configure.ac:65: installing 'build-aux/compile'
configure.ac:67: installing 'build-aux/missing'
examples/Makefile.am: installing 'build-aux/depcomp'

프로젝트의 빌드 환경 설정 및 Makefile 생성
#./configure
# ./run_configure.sh
./configure: line 13736: as_fn_executable_p: command not found
./configure: line 13837: as_fn_executable_p: command not found
./configure: line 13882: as_fn_executable_p: command not found
./configure: line 13930: as_fn_executable_p: command not found
./configure: line 13980: as_fn_executable_p: command not found
./configure: line 14303: as_fn_executable_p: command not found
./configure: line 1614: as_fn_set_status: command not found
./configure: line 17405: `        gl_WARN_ADD("-W$w")'
./configure: line 17405: syntax error near unexpected token `"-W$w"'
./configure: line 1800: as_fn_set_status: command not found
./configure: line 2856: as_fn_executable_p: command not found
./configure: line 2962: as_fn_executable_p: command not found
./configure: line 3076: as_fn_executable_p: command not found
./configure: line 3184: as_fn_executable_p: command not found
./configure: line 3912: as_fn_executable_p: command not found
./configure: line 411: as_fn_exit: command not found
./configure: line 4354: as_fn_executable_p: command not found
./configure: line 4405: as_fn_executable_p: command not found
./configure: line 5208: as_fn_executable_p: command not found
./configure: line 5292: as_fn_executable_p: command not found
./configure: line 5366: as_fn_executable_p: command not found
./configure: line 5443: as_fn_executable_p: command not found
./configure: line 6232: as_fn_executable_p: command not found
./configure: line 6342: as_fn_executable_p: command not found
./configure: line 6697: as_fn_executable_p: command not found
./configure: line 6855: as_fn_executable_p: command not found
./configure: line 7051: as_fn_executable_p: command not found
./configure: line 7162: as_fn_executable_p: command not found
./configure: line 7661: as_fn_executable_p: command not found
./configure: line 8061: as_fn_executable_p: command not found
./configure: line 8934: as_fn_executable_p: command not found
: error: C compiler cannot create executables
: error: C preprocessor "/lib/cpp" fails sanity check
: error: cannot compute suffix of executables: cannot compile and link
: error: cannot compute suffix of object files: cannot compile
: error: cannot run C compiled programs.
: error: in '/c/libidn2':
: error: no acceptable C compiler found in $PATH
: error: no acceptable egrep could be found in /c/libidn2/libtool-2.4.6:/mingw64/bin:/usr/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/Program Files/Java/jdk-21/bin:/usr/local/bin:/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/usr/xpg4/bin
: error: no acceptable fgrep could be found in /c/libidn2/libtool-2.4.6:/mingw64/bin:/usr/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/Program Files/Java/jdk-21/bin:/usr/local/bin:/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/usr/xpg4/bin
: error: no acceptable grep could be found in /c/libidn2/libtool-2.4.6:/mingw64/bin:/usr/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/Program Files/Java/jdk-21/bin:/usr/local/bin:/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/usr/xpg4/bin
: error: no acceptable sed could be found in $PATH

(오류처리)
as_fn_executable_p as_fn_set_status as_fn_executable_p not found
configure 스크립트가 제대로 생성되지 않았거나, 필요한 매크로들이 포함되지 않았기 때문에 발생
autoconf, automake, libtool 등을 최신 버전으로 업데이트
pacman -Syu autoconf automake libtool

# grep "as_fn_executable_p ()" /c/libidn2/configure
as_fn_executable_p ()
nayou@kimnayooung MINGW64 /c/libidn2
# notepad configure
정의없이 바로 
if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="${ac_tool_prefix}gcc"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
정의가 없다면, configure 스크립트가 손상된 것이므로 다시 생성
configure 스크립트 재생성
rm -f /c/libidn2/configure
#configure 스크립트를 다시 생성하거나 갱신할 때 사용하는 명령어
-f (--force): 강제로 모든 파일을 다시 생성합니다. 
-i (--install): 필요한 파일들을 자동으로 설치합니다.
-v (--verbose): 실행 과정을 자세히 출력합니다. 
autoreconf -fiv
설치내역
# pacman -Q | grep -E 'autoconf|automake|libtool'
autoconf-wrapper 20240607-1
autoconf2.13 2.13-6
autoconf2.69 2.69-4
autoconf2.71 2.71-3
autoconf2.72 2.72-1
automake-wrapper 20240607-1
automake1.11 1.11.6-6
automake1.12 1.12.6-6
automake1.13 1.13.4-7
automake1.14 1.14.1-6
automake1.15 1.15.1-4
automake1.16 1.16.5-1
automake1.17 1.17-1
libtool 2.4.7-4
mingw-w64-x86_64-libtool 2.4.7-2
패키지 제거
pacman -R autoconf-wrapper autoconf2.13 autoconf2.69 autoconf2.71 autoconf2.72
pacman -R automake-wrapper automake1.11 automake1.12 automake1.13 automake1.14 automake1.15 automake1.16 automake1.17
pacman -R libtool mingw-w64-x86_64-libtool
패키지 재설치
pacman -S autoconf-wrapper autoconf2.72 automake-wrapper automake1.17 libtool mingw-w64-x86_64-libtool
최신 패키지 업데이트
pacman -Syu
기본적인 빌드 도구(예: gcc, make)가 설치되어 있는지 확인
pacman -S base-devel
echo $PATH
/usr/bin 및 mingw64/bin 디렉토리가 포함
Autoconf 및 관련 도구의 설치 상태
# which autoconf
which automake
which libtool
/usr/bin/autoconf
/usr/bin/automake
/c/libidn2/libtool-2.4.6/libtool

# autoreconf -fiv
autoreconf-2.72: export WARNINGS=
autoreconf-2.72: Entering directory '.'
autoreconf-2.72: running: autopoint --force
Copying file po/Makefile.in.in
autoreconf-2.72: running: aclocal --force
autoreconf-2.72: configure.ac: tracing
autoreconf-2.72: running: libtoolize --copy --force
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, '/mingw64/share/aclocal'.
libtoolize: copying file '/mingw64/share/aclocal/libtool.m4'
libtoolize: copying file '/mingw64/share/aclocal/ltoptions.m4'
libtoolize: copying file '/mingw64/share/aclocal/ltsugar.m4'
libtoolize: copying file '/mingw64/share/aclocal/ltversion.m4'
libtoolize: copying file '/mingw64/share/aclocal/lt~obsolete.m4'
libtoolize: Consider adding '-I /mingw64/share/aclocal' to ACLOCAL_AMFLAGS in Makefile.am.
autoreconf-2.72: running: intltoolize --copy --force
autoreconf-2.72: running: gtkdocize --copy
autoreconf-2.72: running: aclocal --force
autoreconf-2.72: running: /usr/bin/autoconf-2.72 --force
autoreconf-2.72: running: /usr/bin/autoheader-2.72 --force
autoreconf-2.72: running: automake --add-missing --copy --force-missing
configure.ac:65: installing 'build-aux/compile'
configure.ac:67: installing 'build-aux/missing'
examples/Makefile.am: installing 'build-aux/depcomp'
autoreconf-2.72: Leaving directory '.'

Autoconf가 올바르게 설치되어 있는지 확인
# pacman -Ql autoconf-wrapper | grep bin
autoconf-wrapper /usr/bin/
autoconf-wrapper /usr/bin/autoconf
autoconf-wrapper /usr/bin/autoheader
autoconf-wrapper /usr/bin/autom4te
autoconf-wrapper /usr/bin/autoreconf
autoconf-wrapper /usr/bin/autoscan
autoconf-wrapper /usr/bin/autoupdate
autoconf-wrapper /usr/bin/ifnames
패키지 데이터베이스 업데이트
pacman -Syu
Autoconf 설치
pacman -S autoconf
autoconf --version
autoconf (GNU Autoconf) 2.72
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+/Autoconf: GNU GPL version 3 or later
<https://gnu.org/licenses/gpl.html>, <https://gnu.org/licenses/exceptions.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Written by David J. MacKenzie and Akim Demaille.

Autoconf의 직접 다운로드 및 설치
https://ftp.gnu.org/gnu/autoconf/
autoconf-latest.tar.gz
/c/libidn2
wget https://ftp.gnu.org/gnu/autoconf/autoconf-2.72.tar.gz
tar -xzvf autoconf-2.72.tar.gz
cd autoconf-2.72
/c/libidn2/autoconf-2.72
./configure
make
make install
notepad ~/.bashrc
PATH에 추가
/c/libidn2/autoconf-2.72/bin

nayou@kimnayooung MINGW64 /c/libidn2
# which autoconf
/mingw64/bin/autoconf

nayou@kimnayooung MINGW64 /c/libidn2
# source ~/.bashrc

nayou@kimnayooung MINGW64 /c/libidn2
# which autoconf
/c/libidn2/autoconf-2.72/bin/autoconf

# autoreconf -fiv
# ./configure
동일한에러발생

# pacman -S --needed mingw-w64-x86_64-gcc
경고: mingw-w64-x86_64-gcc-14.2.0-1는 최신 버전입니다 -- 건너뜀
 할 일이 없습니다
PATH /mingw64/bin 있는지 확인 없으면 등록 C++, C 컴파일러경
컴파일러 작동 확
gcc는 C 코드에 대한 컴파일을 처리

# gcc --version 
g++ --version

gcc**는 C 언어 소스 코드를 컴파일하는 도구
C 전용 라이브러리 및 옵션을 기본적으로 설정
gcc hello.c -o hello
./hello
gcc.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

g++ hello.cpp -o hello
./hello
g++는 C++ 코드에 대한 컴파일을 처리, C++ 언어 소스 코드를 컴파일하는 도구
C++ 표준 라이브러리 및 C++ 전용 컴파일 옵션을 기본적으로 설정
g++.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

# C 컴파일러 테스트
nayou@kimnayooung MINGW64 /c/libidn2
# echo -e '#include <stdio.h> \nint main() {printf("Hello\\n"); return 0;}' > test.c

nayou@kimnayooung MINGW64 /c/libidn2
# gcc test.c -o test

nayou@kimnayooung MINGW64 /c/libidn2
# ./test
Hello

# C++ 컴파일러 테스트
nayou@kimnayooung MINGW64 /c/libidn2
# echo -e '#include <iostream> \nint main(){std::cout << "Hello\\n";return 0;}' > test.cpp

nayou@kimnayooung MINGW64 /c/libidn2
# g++ test.cpp -o test

nayou@kimnayooung MINGW64 /c/libidn2
# ./test
Hello

no acceptable egrep could be found in /c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/mingw64/bin:/usr/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/Program Files/Java/jdk-21/bin:/usr/local/bin:/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/usr/xpg4/bin
pacman -S grep
/usr/bin/egrep

(오류)
./configure: line 17405: `        gl_WARN_ADD("-W$w")'
./configure: line 17405: syntax error near unexpected token `"-W$w"'

/c/libidn2
notepad configure.ac
(수정)
# Correct way to call gl_MANYWARN_COMPLEMENT
gl_MANYWARN_COMPLEMENT "$desired_warning_options" "$possible_warning_options"
gl_MANYWARN_COMPLEMENT "$remaining_undesired_warning_options" "$nw"

# Process desired warning options
for w in $desired_warning_options; do
    gl_WARN_ADD $w
done

# Process remaining undesired warning options
for w in `echo "$remaining_undesired_warning_options" | sed -e 's/-W/-Wno-/g'`; do
   gl_WARN_ADD $w
done

(오류)
: error: no acceptable egrep, fgrep, grep could be found in 
/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/mingw64/bin:
/usr/bin:
/usr/share/aclocal:/mingw64/share/aclocal:
/c/Program Files/Java/jdk-21/bin:/usr/local/bin:
/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:
/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:
/usr/bin/vendor_perl:/usr/bin/core_perl:
/c/Users/nayou/AppData/Local/Programs/Python/Python312:/usr/xpg4/bin

# echo $PATH (위와 내용이 다름)
/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/usr/local/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312

환경변수갱신
# source ~/.bashrc

nayou@kimnayooung MINGW64 /c/libidn2
# notepad configure

nayou@kimnayooung MINGW64 /c/libidn2
# which egrep
/usr/bin/egrep

nayou@kimnayooung MINGW64 /c/libidn2
# which fgrep
/usr/bin/fgrep

nayou@kimnayooung MINGW64 /c/libidn2
# which grep
/usr/bin/grep

환경변수조사
# printenv
ProgramFiles(x86)=C:\Program Files (x86)
CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files
SHELL=/usr/bin/bash
NUMBER_OF_PROCESSORS=16
PROCESSOR_LEVEL=6
TERM_PROGRAM_VERSION=3.7.4
MINGW_PREFIX=/mingw64
NVCUDASAMPLES11_5_ROOT=C:\ProgramData\NVIDIA Corporation\CUDA Samples\v11.8
OPENCV_ENABLE_TBB=ON
PKG_CONFIG_PATH=/mingw64/lib/pkgconfig:/mingw64/share/pkgconfig
USERDOMAIN_ROAMINGPROFILE=KIMNAYOOUNG
HOSTNAME=kimnayooung
PROGRAMFILES=C:\Program Files
PROTOBUF_HOME=C:\protobuf
MSYSTEM=MINGW64
PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC
JAVA_HOME=C:\Program Files\Java\jdk-17;
CUDNN_LIBRARY=C:\Program Files\NVIDIA\CUDNN\v9.1\lib\12.4\x64
ORIGINAL_TEMP=/c/Users/nayou/AppData/Local/Temp
CUDA_PATH_V12_1=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1
MINGW_CHOST=x86_64-w64-mingw32
OS=Windows_NT
HOMEDRIVE=C:
MSYSTEM_CARCH=x86_64
TBB_DIR=C:\Program Files (x86)\Intel\oneAPI\tbb\2021.12\bin
USERDOMAIN=KIMNAYOOUNG
TORCH_CUDA_HOME=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1
PWD=/c/libidn2
GIT_LFS_PATH=C:\Program Files\Git LFS
USERPROFILE=C:\Users\nayou
TBB_ROOT=C:\Program Files (x86)\Intel\oneAPI\tbb\2021.12\bin
OneDriveConsumer=C:\Users\nayou\OneDrive
CUDNN_HOME=C:\Program Files\NVIDIA\CUDNN\v9.1
MANPATH=/mingw64/local/man:/mingw64/share/man:/usr/local/man:/usr/share/man:/usr/man:/share/man
TESSDATA_PREFIX=C:\Program Files (x86)\Tesseract-OCR\
PRINTER=Kyocera ECOSYS M5521cdn
CUDA_BIN_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1\bin
JAVA_HOME_21=C:\Program Files\Java\jdk-21
VS140COMNTOOLS=C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\Tools\
TZ=Asia/Seoul
include=C:\Program Files (x86)\Windows Kits\10\Lib\10.0.19041.0\um\x86;C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\lib\x86;C:\Program Files (x86)\Windows Kits\10\Lib\10.0.19041.0\ucrt\x86;C:\VulkanSDK\1.3.290.0\Include;C:\abseil-cpp\build\install\include;
MINGW_PACKAGE_PREFIX=mingw-w64-x86_64
ALLUSERSPROFILE=C:\ProgramData
ORIGINAL_PATH=/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0/
CommonProgramW6432=C:\Program Files\Common Files
HOME=/home/nayou
USERNAME=nayou
VULKAN_SDK=C:\VulkanSDK\1.3.290.0
LANG=ko_KR.UTF-8
OneDrive=C:\Users\nayou\OneDrive
COMSPEC=C:\Windows\system32\cmd.exe
PROTOC=C:\protobuf\build\install\bin\protoc.exe
CMAKE_PREFIX_PATH=C:\Qt\6.7.1\msvc2019_64\include
APPDATA=C:\Users\nayou\AppData\Roaming
NVCUDASAMPLES_ROOT=C:\ProgramData\NVIDIA Corporation\CUDA Samples\v11.8
SYSTEMROOT=C:\Windows
LOCALAPPDATA=C:\Users\nayou\AppData\Local
CUDA_INCLUDE_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1\include
CUDA_TOOLKIT_ROOT_DIR=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.1
COMPUTERNAME=KIMNAYOOUNG
VK_SDK_PATH=C:\VulkanSDK\1.3.290.0
INFOPATH=/mingw64/local/info:/mingw64/share/info:/usr/local/info:/usr/share/info:/usr/info:/share/info
PYTHONPATH=C:\Users\nayou\AppData\Local\Programs\Python\Python312
TERM=xterm
LOGONSERVER=\\KIMNAYOOUNG
ZES_ENABLE_SYSMAN=1
CPLUS_INCLUDE_PATH=C:\Users\nayou\yaml-cpp\include
ACLOCAL_PATH=/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/m4
NVCODEC_ROOT=C:\Video_Codec_SDK
USER=nayou
PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules
NVTOOLSEXT_PATH=C:\Program Files\NVIDIA Corporation\NvToolsExt\
LIBRARY_PATH=C:\protobuf\build\install\lib;C:\abseil-cpp\build\install\lib
CUDA_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1
OPENCV_DIR=C:\opencv\build
TEMP=/tmp
BAZEL_SH=C:\msys64\usr\bin\bash.exe
MSYSTEM_CHOST=x86_64-w64-mingw32
ORIGINAL_TMP=/c/Users/nayou/AppData/Local/Temp
SHLVL=1
PROCESSOR_REVISION=ba02
DriverData=C:\Windows\System32\Drivers\DriverData
GRPC_JAVA_PLUGIN=c:\grpc-java\build\gradle\wrapper\protoc-gen-grpc-java.exe
COMMONPROGRAMFILES=C:\Program Files\Common Files
LD_LIBRARY_PATH=/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/lib/x64
PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 186 Stepping 2, GenuineIntel
PS1=\[\e]0;\w\a\]\n\[\e[32m\]\u@\h \[\e[35m\]$MSYSTEM\[\e[0m\] \[\e[33m\]\w\[\e[0m\]\n\[\e[1m\]#\[\e[0m\]
lib=C:\VulkanSDK\1.3.290.0\Lib
MKLROOT=C:\Program Files (x86)\Intel\oneAPI\mkl
PKG_CONFIG_SYSTEM_LIBRARY_PATH=/mingw64/lib
CUDA_HOME=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1
HOMEPATH=\Users\nayou
XDG_DATA_DIRS=/mingw64/share/:/usr/local/share/:/usr/share/
MSYSCON=mintty.exe
TMP=/tmp
CONFIG_SITE=/etc/config.site
PATH=/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/usr/local/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312
CUDA_LIB_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1\lib\x64
ProgramW6432=C:\Program Files
MSYSTEM_PREFIX=/mingw64
QtMsBuild=C:\Users\nayou\AppData\Local\QtMsBuild
WINDIR=C:\Windows
PROCESSOR_ARCHITECTURE=AMD64
PUBLIC=C:\Users\Public
PKG_CONFIG_SYSTEM_INCLUDE_PATH=/mingw64/include
SYSTEMDRIVE=C:
BAZEL_VS=C:\Program Files (x86)\Microsoft Visual Studio\2019\Community
OLDPWD=/home/nayou
TERM_PROGRAM=mintty
ProgramData=C:\ProgramData
_=/usr/bin/printenv
=>/c/libidn2/autoconf-2.72/bin로 시작되는 환경변수없음
=>다시등록
# export PATH='/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/usr/local/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312'
MSYS2 패키지 설치 확인
pacman -S base-devel mingw-w64-x86_64-toolchain

nayou@kimnayooung MINGW64 /c/libidn2
# which pkg-config
/mingw64/bin/pkg-config

nayou@kimnayooung MINGW64 /c/libidn2
# which sed
/usr/bin/sed

nayou@kimnayooung MINGW64 /c/libidn2
# which grep
/usr/bin/grep

# echo $PATH
/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/usr/local/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312
# pacman -S pkg-config sed grep egrep fgrep
경고: pkgconf-2.3.0-1는 최신 버전입니다. -- 재설치
경고: sed-4.9-1는 최신 버전입니다. -- 재설치
경고: grep-1~3.0-6는 최신 버전입니다. -- 재설치
grep)오류: 대상이 없습니다: egrep
grep)오류: 대상이 없습니다: fgrep

notepad ~/.bashrc
#추가
export CPP=/mingw64/bin/cpp
export CC=/mingw64/bin/gcc
export CXX=/mingw64/bin/g++
./run_configure.sh
C preprocessor /mingw64/bin/cpp fails sanity check" 오류는 cpp 명령어가 올바르게 작동하지 않거나, cpp의 환경 설정이 잘못되어 있다는 것을 의미
CPP동작확
nayou@kimnayooung MINGW64 /c/libidn2
# echo "int main() { return 0; }" | cpp -E -
# 0 "<stdin>"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "<stdin>"
int main() { return 0; }
오류 메시지가 없다면 cpp는 정상적으로 작동하는 것

gcc와 cpp의 버전이 일치하는지 확인
# /mingw64/bin/gcc --version
/mingw64/bin/cpp --version
\gcc.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

cpp.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

패키지 확인 및 재설치
pacman -Syu mingw-w64-x86_64-gcc
config.log 확인

nayou@kimnayooung MINGW64 /c/libidn2
# echo $CC
/mingw64/bin/gcc

nayou@kimnayooung MINGW64 /c/libidn2
# export CC=/mingw64/bin/gcc

nayou@kimnayooung MINGW64 /c/libidn2
# echo $CXX
/mingw64/bin/g++

nayou@kimnayooung MINGW64 /c/libidn2
# export CXX=/mingw64/bin/g++

(오류)
pkg-config not found
export PKG_CONFIG=/mingw64/bin/pkg-config

nayou@kimnayooung MINGW64 /c/libidn2
# notepad ~/.bashrc
#추가
export CPP=/mingw64/bin/cpp
export CC=/mingw64/bin/gcc
export CXX=/mingw64/bin/g++
export PKG_CONFIG=/mingw64/bin/pkg-config
export SED=/usr/bin/sed
export GREP=/usr/bin/grep
export FGREP=/usr/bin/fgrep
export EGREP=/usr/bin/egrep
성공!
(오류)
: error: C preprocessor "/mingw64/bin/cpp" fails sanity check
: error: in '/c/libidn2':

nayou@kimnayooung MINGW64 /c/libidn2
# gcc -v
Using built-in specs.
COLLECT_GCC=C:\msys64\mingw64\bin\gcc.exe
COLLECT_LTO_WRAPPER=C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/lto-wrapper.exe
Target: x86_64-w64-mingw32
Configured with: ../gcc-14.2.0/configure --prefix=/mingw64 --with-local-prefix=/mingw64/local --build=x86_64-w64-mingw32 --host=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --with-native-system-header-dir=/mingw64/include --libexecdir=/mingw64/lib --enable-bootstrap --enable-checking=release --with-arch=nocona --with-tune=generic --enable-languages=c,lto,c++,fortran,ada,objc,obj-c++,rust,jit --enable-shared --enable-static --enable-libatomic --enable-threads=posix --enable-graphite --enable-fully-dynamic-string --enable-libstdcxx-filesystem-ts --enable-libstdcxx-time --disable-libstdcxx-pch --enable-lto --enable-libgomp --disable-libssp --disable-multilib --disable-rpath --disable-win32-registry --disable-nls --disable-werror --disable-symvers --with-libiconv --with-system-zlib --with-gmp=/mingw64 --with-mpfr=/mingw64 --with-mpc=/mingw64 --with-isl=/mingw64 --with-pkgversion='Rev1, Built by MSYS2 project' --with-bugurl=https://github.com/msys2/MINGW-packages/issues --with-gnu-as --with-gnu-ld --disable-libstdcxx-debug --enable-plugin --with-boot-ldflags=-static-libstdc++ --with-stage1-ldflags=-static-libstdc++
Thread model: posix
Supported LTO compression algorithms: zlib zstd
gcc version 14.2.0 (Rev1, Built by MSYS2 project)

C Preprocessor Sanity Check Failed
nayou@kimnayooung MINGW64 /c/libidn2
gcc -v와 cpp -v를 실행하여 컴파일러와 전처리기가 올바르게 설정되었는지 확인
# cpp -v
Using built-in specs.
COLLECT_GCC=C:\msys64\mingw64\bin\cpp.exe
Target: x86_64-w64-mingw32
Configured with: ../gcc-14.2.0/configure --prefix=/mingw64 --with-local-prefix=/mingw64/local --build=x86_64-w64-mingw32 --host=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --with-native-system-header-dir=/mingw64/include --libexecdir=/mingw64/lib --enable-bootstrap --enable-checking=release --with-arch=nocona --with-tune=generic --enable-languages=c,lto,c++,fortran,ada,objc,obj-c++,rust,jit --enable-shared --enable-static --enable-libatomic --enable-threads=posix --enable-graphite --enable-fully-dynamic-string --enable-libstdcxx-filesystem-ts --enable-libstdcxx-time --disable-libstdcxx-pch --enable-lto --enable-libgomp --disable-libssp --disable-multilib --disable-rpath --disable-win32-registry --disable-nls --disable-werror --disable-symvers --with-libiconv --with-system-zlib --with-gmp=/mingw64 --with-mpfr=/mingw64 --with-mpc=/mingw64 --with-isl=/mingw64 --with-pkgversion='Rev1, Built by MSYS2 project' --with-bugurl=https://github.com/msys2/MINGW-packages/issues --with-gnu-as --with-gnu-ld --disable-libstdcxx-debug --enable-plugin --with-boot-ldflags=-static-libstdc++ --with-stage1-ldflags=-static-libstdc++
Thread model: posix
Supported LTO compression algorithms: zlib zstd
gcc version 14.2.0 (Rev1, Built by MSYS2 project)
COLLECT_GCC_OPTIONS='-E' '-v' '-mtune=generic' '-march=nocona'
 C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/cc1.exe -E -quiet -v -iprefix C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/ -D_REENTRANT - -mtune=generic -march=nocona -dumpbase -
ignoring nonexistent directory "C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/include"
ignoring duplicate directory "C:/msys64/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/14.2.0/include"
ignoring nonexistent directory "D:/a/msys64/mingw64/include"
ignoring nonexistent directory "/mingw64/include"
ignoring duplicate directory "C:/msys64/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/14.2.0/include-fixed"
ignoring nonexistent directory "C:/msys64/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/include"
ignoring nonexistent directory "D:/a/msys64/mingw64/include"
#include "..." search starts here:
#include <...> search starts here:
 C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/include
 C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../include
 C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/include-fixed
End of search list.

gettext Library Not Found
pacman -S mingw-w64-x86_64-gettext
PKG_CONFIG_PATH를 설정
notepad ~/.bashrc
export CPP=/mingw64/bin/cpp
export CC=/mingw64/bin/gcc
export CXX=/mingw64/bin/g++
export PKG_CONFIG=/mingw64/bin/pkg-config
export PKG_CONFIG_PATH=/mingw64/lib/pkgconfig:/usr/lib/pkgconfig
export SED=/usr/bin/sed
export GREP=/usr/bin/grep
export FGREP=/usr/bin/fgrep
export EGREP=/usr/bin/egrep
=>soruce ~/.bashrc

iconv Library Not Found
문자 인코딩 변환을 위해 필요한 라이브러리
pacman -S mingw-w64-x86_64-gettext mingw-w64-x86_64-libiconv

nayou@kimnayooung MINGW64 /mingw64/lib/pkgconfig
# notepad iconv.pc

# pacman -Q pkg-config
pacman -Q mingw-w64-x86_64-libiconv
pkgconf 2.3.0-1
mingw-w64-x86_64-libiconv 1.17-4
=> 이렇게 안나오면 설치 pacman -S pkg-config

notepad /mingw64/lib/pkgconfig/iconv 확인 없으면 생성
prefix=/mingw64
exec_prefix=${prefix}
libdir=${exec_prefix}/lib
includedir=${prefix}/include

Name: iconv
Description: libiconv
URL: https://www.gnu.org/software/libiconv/
Version: 1.17
Libs: -L${libdir} -liconv
Cflags: -I${includedir}

pkg-config가 올바른 .pc 파일을 찾을 수 있도록 설정
export PKG_CONFIG_PATH=/mingw64/lib/pkgconfig:/usr/lib/pkgconfig
CFLAGS, CPPFLAGS, LDFLAGS: 헤더 파일과 라이브러리 경로를 올바르게 설정
nayou@kimnayooung MINGW64 /c/libidn2
# export CFLAGS="-I/mingw64/include"
export CPPFLAGS="-I/mingw64/include"
export LDFLAGS="-L/mingw64/lib"
pkg-config 명령어 확인

# pkg-config --cflags gettext
pkg-config --libs gettext
Package gettext was not found in the pkg-config search path.
Perhaps you should add the directory containing `gettext.pc'
to the PKG_CONFIG_PATH environment variable
Package 'gettext' not found
Package gettext was not found in the pkg-config search path.
Perhaps you should add the directory containing `gettext.pc'
to the PKG_CONFIG_PATH environment variable
Package 'gettext' not found

nayou@kimnayooung MINGW64 /c/libidn2
#
pkg-config --cflags iconv
pkg-config --libs iconv

-liconv

nayou@kimnayooung MINGW64 /mingw64/lib/pkgconfig
# ls -l /mingw64/lib/pkgconfig/iconv.pc
-rw-r--r-- 1 nayou nayou 235  2월  2  2024 /mingw64/lib/pkgconfig/iconv.pc

nayou@kimnayooung MINGW64 /mingw64/lib/pkgconfig
# ls -l /mingw64/lib/pkgconfiggettext.pc
ls: cannot access '/mingw64/lib/pkgconfiggettext.pc': No such file or directory

# pkg-config --cflags gettext
pkg-config --libs gettext
Package gettext was not found in the pkg-config search path.
Perhaps you should add the directory containing `gettext.pc'
to the PKG_CONFIG_PATH environment variable
Package 'gettext' not found
Package gettext was not found in the pkg-config search path.
Perhaps you should add the directory containing `gettext.pc'
to the PKG_CONFIG_PATH environment variable
Package 'gettext' not found

일반적으로 MSYS2에서는 /mingw64/lib/pkgconfig 경로에 pkg-config 파일들이 위치
export PKG_CONFIG_PATH=/mingw64/lib/pkgconfig:$PKG_CONFIG_PATH

nayou@kimnayooung MINGW64 /c/libidn2
# find /mingw64 -name gettext.pc

nayou@kimnayooung MINGW64 /mingw64/lib/pkgconfig
# ls -l /mingw64/lib/pkgconfig/gettext.pc
ls: cannot access '/mingw64/lib/pkgconfig/gettext.pc': No such file or directory

nayou@kimnayooung MINGW64 /c/libidn2
# pacman -Q mingw-w64-x86_64-gettext
mingw-w64-x86_64-gettext-tools 0.22.5-2
=> gettext가아닌 gettexttools 

https://mlocati.github.io/articles/gettext-iconv-windows.html
gettext 0.21 and iconv 1.16 - Binaries for Windows
0.21	1.16	64 bit	static2	Setup ZIP

https://www.gnu.org/software/gettext/
https://ftp.gnu.org/pub/gnu/gettext/gettext-0.22.5.tar.gz

wget https://ftp.gnu.org/pub/gnu/gettext/gettext-0.22.5.tar.gz
tar xzf gettext-0.22.5.tar.gz
cd gettext-0.22.5
./configure --prefix=/c/libidn2/gettext-0.22.5
(오류)
환경설정변수 추가
~/.bashrc
export C_INCLUDE_PATH=/mingw64/include
export CPLUS_INCLUDE_PATH=/mingw64/include
source ~/.bashrc
3가지설치하기
pacman -S mingw-w64-x86_64-libtextstyle mingw-w64-x86_64-iconv mingw-w64-x86_64-gettext
오류: 대상이 없습니다: mingw-w64-x86_64-libtextstyle
경고: mingw-w64-x86_64-gettext-tools-0.22.5-2는 최신 버전입니다. -- 재설치

nayou@kimnayooung MINGW64 /c/libidn2
# find / -name gettext-0.22.5
/mingw64/share/gettext-0.22.5
# wget https://ftp.gnu.org/gnu/gettext/gettext-0.22.5.tar.gz
nayou@kimnayooung MINGW64 /c/libidn2
# tar xzf gettext-0.22.5.tar.gz
/mingw64: MSYS2 환경에서 사용하는 표준 경로입니다. MSYS2 패키지 관리 시스템에 의해 관리되며, 
소프트웨어와 라이브러리를 이 경로에 설치하면 다른 패키지와의 충돌을 방지할 수 있습니다.
c/libidn2: 특정 프로젝트나 소스 코드에 관련된 별도의 디렉터리입니다. 일반적으로 패키지 관리와는 무관하며,
특정 프로젝트나 라이브러리만을 위한 경로입니다.
./configure --prefix=/mingw64

# make 2>&1 | grep -E "(error|not|오류|warning|undefined)"
(오류)
## You can ignore compiler warnings in this directory.  ##
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x140): undefined reference to `__imp_color_test_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x15d): undefined reference to `__imp_color_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x16b): undefined reference to `__imp_color_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x19b): undefined reference to `__imp_color_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1a9): undefined reference to `__imp_style_file_name'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1b8): undefined reference to `__imp_style_file_name'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1cb): undefined reference to `__imp_style_file_name'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1d9): undefined reference to `__imp_color_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1e7): undefined reference to `__imp_style_file_name'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x214): undefined reference to `__imp_style_file_name'
collect2.exe: error: ld returned 1 exit status
make[4]: *** [Makefile:1784: hello.exe] 오류 1
make[3]: *** [Makefile:1999: all-recursive] 오류 1
make[2]: *** [Makefile:1927: all] 오류 2
make[1]: *** [Makefile:408: all-recursive] 오류 1
make: *** [Makefile:364: all] 오류 2

undefined reference to '__imp_color_test_mode'
특정 심볼(__imp_color_test_mode)에 대한 참조가 정의되지 않았음을 의미
라이브러리 링크 확인: libtextstyle이 올바르게 링크되었는지 확인
pacman -S mingw-w64-x86_64-libtextstyle
오류: 대상이 없습니다: mingw-w64-x86_64-libtextstyle
https://packages.msys2.org/package/db?repo=msys&variant=x86_64 패키지검색
없음
구글 검색 
https://github.com/autotools-mirror/gettext/tree/master/libtextstyle
일단 파일이 있는 지 확인
/c/libidn2/gettext-0.22.5/libtextstyle
ls
aclocal.m4   config.h.in    doc              lib          README
adhoc-tests  config.log     examples         libtool      stamp-h1
AUTHORS      config.status  gnulib-local     m4           tests
autogen.sh   configure      gnulib-m4        Makefile     version.sh
build-aux    configure.ac   HACKING          Makefile.am
ChangeLog    COPYING        INSTALL          Makefile.in
config.h     DEPENDENCIES   INSTALL.windows  NEWS
있어서
libtextstyle을 빌드하고 설치
make, gcc, autoconf, automake 등이 필요, MSYS2 패키지 매니저를 사용
pacman -S base-devel

구성(Configuration)
시스템에 맞게 패키지 빌드 환경을 설정
./configure

소스 코드를 컴파일
make
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# make 2>&1 | grep -E "(error|not|오류|warning|undefined)"
## You can ignore compiler warnings in this directory.  ##
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x140): undefined reference to `__imp_color_test_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x15d): undefined reference to `__imp_color_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x16b): undefined reference to `__imp_color_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x19b): undefined reference to `__imp_color_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1a9): undefined reference to `__imp_style_file_name'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1b8): undefined reference to `__imp_style_file_name'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1cb): undefined reference to `__imp_style_file_name'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1d9): undefined reference to `__imp_color_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1e7): undefined reference to `__imp_style_file_name'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x214): undefined reference to `__imp_style_file_name'
collect2.exe: error: ld returned 1 exit status
make[2]: *** [Makefile:1784: hello.exe] 오류 1
make[1]: *** [Makefile:1999: all-recursive] 오류 1
make: *** [Makefile:1927: all] 오류 2

"C:\libidn2\gettext-0.22.5\libtextstyle\Makefile"
LIBS += -ltextstyle #추가
LDFLAGS = -L/mingw64/lib -ltextstyle #추가
nayou@kimnayooung MINGW64 /mingw64/lib
# ls libtextstyle*
libtextstyle.a  libtextstyle.la
libtextstyle.a 파일이 있는 경로가 lib
기존 빌드 캐시를 정리하고 빌드를 시도
make clean
make 2>&1 | grep -E "(error|not|오류|warning|undefined)"
C:/msys64/mingw64/include/c++/14.2.0/cstdlib:79:15: fatal error: stdlib.h: No such file or directory
make[6]: *** [Makefile:1475: autosprintf.lo] 오류 1
make[5]: *** [Makefile:1655: all-recursive] 오류 1
make[4]: *** [Makefile:1354: all] 오류 2
make[3]: *** [Makefile:1852: all-recursive] 오류 1
make[2]: *** [Makefile:1757: all] 오류 2
make[1]: *** [Makefile:408: all-recursive] 오류 1
make: *** [Makefile:364: all] 오류 2
stdlib.h 같은 표준 라이브러리 파일이 누락되었거나 경로 설정이 잘못되었음
패키지 업데이트
pacman -Syu
C++ 컴파일러와 관련 패키지 재설치
pacman -S mingw-w64-x86_64-gcc mingw-w64-x86_64-headers mingw-w64-x86_64-crt
C++ 헤더 파일 경로 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5
# ls /mingw64/include/stdlib.h
/mingw64/include/stdlib.h

"C:\msys64\mingw64\include\stdlib.h"
PATH에 /mingw64/bin포함확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5
# echo $PATH
/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/usr/local/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312
# echo $C_INCLUDE_PATH
/mingw64/include
# echo $CPLUS_INCLUDE_PATH
/mingw64/include
# gcc --version
g++ --version
gcc.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

g++.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
MSYS2 패키지 설치
pacman -S mingw-w64-x86_64-toolchain
컴파일 옵션 및 설정 확인
"C:\libidn2\gettext-0.22.5\libtextstyle\Makefile"
CFLAGS = -I/mingw64/include
CXX = /mingw64/bin/g++
CXXFLAGS = -I/mingw64/include
컴파일러직접정하기 예)g++ -I/mingw64/include -o myprogram myprogram.cpp
MSYS2 패키지 재설치
pacman -S mingw-w64-x86_64-gcc mingw-w64-x86_64-headers mingw-w64-x86_64-crt
컴파일러 및 라이브러리 재설치
pacman -Syu mingw-w64-x86_64-toolchain
패키지 관리 데이터베이스 갱신
pacman -Syu
빌드 캐시 정리
make clean
빌드 재시도
make 2>&1 | grep -E "(error|not|오류|warning|undefined)"
(에러)
...
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x140): undefined reference to __imp_color_test_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x15d): undefined reference to __imp_color_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x16b): undefined reference to __imp_color_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x19b): undefined reference to __imp_color_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1a9): undefined reference to __imp_style_file_name'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1b8): undefined reference to __imp_style_file_name'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1cb): undefined reference to __imp_style_file_name'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1d9): undefined reference to __imp_color_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1e7): undefined reference to __imp_style_file_name'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x214): undefined reference to __imp_style_file_name'
collect2.exe: error: ld returned 1 exit status
make[2]: *** [Makefile:1784: hello.exe] 오류 1
make[1]: *** [Makefile:2003: all-recursive] 오류 1
make: *** [Makefile:1931: all] 오류 2
심볼 정의가 포함된 헤더 파일을 찾고, 헤더 파일이 코드와 일치하는지 확인
헤더 파일 위치 확인
color_test_mode라는 심볼이 정의된 파일
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# echo $C_INCLUDE_PATH
/mingw64/include

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find $C_INCLUDE_PATH -name "*.h" | grep "color"
/mingw64/include/colordlg.h
/mingw64/include/gdiplus/gdipluscolor.h
/mingw64/include/gdiplus/gdipluscolormatrix.h
없음

__imp_color_test_mode, __imp_color_mode, __imp_style_file_name 라이브러리를 찾을 수 없음
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls /mingw64/include/textstyle
stdbool.h  version.h  woe32dll.h

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -r "color_test_mode" /mingw64/include/textstyle
grep -r "color_mode" /mingw64/include/textstyle
grep -r "style_file_name" /mingw64/include/textstyle

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# nm -g /mingw64/lib/libtextstyle.a | grep "color_test_mode"
nm -g /mingw64/lib/libtextstyle.a | grep "color_mode"
nm -g /mingw64/lib/libtextstyle.a | grep "style_file_name"
0000000000000000 B color_test_mode
0000000000000000 D color_mode
0000000000000008 B style_file_name
libtextstyle.a 라이브러리 파일에서 color_test_mode, color_mode, style_file_name 기호를 찾을 수 있다는 것은 
이 라이브러리가 이러한 기호를 정의하고 있음을 나타낸다
undefined reference 오류가 발생하는 이유는 링크 시에 올바른 기호를 참조하지 못하거나, 
링크 시 순서나 설정이 올바르지 않기 때문
종속성이 있는 라이브러리를 먼저 링크하고, 그에 의존하는 라이브러리를 나중에 링크
nm 명령어의 결과에서 기호가 B (BSS 섹션, 초기화되지 않은 데이터) 또는 D (데이터 섹션)로 표시되는 것을 확인할 수 있습니다. 
이들은 전역 변수가 선언된 위치를 나타낸다.
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find . -name "hello.o"
./adhoc-tests/hello.o
libtextstyle이 정확히 링크되고 있는지 확인
libtextstyle이 동적라이브러리로 컴파일되었는데 정적라이브러리를 사용하려다보니 충돌이 일어난것
libtextstyle을 정적라이브러리로 컴파일하기로함
libtextstyle의 소스 코드가 있는 디렉터리로 이동
./configure --enable-static --disable-shared
make
make install
확인
정적 라이브러리 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls /mingw64/lib/libtextstyle.a
/mingw64/lib/libtextstyle.a
링커 명령어 확인(라이브러리를 링크하는 순서가 중요, -Wl,--no-as-needed 플래그를 추가하여 링커가 필요 없는 라이브러리를 제외하지 않도록 설정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# gcc -o hello ./adhoc-tests/hello.o -L/mingw64/lib -ltextstyle -lncurses -lws2_32 -lkernel32 -luser32 -lgdi32
(gcc -o hello ./adhoc-tests/hello.o -L/mingw64/lib -lncurses -lws2_32 -ltextstyle)
헤더 파일과 심볼 확인
find /mingw64/include -name "textstyle.h"
(만약 누락되었다면 
find /c/libidn2/gettext-0.22.5/libtextstyle -name "textstyle.h"
cp /c/libidn2/gettext-0.22.5/libtextstyle/textstyle.h /mingw64/include/)
/mingw64/include/textstyle.h
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep "color_test_mode" /mingw64/include/textstyle.h
grep "color_mode" /mingw64/include/textstyle.h
grep "style_file_name" /mingw64/include/textstyle.h
extern LIBTEXTSTYLE_DLL_VARIABLE bool color_test_mode;
extern LIBTEXTSTYLE_DLL_VARIABLE enum color_option color_mode;
extern LIBTEXTSTYLE_DLL_VARIABLE const char *style_file_name;
/* Assign a default value to style_file_name if necessary.

hello.o의 심볼
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# nm -g ./adhoc-tests/hello.o | grep "color_test_mode"
nm -g ./adhoc-tests/hello.o | grep "color_mode"
nm -g ./adhoc-tests/hello.o | grep "style_file_name"
0000000000000000 R .refptr.color_test_mode
                 U color_test_mode
0000000000000000 R .refptr.color_mode
                 U color_mode
0000000000000000 R .refptr.style_file_name
                 U style_file_name

libtextstyle.a 파일의 심볼 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# nm -g /mingw64/lib/libtextstyle.a | grep "color_test_mode"
nm -g /mingw64/lib/libtextstyle.a | grep "color_mode"
nm -g /mingw64/lib/libtextstyle.a | grep "style_file_name"
0000000000000000 B color_test_mode
0000000000000000 D color_mode
0000000000000008 B style_file_name

make 2>&1 | grep -E "(error|not|오류|warning|undefined)"
(에러)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# cp /mingw64/lib/libtextstyle.la /c/libidn2/gettext-0.22.5/libtextstyle/lib/
/c/libidn2/gettext-0.22.5/libtextstyle/lib/libtextstyle.a 생성되야함
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5
# make 2>&1 | grep -E "(error|not|오류|warning|undefined)"
## You can ignore compiler warnings in this directory.  ##
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x140): undefined reference to `__imp_color_test_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x15d): undefined reference to `__imp_color_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x16b): undefined reference to `__imp_color_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x19b): undefined reference to `__imp_color_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1a9): undefined reference to `__imp_style_file_name'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1b8): undefined reference to `__imp_style_file_name'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1cb): undefined reference to `__imp_style_file_name'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1d9): undefined reference to `__imp_color_mode'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x1e7): undefined reference to `__imp_style_file_name'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: hello.o:hello.c:(.text+0x214): undefined reference to `__imp_style_file_name'
collect2.exe: error: ld returned 1 exit status
make[4]: *** [Makefile:1784: hello.exe] 오류 1
make[3]: *** [Makefile:1999: all-recursive] 오류 1
make[2]: *** [Makefile:1927: all] 오류 2
make[1]: *** [Makefile:408: all-recursive] 오류 1
make: *** [Makefile:364: all] 오류 2
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5
# cd libtextstyle
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
aclocal은 configure.ac 파일에 정의된 매크로를 처리하여 aclocal.m4 파일을 생성
# aclocal
configure.ac:25: error: AC_INIT should be called with package and version arguments
/usr/share/aclocal-1.16/init.m4:29: AM_INIT_AUTOMAKE is expanded from...
configure.ac:25: the top level
autom4te: error: /usr/bin/m4 failed with exit status: 1
aclocal-1.16: error: autom4te failed with exit status: 1
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# aclocal
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
configure.ac 또는 configure.in 파일을 바탕으로 configure 스크립트를 생성
# autoconf
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
automake는 Makefile.am 파일을 바탕으로 Makefile.in 파일을 생성
# automake --add-missing
(오류)
C:\libidn2\gettext-0.22.5\libtextstyle
Makefile.am과 Makefile.gnulib 오류

Makefile.am 수정
subdir-objects 옵션이 활성화
Makefile.am 파일 Makefile.am 파일의 최상단에 추가
AM_DEFAULT_OPTIONS = subdir-objects
=> AUTOMAKE_OPTIONS = subdir-objects 수정
#추가 configure.ac 와 맞춰준다
# 조건부 설정: WOE32 조건이 활성화되면 추가 소스 파일을 포함합니다.
if WOE32
libtextstyle_la_SOURCES += lib/woe32-specific.c
endif

# 조건부 설정: WOE32DLL 조건이 활성화되면 DLL 관련 설정을 추가합니다.
if WOE32DLL
libtextstyle_la_LDFLAGS = -export-dynamic
endif

configure.ac 수정
AC_INIT([libtextstyle], [0.1], [bug-libtextstyle@example.com]) #수정

# Check for host type and setup conditionals.
case "$host_os" in
  mingw* | cygwin*) is_woe32=yes ;;
  *) is_woe32=no ;;
esac
AM_CONDITIONAL([WOE32], [test $is_woe32 = yes])

if test "$enable_shared" = yes; then
  case "$host_os" in
    mingw* | cygwin*) is_woe32dll=yes ;;
    *) is_woe32dll=no ;;
  esac
else
  is_woe32dll=no
fi
AM_CONDITIONAL([WOE32DLL], [test $is_woe32dll = yes])

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# automake --add-missing
Makefile.am:32: but option 'subdir-objects' is disabled

makefile.am 수정
AUTOMAKE_OPTIONS = 1.13 gnu no-dependencies subdir-objects
AUTOMAKE_OPTIONS = 1.13 gnu no-dependencies subdir-objects
ACLOCAL_AMFLAGS = -I m4 -I gnulib-m4

# The list of subdirectories containing Makefiles.
SUBDIRS = lib tests adhoc-tests doc

# Remove the dynamic library rule
# lib_LTLIBRARIES = libtextstyle.la

# Add a static library rule
noinst_LIBRARIES = libtextstyle.a

libtextstyle_a_SOURCES = \
  lib/foo.c \
  lib/bar.c \
  lib/baz.c 

install: all
	$(INSTALL) -m 755 lib/libtextstyle.a $(prefix)/lib

configure.ac 수정
dnl 정적 라이브러리만을 위해 LT_INIT을 단순하게 초기화
LT_INIT([disable-shared])

case "$host_os" in
  mingw* | cygwin*) is_woe32=yes ;;
  *) is_woe32=no ;;
esac
AM_CONDITIONAL([WOE32], [test $is_woe32 = yes])

##include "textstyle/woe32dll.h"
#AC_CONFIG_FILES([lib/textstyle/woe32dll.h:lib/textstyle/woe32dll.in.h])

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# autoreconf -ivf
autoreconf: export WARNINGS=
autoreconf: Entering directory '.'
autoreconf: configure.ac: not using Gettext
autoreconf: running: aclocal --force -I m4 -I gnulib-m4
autoreconf: configure.ac: tracing
autoreconf: running: libtoolize --copy --force
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize: putting macros in 'm4'.
libtoolize: copying file 'm4/libtool.m4'
libtoolize: copying file 'm4/ltoptions.m4'
libtoolize: copying file 'm4/ltsugar.m4'
libtoolize: copying file 'm4/ltversion.m4'
libtoolize: copying file 'm4/lt~obsolete.m4'
libtoolize: Consider adding 'AC_CONFIG_MACRO_DIRS([m4])' to configure.ac,
libtoolize: and rerunning libtoolize and aclocal.
autoreconf: configure.ac: not using Intltool
autoreconf: configure.ac: not using Gtkdoc
autoreconf: running: aclocal --force -I m4 -I gnulib-m4
autoreconf: running: /mingw64/bin/autoconf --force
autoreconf: running: /mingw64/bin/autoheader --force
autoreconf: running: automake --add-missing --copy --force-missing
configure.ac:35: installing 'build-aux/compile'
configure.ac:28: installing 'build-aux/missing'
adhoc-tests/Makefile.am: installing 'build-aux/depcomp'
autoreconf: 'build-aux/install-sh' is updated
autoreconf: 'build-aux/config.sub' is updated
autoreconf: 'build-aux/config.guess' is updated
autoreconf: Leaving directory '.'
성공!
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./configure

# make
In file included from color.c:23:
color.h:30:33: error: expected ';' before '_Bool'
   30 | extern LIBTEXTSTYLE_DLL_VARIABLE bool color_test_mode;
      |                                 ^
      |                                 ;
color.h:34:33: error: expected ';' before 'enum'
   34 | extern LIBTEXTSTYLE_DLL_VARIABLE enum color_option color_mode;
      |                                 ^~~~~
      |                                 ;
color.h:37:33: error: expected ';' before 'const'
   37 | extern LIBTEXTSTYLE_DLL_VARIABLE const char *style_file_name;
      |                                 ^~~~~~
      |                                 ;
make[2]: *** [Makefile:6189: config.h] 오류 1
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/lib' 나감
make[1]: *** [Makefile:2040: all-recursive] 오류 1
make[1]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make: *** [Makefile:1939: all] 오류 2

configure.ac 수정
/* Ignore DLL_VARIABLE markup that is meant for gettext.  */
/*#define DLL_VARIABLE 주석처리*/

# autoreconf -ivf
# ./configure --disable-shared --enable-static 
# make
In file included from gl_array_list.c:21:
gl_array_list.h:27:20: error: expected ';' before 'const'
   27 | extern DLL_VARIABLE const struct gl_list_implementation gl_array_list_implementation;
      |                    ^~~~~~
      |                    ;
make[2]: *** [Makefile:6189: config.h] 오류 1
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/lib' 나감
make[1]: *** [Makefile:2039: all-recursive] 오류 1
make[1]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make: *** [Makefile:1938: all] 오류 2
config.h
#define DLL_VARIABLE 주석제거

config.h
#undef LIBTEXTSTYLE_DLL_VARIABLE 추가
"C:\libidn2\gettext-0.22.5\libtextstyle\lib\color.h"
/*DLL 주석처리 */
/* Whether to output a test page.  */
extern LIBTEXTSTYLE_DLL_VARIABLE bool color_test_mode; 

/* Color option.  */
enum color_option { color_no, color_tty, color_yes, color_html };
extern LIBTEXTSTYLE_DLL_VARIABLE enum color_option color_mode;

/* Style to use when coloring.  */
extern LIBTEXTSTYLE_DLL_VARIABLE const char *style_file_name;

/* --color argument handling.  Return an error indicator.  */
extern bool handle_color_option (const char *option);

/* --style argument handling.  */
extern void handle_style_option (const char *option);

/* Print a color test page.  */
extern void print_color_test (void);

Makefile.am
# Remove any dynamic library specific rules
# if WOE32DLL
# libtextstyle_la_LDFLAGS = -export-dynamic
# endif

config.h 수정
/* Ignore DLL_VARIABLE markup that is meant for gettext. */
#undef DLL_VARIABLE

/* Remove or comment out any other DLL-related macros */
#undef LIBTEXTSTYLE_DLL_VARIABLE

"C:\libidn2\gettext-0.22.5\libtextstyle\lib\gl_array_list.h"
/* If DLL_VARIABLE is not defined, define it as empty. 추가*/
#ifndef DLL_VARIABLE
#define DLL_VARIABLE
#endif

# make
In file included from error.c:25:
./error.h:549:20: error: expected ';' before 'void'
  549 | extern DLL_VARIABLE void (*error_print_progname) (void);
      |                    ^~~~~
      |                    ;
./error.h:552:20: error: expected ';' before 'unsigned'
  552 | extern DLL_VARIABLE unsigned int error_message_count;
      |                    ^~~~~~~~~
      |                    ;
./error.h:556:20: error: expected ';' before 'int'
  556 | extern DLL_VARIABLE int error_one_per_line;
      |                    ^~~~
      |                    ;
make[2]: *** [Makefile:6189: config.h] 오류 1
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/lib' 나감
make[1]: *** [Makefile:2039: all-recursive] 오류 1
make[1]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make: *** [Makefile:1938: all] 오류 2

"C:\libidn2\gettext-0.22.5\libtextstyle\lib\error.h" 
(동적라이브러리로 변경)
configure.ac
LT_INIT([win32-dll]) 
#define DLL_VARIABLE
#include "textstyle/woe32dll.h"
AC_CONFIG_FILES([lib/textstyle/woe32dll.h:lib/textstyle/woe32dll.in.h])

makefile.am
# DLL 추가
# Make sure to link dynamic libraries
lib_LTLIBRARIES = libtextstyle.la
libtextstyle_la_SOURCES = \
    color.c \
    gl_array_list.c

libtextstyle_la_LDFLAGS = -no-undefined
# DLL 추가 끝
#DLL 추가
 if WOE32DLL
 libtextstyle_la_LDFLAGS = -export-dynamic
 endif
# Add the static archive to be installed
#install: all
#	$(INSTALL) -m 755 lib/libtextstyle.a $(prefix)/lib

config.h
/* Ignore DLL_VARIABLE markup that is meant for gettext.  */
/*#define DLL_VARIABLE*/
/* Ensure DLL_VARIABLE is defined as empty if not already defined */
#ifndef DLL_VARIABLE
#define DLL_VARIABLE __declspec(dllexport)
#endif
/* Ignore DLL_VARIABLE markup that is meant for gettext.  */
#define DLL_VARIABLE

/* Get LIBTEXTSTYLE_DLL_VARIABLE.  */
#include "textstyle/woe32dll.h"

error.h
color.h
/*추가시작*/
/* Define LIBTEXTSTYLE_DLL_VARIABLE as empty if building a static library */
#ifndef LIBTEXTSTYLE_DLL_VARIABLE
#define LIBTEXTSTYLE_DLL_VARIABLE __declspec(dllexport)
#endif

/* Color option enumeration */
enum color_option { color_no, color_tty, color_yes, color_html };

/* External variables with DLL export macro */
extern LIBTEXTSTYLE_DLL_VARIABLE bool color_test_mode;
extern LIBTEXTSTYLE_DLL_VARIABLE enum color_option color_mode;
extern LIBTEXTSTYLE_DLL_VARIABLE const char *style_file_name;
/*추가끝*/





GNU Autotools 빌드 및 설치 과정

configure.ac 또는 Makefile.am 파일 수정
autoreconf -ivf
 configure.ac, aclocal.m4, Makefile.am 등의 변경 사항을 반영하여 configure 스크립트와 관련 파일을 다시 생성
이 단계에서 automake, autoconf, aclocal 등의 도구가 실행
=>configure.ac 및 Makefile.am 파일의 변경 사항을 기반으로 configure 스크립트와 관련 파일들을 생성

./configure 스크립트 실행
./configure --disable-shared --enable-static #정적라이브러리용
configure.ac에 설정한 대로 컴파일 환경을 설정
시스템의 컴파일러, 라이브러리, 헤더 파일 등을 검사하고, Makefile과 관련 설정 파일을 생성
 설치 경로와 기타 컴파일 옵션을 설정할 수 있다.
=>시스템의 환경을 검사하여 Makefile을 생성, Makefile.in을 기반으로 최종 Makefile이 생성
 필요한 라이브러리와 헤더 파일이 존재하는지 확인하고, 빌드에 필요한 경로와 옵션을 설정

 소스 코드 파일 수정
 src, lib 등의 소스 코드 파일을 수정
소스 코드만 수정했을 때는 autoreconf와 configure를 다시 실행할 필요가 없음
make
Makefile에 따라 소스 코드를 컴파일합니다. 수정한 코드에 따라 실행 파일이나 라이브러리 파일이 재생성

테스트 및 검증
소스 코드 수정 후, 테스트 코드를 추가하거나 수정할 수 있다.
make check
or
make test
프로젝트 내의 테스트 코드를 실행하여 수정된 소스 코드가 제대로 동작하는지 검증

설치
컴파일된 바이너리나 라이브러리를 시스템에 설치
make install

makefile.am 수정
AM_CONDITIONAL([WOE32DLL], [test "$host_os" = "mingw32"])

#DLL 추가
if WOE32DLL
  libtextstyle_la_LDFLAGS += -export-dynamic
endif

configure.ac
#AM_CONDITIONAL([WOE32], [test $is_woe32 = yes])
AM_CONDITIONAL([WOE32DLL], [test "$host_os" = "mingw32"])
AM_CONDITIONAL([WOE32], [test "$host_os" = "mingw32"])
echo "WOE32DLL is set to: $WOE32DLL"
echo "WOE32DLL is set to: $WOE32"

makefile.am
AM_CONDITIONAL([WOE32DLL], [test "$host_os" = "mingw32"])

if WOE32DLL
  libtextstyle_la_LDFLAGS = -no-undefined -export-dynamic
else
  libtextstyle_la_LDFLAGS = -no-undefined
endif

configure.ac
AM_CONDITIONAL([WOE32DLL], [test $host_os = mingw32])
AM_CONDITIONAL([WOE32], [test $host_os = mingw32])
echo "configure.ac : WOE32DLL is set to: $WOE32DLL"
echo "configure.ac : WOE32 is set to: $WOE32"

makefile.am
AM_CONDITIONAL([WOE32DLL], [test $host_os = mingw32])
AM_CONDITIONAL([WOE32], [test $host_os = mingw32])
echo "Makefile.am : WOE32DLL is set to: $WOE32DLL"
echo "Makefile.am : WOE32 is set to: $WOE32"

순차실행 에러만 출력
autoreconf -ivf 2>&1 | grep -Ei 'not|error|오류|undefined|warning' && ./configure 2>&1 | grep -Ei 'not|error|오류|undefined|warning' && make 2>&1 | grep -Ei 'not|error|오류|undefined|warning'
각 명령어출력후 에러 출력
echo "Running: autoreconf -ivf" && autoreconf -ivf 2>&1 | tee autoreconf.log | grep -Ei '멈춤|not|error|오류|undefined|warning' && \
echo "Running: ./configure" && ./configure 2>&1 | tee configure.log | grep -Ei '멈춤|not|error|오류|undefined|warning' && \
echo "Running: make" && make 2>&1 | tee make.log | grep -Ei '멈춤|not|error|오류|undefined|warning' && \
echo "Running: make install" && make install 2>&1 | tee make_install.log | grep -Ei '멈춤|not|error|오류|undefined|warning'

Running: autoreconf -ivf
autoreconf: export WARNINGS=
autoreconf: configure.ac: not using Gettext
autoreconf: configure.ac: not using Intltool
autoreconf: configure.ac: not using Gtkdoc
Running: ./configure
checking for error.h... yes
checking whether C compiler handles -Werror -Wunknown-warning-option... no
checking for C compiler option to inhibit all warnings... -w
checking for a sed that does not truncate output... /usr/bin/sed
checking for error... no
checking whether error_at_line is declared... no
checking whether strerror_r is declared... no
checking whether strerror_r returns char *... no
checking whether strerror(0) succeeds... yes
checking for C compiler option to allow warnings... -Wno-error
checking for C++ compiler option to allow warnings... -Wno-error
/components.xml: line 1: syntax error near unexpected token `newline'
Running: make
Makefile:2522: *** 분리 기호가 빠졌음.  멈춤.
Running: make install
Makefile:2522: *** 분리 기호가 빠졌음.  멈춤.
(디버깅)
/components.xml: line 1: syntax error near unexpected token `newline'
파일 지우고 생성함
touch /components.xml
Makefile:2522: *** 분리 기호가 빠졌음.  멈춤.
Makefile 수정
AM_CONDITIONAL([WOE32DLL], [test $host_os = mingw32])
=>AM_CONDITIONAL([WOE32DLL], [test "$host_os" = "mingw32"])
https://miind.tistory.com/21
1. 분리 기호 (tab) 이 잘 들어가있나 확인한다.
2. 그래도 에러가 나는 경우 .vimrc 에서 에디터 설정을 확인해야한다.
$ cd ~ // 홈 디렉토리로 이동
$ vim .vimrc // 에디터 설정
간혹 편집기가 탭 키를 스페이스로 바꿔버리는 경우가 있다. 
그런 경우 다음과 같은 줄이 있을 것이다.
set expandtab  // tab을 space로 처리
이것을 다음과 같이 바꿔준다
set noexpandtab

nayou@kimnayooung MINGW64 ~
# find / -name ".vimrc" 2>/dev/null
/etc/skel/.vimrc
vim /etc/skel/.vimrc
" 추가
"set expandtab  // tab을 space로 처리
set noexpandtab

# file /components.xml
/components.xml: XML 1.0 document, ASCII text, with CRLF line terminators
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# dos2unix /components.xml
dos2unix: /components.xml 파일을 유닉스 형식으로 변환중...

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# file /components.xml
/components.xml: XML 1.0 document, ASCII text
# export CPLUS_INCLUDE_PATH=/mingw64/include/c++/14.2.0:$CPLUS_INCLUDE_PATH
#include <iostream>
#include <fstream>
#include <sstream>
#include <string>
#include <cstring>  // For strerror
#include <cerrno>   // For errno

void convert_ascii_to_utf8(const std::string& input_file, const std::string& output_file) {
    std::cout << "Trying to open input file: " << input_file << std::endl;

    // Open the input file
    std::ifstream infile(input_file, std::ios::binary);
    if (!infile.is_open()) {
        std::cerr << "Error opening input file: " << input_file << std::endl;
        std::cerr << "Error reason: " << std::strerror(errno) << std::endl;
        return;
    }

    // Read the input file into a string
    std::stringstream buffer;
    buffer << infile.rdbuf();
    std::string content = buffer.str();
    infile.close();

    std::cout << "Input file opened successfully." << std::endl;

    // Open the output file
    std::ofstream outfile(output_file, std::ios::binary);
    if (!outfile.is_open()) {
        std::cerr << "Error opening output file: " << output_file << std::endl;
        std::cerr << "Error reason: " << std::strerror(errno) << std::endl;
        return;
    }

    // Write BOM for UTF-8 encoding
    unsigned char bom[] = {0xEF, 0xBB, 0xBF}; // UTF-8 BOM
    outfile.write(reinterpret_cast<char*>(bom), sizeof(bom));

    // Write the content to the output file
    outfile << content;
    outfile.close();

    std::cout << "Output file created successfully." << std::endl;
}

int main() {
    std::string input_file = "C:/msys64/components.xml";       // Absolute path in Windows style
    std::string output_file = "C:/msys64/components_utf8.xml"; // Absolute path in Windows style

    convert_ascii_to_utf8(input_file, output_file);

    return 0;
}

g++ -o encoding_utf8 encoding_utf8.cpp
./encoding_utf8
Trying to open input file: C:/msys64/components.xml
Input file opened successfully.
Output file created successfully.
# file -i /components_utf8.xml
/components_utf8.xml: text/html; charset=utf-8
cp /c/msys64/components_utf8.xml /c/msys64/components.xml
# file -i /components.xml
/components.xml: text/html; charset=utf-8

vscode에서 tab을 space로 변환 그반대도 제공하고 아예 off할 수 있다고 함
File > Preferences > Settings
검색창에 detect indentation을 입력
Editor: Detect Indentation 설정을 찾아 체크박스를 비활성화
insert spaces 검색 > Editor: Insert Spaces 비활성

VS Code에서 파일을 열고 
Ctrl + Shift + P를 눌러 Command Palette를 열고 Convert Indentation to Tabs

xml newline 에러
https://ant.apache.org/bindownload.cgi
C:\Users\nayou\Downloads\apache-ant-1.10.15-bin\apache-ant-1.10.15
C:\apache-ant-1.10.15 이동
환경변수설정
ANT_HOEM : C:\apache-ant-1.10.15
Path : %ANT_HOME%\bin
# export ANT_HOME=/c/apache-ant-1.10.15
# export PATH=$ANT_HOME/bin:$PATH
# java -version
java version "21.0.4" 2024-07-16 LTS
Java(TM) SE Runtime Environment (build 21.0.4+8-LTS-274)
Java HotSpot(TM) 64-Bit Server VM (build 21.0.4+8-LTS-274, mixed mode, sharing)
ant는 build.xml 전용으로
아래 xmllint로 하기로
# xmllint --noout /components.xml
/components.xml:1: parser error : Start tag expected, '<' not found
<?xml version="1.0" encoding="UTF-8"?>
   ^ㅣ
vscode에서 하단 오른쪽에 Encoding 을 누르면 상단 가운데에 save with encoding을 누르면 
원하는 encoding을 선택하면 그 선택한 encoding으로 저장됨
nayou@kimnayooung MINGW64 /c/libidn2
# xmllint --noout /components.xml

nayou@kimnayooung MINGW64 /c/libidn2
# file -i /components.xml
/components.xml: text/xml; charset=utf-8
# head -n 10 /components.xml
<?xml version="1.0" encoding="UTF-8"?>
<root>
<Packages>
    <ApplicationName>MSYS2</ApplicationName>
    <ApplicationVersion>1.0.0</ApplicationVersion>
    <Package>
        <Name>com.msys2.root</Name>
        <Title>MSYS2</Title>
        <Description>Cygwin-derived Posix-like env. for Windows with Arch Linux's Pacman</Description>
        <SortingPriority>0</SortingPriority>
다시 실행
echo "Running: autoreconf -ivf" && autoreconf -ivf 2>&1 | tee autoreconf.log | grep -Ei '멈춤|not|error|오류|undefined|warning' | sort | uniq  && \
echo "Running: ./configure" && ./configure 2>&1 | tee configure.log | grep -Ei '멈춤|not|error|오류|undefined|warning' | sort | uniq  && \
echo "Running: make" && make 2>&1 | tee make.log | grep -Ei '멈춤|not|error|오류|undefined|warning' | sort | uniq && \
echo "Running: make install" && make install 2>&1 | tee make_install.log | grep -Ei '멈춤|not|error|오류|undefined|warning' | sort | uniq 

nayou@kimnayooung MINGW64 ~
# autoconf --version
autoconf (GNU Autoconf) 2.72
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+/Autoconf: GNU GPL version 3 or later
<https://gnu.org/licenses/gpl.html>, <https://gnu.org/licenses/exceptions.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David J. MacKenzie and Akim Demaille.

nayou@kimnayooung MINGW64 ~
# ^C

nayou@kimnayooung MINGW64 ~
# automake --version
automake (GNU automake) 1.17
Features: subsecond-mtime

Copyright (C) 2024 Free Software Foundation, Inc.
License GPLv2+: GNU GPL version 2 or later
  <https://gnu.org/licenses/gpl-2.0.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Tom Tromey <tromey@redhat.com>
       and Alexandre Duret-Lutz <adl@gnu.org>.

nayou@kimnayooung MINGW64 ~
# ^C

nayou@kimnayooung MINGW64 ~
# cd /c/libidn2

nayou@kimnayooung MINGW64 /c/libidn2
# cd gettext-0.22.5/libtextstyle/

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# rm -f configure aclocal.m4 config.log config.status

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# aclocal

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# autoconf

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# automake --add-missing
lib/Makefile.am:48: error: INCLUDED_LIBXML does not appear in AM_CONDITIONAL
lib/Makefile.gnulib:104: error: GL_GENERATE_ALLOCA_H does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:132: error: GL_GENERATE_ASSERT_H does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:218: error: GL_COND_OBJ_CLOSE does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:234: error: GL_COND_OBJ_DUP2 does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:246: error: GL_GENERATE_ERRNO_H does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:274: error: GL_COND_OBJ_ERROR does not appear in AM_CONDITIONAL

Makefile.am과 Makefile.gnulib 파일에서 조건부 빌드 설정(AM_CONDITIONAL)이 누락되었음
gnulib-tool을 사용하여 gnulib 모듈 재생성
gnulib 라이브러리와의 통합 과정에서 발생할 수 있으며, 이는 Makefile에서 조건부 정의가 필요한 상황에서 발생
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# gnulib-tool --add-import
-bash: gnulib-tool: 명령어를 찾을 수 없음
Gnulib 설치
nayou@kimnayooung MINGW64 /c
# git clone https://git.savannah.gnu.org/git/gnulib.git
'gnulib'에 복제합니다...
remote: Counting objects: 308524, done.
remote: Compressing objects: 100% (35319/35319), done.
remote: Total 308524 (delta 273515), reused 307924 (delta 273093)
오브젝트를 받는 중: 100% (308524/308524), 81.11 MiB | 3.18 MiB/s, 완료.
델타를 알아내는 중: 100% (273515/273515), 완료.
Updating files: 100% (11851/11851), 완료.
export PATH=$PATH:/c/gnulib
Gnulib 통합
nayou@kimnayooung MINGW64 /c/gnulib
cd /c/libidn2/gettext-0.22.5/libtextstyle
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# /c/gnulib/gnulib-tool --add-import
autoreconf 및 automake 재실행
configure.ac 수정
#추가
gl_INIT
gl_EARLY

Makefile.am 수정
EXTRA_DIST m4/gnulib-cache.m4 \ #추가

/c/gnulib/gnulib-tool --add-import 자동복사가 안돼서 수동으로 복사
cp /c/gnulib/m4 /c/libidn2/gettext-0.22.5/libtextstyle/m4

echo "Running: autoreconf -ivf" && autoreconf -ivf 2>&1 | tee autoreconf.log | grep -Ei '멈춤|not|error|오류|undefined|warning' | sort | uniq  && \
echo "Running: ./configure" && ./configure 2>&1 | tee configure.log | grep -Ei '멈춤|not|error|오류|undefined|warning' | sort | uniq  && \
echo "Running: make" && make 2>&1 | tee make.log | grep -Ei '멈춤|not|error|오류|undefined|warning' | sort | uniq && \
echo "Running: make install" && make install 2>&1 | tee make_install.log | grep -Ei '멈춤|not|error|오류|undefined|warning' | sort | uniq 

xml파일 encoding 
/c/libidn2/gettext-0.22.5/libtextstyle>
#./encoding_utf8 
#cp /components_utf8.xml /components.xml
#file -i /components.xml
=>utf-8
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# xmllint --noout /c/msys64/components.xml

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
#
계속적으로 
/components.xml: line 1: syntax error near unexpected token `newline'
/components.xml: line 1: `﻿<?xml version="1.0" encoding="UTF-8"?>'
오류발생

"C:\msys64\mingw64\include\c++\14.2.0\cstdlib"
//#include_next <stdlib.h>
#include <stdlib.h>
C:/msys64/mingw64/include/c++/14.2.0/bits/std_abs.h
//#include_next <stdlib.h>
#include <stdlib.h>
수정 후 
# g++ -o encoding_utf8 encoding_utf8.cpp
# ./encoding_utf8
Trying to open input file: C:/msys64/components.xml
Input file opened successfully.
Output file created successfully.
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# file -i /components_utf8.xml
/components_utf8.xml: text/xml; charset=utf-8
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# cp /components_utf8.xml /components.xml
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# file -i /components.xml
/components.xml: text/xml; charset=utf-8
# autoreconf -ivf
# ./configure

configure.ac
# 호스트 OS 확인
AC_CANONICAL_HOST
echo "configure.ac: Configured host OS: $host_os"

# 조건부 매크로 정의
if test "$host_os" = "mingw32"; then
    AM_CONDITIONAL([WOE32DLL], true)
    AM_CONDITIONAL([WOE32], true)
    echo "WOE32DLL and WOE32 are enabled."
	LDFLAGS="-no-undefined -export-dynamic"
else
    AM_CONDITIONAL([WOE32DLL], false)
    AM_CONDITIONAL([WOE32], false)
    echo "WOE32DLL and WOE32 are disabled."
	LDFLAGS="-no-undefined"
fi

makefile.am
libtextstyle_la_LDFLAGS = $(LDFLAGS)
Makefile:2425: *** 분리 기호가 빠졌음.  멈춤. => 성공

(에러)
./stddef.h:133:6: error: operator '!' has no right operand
  133 | #if !
/c/libidn2/gettext-0.22.5/libtextstyle/lib/stddef.h 수정
/*#if !
# define wchar_t int
#endif*/
#ifndef wchar_t
# define wchar_t int
#endif

lib/stddef.h를 생성하는 파일을 수정하기로함
# find /c/libidn2/gettext-0.22.5/libtextstyle/ -maxdepth 1 -type f -exec grep -nH "#if !" {} +
/c/libidn2/gettext-0.22.5/libtextstyle/config.h:1179:#if !(defined __STDC_WANT_LIB_EXT1__ && __STDC_WANT_LIB_EXT1__)
/c/libidn2/gettext-0.22.5/libtextstyle/config.h:1825:#if !(defined _GL_ATTRIBUTE_ERROR && defined _GL_ATTRIBUTE_WARNING)
/c/libidn2/gettext-0.22.5/libtextstyle/config.h:2309:#if !defined HAVE_C_ALIGNASOF \
/c/libidn2/gettext-0.22.5/libtextstyle/config.h.in:1178:#if !(defined __STDC_WANT_LIB_EXT1__ && __STDC_WANT_LIB_EXT1__)
...
생성하는 파일인거 같은 파일을 찾아 수정 
configure.ac configure 스크립트를 생성하는 메타 파일
 이 파일에서 config.h의 내용을 결정짓는 매크로를 설정
# if ! 방지용
# Check for wchar_t type
AC_CHECK_TYPE([wchar_t], 
    [AC_DEFINE([HAVE_WCHAR_T], [1], [Define to 1 if you have the `wchar_t` type])], 
    [AC_DEFINE([HAVE_WCHAR_T], [0], [Define to 0 if you do not have the `wchar_t` type])])
수정 후
aclocal을 실행하여 aclocal.m4 파일을 업데이트
aclocal
autoconf를 실행하여 configure 스크립트를 생성하거나 업데이트
autoconf
configure 스크립트를 실행하여 config.h 파일을 생성
./configure
config.h 파일이 생성되고, HAVE_WCHAR_T가 정의된 상태로 확인
/* Define if you have wchar_t */
#define HAVE_WCHAR_T 1

configure: creating ./config.status
config.status: creating Makefile
config.status: creating doc/Makefile
config.status: creating lib/Makefile
config.status: creating lib/exported.sh
config.status: creating lib/textstyle/version.h
config.status: creating lib/textstyle/woe32dll.h
config.status: creating tests/Makefile
config.status: creating adhoc-tests/Makefile
config.status: creating config.h
config.status: executing depfiles commands
config.status: executing libtool commands

# make
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# make
 cd . && /bin/sh /c/libidn2/gettext-0.22.5/libtextstyle/build-aux/missing automake-1.16 --gnu
Makefile.am:49: warning: whitespace following trailing backslash
lib/Makefile.am:48: error: INCLUDED_LIBXML does not appear in AM_CONDITIONAL
lib/Makefile.gnulib:104: error: GL_GENERATE_ALLOCA_H does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:132: error: GL_GENERATE_ASSERT_H does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:218: error: GL_COND_OBJ_CLOSE does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:234: error: GL_COND_OBJ_DUP2 does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:246: error: GL_GENERATE_ERRNO_H does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:274: error: GL_COND_OBJ_ERROR does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:320: error: GL_COND_OBJ_FCNTL does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:442: error: GL_GENERATE_FLOAT_H does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:459: error: GL_COND_OBJ_FLOAT does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:462: error: GL_COND_OBJ_ITOLD does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:479: error: GL_COND_OBJ_FREE does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:505: error: GL_COND_OBJ_FSTAT does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:517: error: GL_COND_OBJ_FSYNC does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:562: error: GL_COND_OBJ_GETDTABLESIZE does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:570: error: GL_COND_OBJ_GETHOSTNAME does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:580: error: GL_COND_OBJ_GETPROGNAME does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:596: error: GL_COND_OBJ_GETTIMEOFDAY does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:762: error: GL_COND_OBJ_ISATTY does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:770: error: GL_COND_OBJ_ISINF does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:834: error: INCLUDED_LIBCROCO does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:873: error: GL_COND_LIBTOOL does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:885: error: INCLUDED_LIBGLIB does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:984: error: GL_COND_LIBTOOL does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:996: error: INCLUDED_LIBXML does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:1439: error: GL_COND_LIBTOOL does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:1455: error: GL_GENERATE_LIMITS_H does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:1489: error: GL_COND_OBJ_LOG10 does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:1859: error: GL_COND_OBJ_MEMCHR does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:1914: error: GL_COND_OBJ_MSVC_INVAL does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:1924: error: GL_COND_OBJ_MSVC_NOTHROW does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:1967: error: GL_GENERATE_OBSTACK_H does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:1979: error: GL_COND_OBJ_OBSTACK does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:1989: error: GL_COND_OBJ_OPEN does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:2051: error: GL_COND_OBJ_RAISE does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:2059: error: GL_COND_OBJ_READ does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:2085: error: GL_COND_OBJ_REALLOCARRAY does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:2117: error: GL_COND_OBJ_SIGACTION does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:2168: error: GL_COND_OBJ_SIGNBIT3 does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:2178: error: GL_COND_OBJ_SIGPROCMASK does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:2257: error: GL_COND_OBJ_STAT does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:2281: error: GL_GENERATE_STDARG_H does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:2307: error: GL_GENERATE_STDCKDINT_H does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:2328: error: GL_GENERATE_STDDEF_H does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:2357: error: GL_GENERATE_STDINT_H does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:2537: error: GL_COND_OBJ_STDIO_READ does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:2540: error: GL_COND_OBJ_STDIO_WRITE does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:2718: error: GL_COND_OBJ_STPCPY does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:2726: error: GL_COND_OBJ_STRERROR does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:2734: error: GL_COND_OBJ_STRERROR_OVERRIDE does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:3484: error: LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUC does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:3674: error: GL_COND_OBJ_WINDOWS_MUTEX does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:3684: error: GL_COND_OBJ_WINDOWS_ONCE does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:3694: error: GL_COND_OBJ_WINDOWS_RECMUTEX does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:3704: error: GL_COND_OBJ_WINDOWS_RWLOCK does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.gnulib:3714: error: GL_COND_OBJ_WRITE does not appear in AM_CONDITIONAL
lib/Makefile.am:63:   'lib/Makefile.gnulib' included from here
lib/Makefile.am:201: error: INCLUDED_LIBCROCO does not appear in AM_CONDITIONAL
lib/Makefile.am:204: error: INCLUDED_LIBXML does not appear in AM_CONDITIONAL
lib/Makefile.am:207: error: INCLUDED_LIBGLIB does not appear in AM_CONDITIONAL
make: *** [Makefile:1997: Makefile.in] 오류 1

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# automake --version
autoconf --version
automake (GNU automake) 1.16.5
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv2+: GNU GPL version 2 or later <https://gnu.org/licenses/gpl-2.0.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Tom Tromey <tromey@redhat.com>
       and Alexandre Duret-Lutz <adl@gnu.org>.
autoconf (GNU Autoconf) 2.72
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+/Autoconf: GNU GPL version 3 or later
<https://gnu.org/licenses/gpl.html>, <https://gnu.org/licenses/exceptions.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David J. MacKenzie and Akim Demaille.

configure.ac
# 추가
AM_CONDITIONAL([INCLUDED_LIBXML], [test "x$have_libxml" = "xyes"])

#추가
# Check for gnulib modules
GL_GNU_SOURCE
GL_REQUIRE_VERSION([2.0])

gnulib 모듈 업데이트
export PATH=$PATH:/c/gnulib
nayou@kimnayooung MINGW64 /c/gnulib
# gnulib-tool --update
1 out of 1 hunk FAILED -- saving rejects to file C:/msys64/tmp/glpy7noks9h3/lib/exitfail.h.rej
C:/gnulib/gnulib-tool.py: *** patch file lib/exitfail.h didn't apply cleanly
C:/gnulib/gnulib-tool.py: *** Stop.
gnulib 최신 버전으로 업데이트
cd /c/gnulib
git pull origin master

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# gnulib-tool --import
# make
CDPATH="${ZSH_VERSION+.}:" && cd . && /bin/sh '/c/libidn2/gettext-0.22.5/libtextstyle/build-aux/missing' aclocal-1.16 -I m4 -I gnulib-m4
 cd . && /bin/sh /c/libidn2/gettext-0.22.5/libtextstyle/build-aux/missing automake-1.16 --gnu
Makefile.am:54: warning: whitespace following trailing backslash
CDPATH="${ZSH_VERSION+.}:" && cd . && /bin/sh '/c/libidn2/gettext-0.22.5/libtextstyle/build-aux/missing' autoconf
configure.ac:77: warning: AC_COMPILE_IFELSE was called before AC_USE_SYSTEM_EXTENSIONS
gnulib-m4/gnulib-comp.m4:34: lts_EARLY is expanded from...
configure.ac:77: the top level
configure.ac:77: warning: AC_CHECK_INCLUDES_DEFAULT was called before AC_USE_SYSTEM_EXTENSIONS
gnulib-m4/gnulib-comp.m4:34: lts_EARLY is expanded from...
configure.ac:77: the top level
/bin/sh ./config.status --recheck
running CONFIG_SHELL=/bin/sh /bin/sh ./configure CC=/mingw64/bin/gcc CFLAGS=-I/mingw64/include LDFLAGS=-L/mingw64/lib CPPFLAGS=-I/mingw64/include CPP=/mingw64/bin/cpp --no-create --no-recursion
configure: loading site script /etc/config.site
./configure: line 4901: GL_GNU_SOURCE: command not found
./configure: line 4902: syntax error near unexpected token `2.0'
./configure: line 4902: `GL_REQUIRE_VERSION(2.0)'
make: *** [Makefile:2020: config.status] 오류 2
configure:4678: error: possibly undefined macro: gl_CC_GNULIB_WARNINGS
      If this token and others are legitimate, please use m4_pattern_allow.
      See the Autoconf documentation.
configure:4699: error: possibly undefined macro: gl_COMMON
configure:4744: error: possibly undefined macro: gl_PROG_AR_RANLIB
autoreconf: error: /mingw64/bin/autoconf failed with exit status: 1

configure:4678: error: possibly undefined macro: gl_CC_GNULIB_WARNINGS
      If this token and others are legitimate, please use m4_pattern_allow.
      See the Autoconf documentation.
configure:4699: error: possibly undefined macro: gl_COMMON
configure:4744: error: possibly undefined macro: gl_PROG_AR_RANLIB
autoreconf: error: /mingw64/bin/autoconf failed with exit status: 1

#추가
# 먼저 시스템 확장 기능을 활성화합니다.
AC_USE_SYSTEM_EXTENSIONS
# 그 다음에 기본 헤더 파일을 체크합니다.
AC_CHECK_INCLUDES_DEFAULT

configure.ac
#추가
# Allow usage of specific macros if they are not yet recognized
m4_pattern_allow([gl_CC_GNULIB_WARNINGS])
m4_pattern_allow([gl_COMMON])
m4_pattern_allow([gl_PROG_AR_RANLIB])

aclocal.m4 파일을 업데이트
m4 매크로 파일을 포함하여 configure 스크립트를 생성
# aclocal
# autoreconf -ivf
# ./configure
configure: loading site script /etc/config.site
./configure: line 4678: gl_CC_GNULIB_WARNINGS: command not found
./configure: line 4699: gl_COMMON: command not found
./configure: line 4721: gl_COMMON: command not found
./configure: line 4744: gl_PROG_AR_RANLIB: command not found
./configure: line 4981: syntax error near unexpected token `2.0'
./configure: line 4981: `GL_REQUIRE_VERSION(2.0)'

configure.ac 수정
GL_REQUIRE_VERSION"([2.0])" 중요!!

#make
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/adhoc-tests' 들어감
/mingw64/bin/gcc -DHAVE_CONFIG_H -I. -I..  -I. -I. -I.. -I../lib -I./../lib -DSRCDIR=\"./\" -I/mingw64/include  -I/mingw64/include -MT hello.o -MD -MP -MF .deps/hello.Tpo -c -o hello.o hello.c
In file included from ../lib/textstyle.h:23,
                 from hello.c:20:
../lib/stddef.h:133:6: error: operator '!' has no right operand
  133 | #if !
      |      ^
In file included from ../config.h:2463,
                 from hello.c:18:
../lib/textstyle/woe32dll.h:27:36: error: stray '@' in program
   27 | # define LIBTEXTSTYLE_DLL_VARIABLE @DLL_VARIABLE@
      |                                    ^
../lib/textstyle/version.h:32:8: note: in expansion of macro 'LIBTEXTSTYLE_DLL_VARIABLE'
   32 | extern LIBTEXTSTYLE_DLL_VARIABLE const int _libtextstyle_version; /* Likewise */
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
../lib/textstyle/woe32dll.h:27:49: error: stray '@' in program
   27 | # define LIBTEXTSTYLE_DLL_VARIABLE @DLL_VARIABLE@
      |                                                 ^
../lib/textstyle/version.h:32:8: note: in expansion of macro 'LIBTEXTSTYLE_DLL_VARIABLE'
   32 | extern LIBTEXTSTYLE_DLL_VARIABLE const int _libtextstyle_version; /* Likewise */
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
../lib/textstyle/woe32dll.h:27:36: error: stray '@' in program
   27 | # define LIBTEXTSTYLE_DLL_VARIABLE @DLL_VARIABLE@
      |                                    ^
../lib/textstyle.h:621:8: note: in expansion of macro 'LIBTEXTSTYLE_DLL_VARIABLE'
  621 | extern LIBTEXTSTYLE_DLL_VARIABLE bool color_test_mode;
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
../lib/textstyle/woe32dll.h:27:49: error: stray '@' in program
   27 | # define LIBTEXTSTYLE_DLL_VARIABLE @DLL_VARIABLE@
      |                                                 ^
../lib/textstyle.h:621:8: note: in expansion of macro 'LIBTEXTSTYLE_DLL_VARIABLE'
  621 | extern LIBTEXTSTYLE_DLL_VARIABLE bool color_test_mode;
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
../lib/textstyle/woe32dll.h:27:36: error: stray '@' in program
   27 | # define LIBTEXTSTYLE_DLL_VARIABLE @DLL_VARIABLE@
      |                                    ^
../lib/textstyle.h:625:8: note: in expansion of macro 'LIBTEXTSTYLE_DLL_VARIABLE'
  625 | extern LIBTEXTSTYLE_DLL_VARIABLE enum color_option color_mode;
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
../lib/textstyle/woe32dll.h:27:49: error: stray '@' in program
   27 | # define LIBTEXTSTYLE_DLL_VARIABLE @DLL_VARIABLE@
      |                                                 ^
../lib/textstyle.h:625:8: note: in expansion of macro 'LIBTEXTSTYLE_DLL_VARIABLE'
  625 | extern LIBTEXTSTYLE_DLL_VARIABLE enum color_option color_mode;
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
../lib/textstyle/woe32dll.h:27:36: error: stray '@' in program
   27 | # define LIBTEXTSTYLE_DLL_VARIABLE @DLL_VARIABLE@
      |                                    ^
../lib/textstyle.h:628:8: note: in expansion of macro 'LIBTEXTSTYLE_DLL_VARIABLE'
  628 | extern LIBTEXTSTYLE_DLL_VARIABLE const char *style_file_name;
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
../lib/textstyle/woe32dll.h:27:49: error: stray '@' in program
   27 | # define LIBTEXTSTYLE_DLL_VARIABLE @DLL_VARIABLE@
      |                                                 ^
../lib/textstyle.h:628:8: note: in expansion of macro 'LIBTEXTSTYLE_DLL_VARIABLE'
  628 | extern LIBTEXTSTYLE_DLL_VARIABLE const char *style_file_name;
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
make[2]: *** [Makefile:1832: hello.o] 오류 1
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/adhoc-tests' 나감
make[1]: *** [Makefile:2129: all-recursive] 오류 1
make[1]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make: *** [Makefile:2003: all] 오류 2

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# rm -rf autom4te.cache
# autoreconf -ivf
# ./configure
# make
CDPATH="${ZSH_VERSION+.}:" && cd . && /bin/sh '/c/libidn2/gettext-0.22.5/libtextstyle/build-aux/missing' aclocal-1.16 -I m4 -I gnulib-m4
configure.ac:22: error: AC_INIT should be called with package and version arguments
/usr/share/aclocal-1.16/init.m4:29: AM_INIT_AUTOMAKE is expanded from...
configure.ac:22: the top level
autom4te: error: /usr/bin/m4 failed with exit status: 1
aclocal-1.16: error: autom4te failed with exit status: 1
make: *** [Makefile:2039: aclocal.m4] 오류 1
configure.ac 수정
최상단(아래순서대로작성해야함)
AC_PREREQ([2.64])
AC_INIT([libtextstyle], [0.1], [bug-libtextstyle@example.com])
AM_INIT_AUTOMAKE([1.13 silent-rules]) #추가
AC_CONFIG_HEADERS([config.h])
#autoreconf -ivf
../lib/stddef.h:107:3: error: #error "Please include config.h first."
  107 |  #error "Please include config.h first."
      |   ^~~~~
../lib/stddef.h:133:6: error: operator '!' has no right operand
  133 | #if !
      |      ^
In file included from ../lib/textstyle.h:24:
../lib/stdio.h:71:3: error: #error "Please include config.h first."
   71 |  #error "Please include config.h first."
      |   ^~~~~
In file included from ../lib/stdio.h:82:
../lib/sys/types.h:28:3: error: #error "Please include config.h first."
   28 |  #error "Please include config.h first."
      |   ^~~~~
In file included from ../lib/textstyle.h:26:
../lib/textstyle/woe32dll.h:27:36: error: stray '@' in program
   27 | # define LIBTEXTSTYLE_DLL_VARIABLE @DLL_VARIABLE@
      |                                    ^
../lib/textstyle/version.h:32:8: note: in expansion of macro 'LIBTEXTSTYLE_DLL_VARIABLE'
   32 | extern LIBTEXTSTYLE_DLL_VARIABLE const int _libtextstyle_version; /* Likewise */
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
../lib/textstyle/woe32dll.h:27:49: error: stray '@' in program
   27 | # define LIBTEXTSTYLE_DLL_VARIABLE @DLL_VARIABLE@
      |                                                 ^
../lib/textstyle/version.h:32:8: note: in expansion of macro 'LIBTEXTSTYLE_DLL_VARIABLE'
   32 | extern LIBTEXTSTYLE_DLL_VARIABLE const int _libtextstyle_version; /* Likewise */
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../lib/textstyle.h:29:
../lib/textstyle/version.h:32:34: error: expected ';' before 'const'
   32 | extern LIBTEXTSTYLE_DLL_VARIABLE const int _libtextstyle_version; /* Likewise */
      |                                  ^~~~~
../lib/textstyle/woe32dll.h:27:36: error: stray '@' in program
   27 | # define LIBTEXTSTYLE_DLL_VARIABLE @DLL_VARIABLE@
      |                                    ^
../lib/textstyle.h:621:8: note: in expansion of macro 'LIBTEXTSTYLE_DLL_VARIABLE'
  621 | extern LIBTEXTSTYLE_DLL_VARIABLE bool color_test_mode;
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
../lib/textstyle/woe32dll.h:27:49: error: stray '@' in program
   27 | # define LIBTEXTSTYLE_DLL_VARIABLE @DLL_VARIABLE@
      |                                                 ^
../lib/textstyle.h:621:8: note: in expansion of macro 'LIBTEXTSTYLE_DLL_VARIABLE'
  621 | extern LIBTEXTSTYLE_DLL_VARIABLE bool color_test_mode;
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../lib/textstyle/stdbool.h:4,
                 from ../lib/textstyle.h:25:
../lib/textstyle.h:621:34: error: expected ';' before '_Bool'
  621 | extern LIBTEXTSTYLE_DLL_VARIABLE bool color_test_mode;
      |                                  ^~~~
../lib/textstyle/woe32dll.h:27:36: error: stray '@' in program
   27 | # define LIBTEXTSTYLE_DLL_VARIABLE @DLL_VARIABLE@
      |                                    ^
../lib/textstyle.h:625:8: note: in expansion of macro 'LIBTEXTSTYLE_DLL_VARIABLE'
  625 | extern LIBTEXTSTYLE_DLL_VARIABLE enum color_option color_mode;
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
../lib/textstyle/woe32dll.h:27:49: error: stray '@' in program
   27 | # define LIBTEXTSTYLE_DLL_VARIABLE @DLL_VARIABLE@
      |                                                 ^
../lib/textstyle.h:625:8: note: in expansion of macro 'LIBTEXTSTYLE_DLL_VARIABLE'
  625 | extern LIBTEXTSTYLE_DLL_VARIABLE enum color_option color_mode;
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
../lib/textstyle.h:625:34: error: expected ';' before 'enum'
  625 | extern LIBTEXTSTYLE_DLL_VARIABLE enum color_option color_mode;
      |                                  ^~~~
../lib/textstyle/woe32dll.h:27:36: error: stray '@' in program
   27 | # define LIBTEXTSTYLE_DLL_VARIABLE @DLL_VARIABLE@
      |                                    ^
../lib/textstyle.h:628:8: note: in expansion of macro 'LIBTEXTSTYLE_DLL_VARIABLE'
  628 | extern LIBTEXTSTYLE_DLL_VARIABLE const char *style_file_name;
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
../lib/textstyle/woe32dll.h:27:49: error: stray '@' in program
   27 | # define LIBTEXTSTYLE_DLL_VARIABLE @DLL_VARIABLE@
      |                                                 ^
../lib/textstyle.h:628:8: note: in expansion of macro 'LIBTEXTSTYLE_DLL_VARIABLE'
  628 | extern LIBTEXTSTYLE_DLL_VARIABLE const char *style_file_name;
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
../lib/textstyle.h:628:34: error: expected ';' before 'const'
  628 | extern LIBTEXTSTYLE_DLL_VARIABLE const char *style_file_name;
      |                                  ^~~~~
In file included from C:/msys64/mingw64/include/io.h:10,
                 from ../lib/textstyle.h:687:
../lib/string.h:52:3: error: #error "Please include config.h first."
   52 |  #error "Please include config.h first."
      |   ^~~~~
In file included from C:/msys64/mingw64/include/sec_api/stdlib_s.h:9,
                 from C:/msys64/mingw64/include/stdlib.h:658,
                 from ../lib/stdlib.h:36,
                 from hello.c:23:
../lib/stdlib.h:45:3: error: #error "Please include config.h first."
   45 |  #error "Please include config.h first."
      |   ^~~~~
In file included from C:/msys64/mingw64/include/process.h:13,
                 from C:/msys64/mingw64/include/unistd.h:11,
                 from ../lib/unistd.h:40,
                 from hello.c:25:
../lib/sys/types.h:28:3: error: #error "Please include config.h first."
   28 |  #error "Please include config.h first."
      |   ^~~~~
In file included from C:/msys64/mingw64/include/unistd.h:50:
../lib/sys/types.h:28:3: error: #error "Please include config.h first."
   28 |  #error "Please include config.h first."
      |   ^~~~~
../lib/unistd.h:76:3: error: #error "Please include config.h first."
   76 |  #error "Please include config.h first."
      |   ^~~~~
In file included from ../lib/unistd.h:165:
../lib/sys/types.h:28:3: error: #error "Please include config.h first."
   28 |  #error "Please include config.h first."
      |   ^~~~~
../lib/unistd.h:717:24: error: expected ';' before 'extern'
  717 | _GL_INLINE_HEADER_BEGIN
      |                        ^
      |                        ;
../lib/unistd.h:2953:22: error: expected ';' before 'int'
 2953 | _GL_INLINE_HEADER_END
      |                      ^
      |                      ;
make[2]: *** [Makefile:396: hello.o] 오류 1
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/adhoc-tests' 나감
make[1]: *** [Makefile:692: all-recursive] 오류 1
make[1]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make: *** [Makefile:566: all] 오류 2

=> 모든 .c, .h, .in.h 파일에 최상단에 #include "config.h" 를 추가해줘야함 

auto_include_config_h.sh생성
#!/bin/bash

# 현재 디렉토리와 하위 디렉토리에서 .c 및 .h 파일 찾기
find . -name '*.c' -o -name '*.h' | while read -r file; do
  # 파일의 첫 번째 줄에 #include "config.h"가 포함되어 있는지 확인
  if grep -q '#include "config.h"' "$file"; then
    echo "$file에는 이미 #include \"config.h\"가 포함되어 있습니다."
  else
    echo "$file에 #include \"config.h\"를 추가합니다."
    # 임시 파일을 생성하여 #include "config.h"를 추가
    temp_file=$(mktemp)
    echo '#include "config.h"' > "$temp_file"
    cat "$file" >> "$temp_file"
    mv "$temp_file" "$file"
  fi
done

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# chmod +x auto_include_config_h.sh
# ./auto_include_config_h.sh
...
./lib/xvasprintf.h에 #include "config.h"를 추가합니다.
./lib/_Noreturn.h에 #include "config.h"를 추가합니다.
./tests/arg-nonnull.h에 #include "config.h"를 추가합니다.
./tests/c++defs.h에 #include "config.h"를 추가합니다.
./tests/dummy.c에 #include "config.h"를 추가합니다.
./tests/test-accessors.c에 #include "config.h"를 추가합니다.
./tests/test-instanceof.c에 #include "config.h"를 추가합니다.
./tests/test-memory-ostream.c에 #include "config.h"를 추가합니다.
./tests/test-term-ostream.c에 #include "config.h"를 추가합니다.
...

#make
./configure: line 6805: syntax error near unexpected token `('
./configure: line 6805: `    DLL_VARIABLE=__declspec(dllexport)'
make: *** [Makefile:596: config.status] 오류 2

configure.ac 수정
# Windows-specific settings for mingw and Cygwin
case "$host_os" in
  mingw* | cygwin*) 
    is_woe32=yes
    ;;
  *) 
    is_woe32=no
    ;;
esac

if test "$is_woe32" = "yes"; then
    AM_CONDITIONAL([WOE32DLL], true)
    AM_CONDITIONAL([WOE32], true)
    echo "WOE32DLL and WOE32 are enabled."
    LDFLAGS="-no-undefined -export-dynamic"
    AC_SUBST([DLL_VARIABLE], [__declspec(dllexport)])
else
    AM_CONDITIONAL([WOE32DLL], false)
    AM_CONDITIONAL([WOE32], false)
    echo "WOE32DLL and WOE32 are disabled."
    LDFLAGS="-no-undefined"
    AC_SUBST([DLL_VARIABLE], [])
fi

#make
checking for /mingw64/bin/gcc option to enable C23 features... (cached) unupported
checking for /mingw64/bin/gcc option to enable C11 features... (cached) noe needed
checking dependency style of /mingw64/bin/gcc... (cached) gcc3
checking how to run the C preprocessor... /mingw64/bin/cpp
checking build system type... x86_64-w64-mingw32
checking host system type... x86_64-w64-mingw32
configure.ac: Configured host OS: mingw32
./configure: line 6805: syntax error near unexpected token `('
./configure: line 6805: `    DLL_VARIABLE=__declspec(dllexport)'

#configure.ac 수정
# Read version number from version.sh
. $srcdir/version.sh
gl_INIT_PACKAGE([libtextstyle], [$VERSION_NUMBER])
# Initialize Automake (위치변경)
AM_INIT_AUTOMAKE([1.13 silent-rules])
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# autoconf
# autoreconf -ivf
# ./configure
# make
../lib/stddef.h:108:3: error: #error "Please include config.h first."
  108 |  #error "Please include config.h first."
      |   ^~~~~
../lib/stddef.h:134:6: error: operator '!' has no right operand
  134 | #if !
      |      ^
....
configure.ac 수정
AC_DEFINE([_GL_CONFIG_H_INCLUDED], [1], [Define to prevent multiple inclusion])

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -r -l "Some platforms lack wchar_t" .                             
./lib/stddef.h
./lib/stddef.in.h

c:\libidn2\gettext-0.22.5\libtextstyle>findstr /s /m /c:"Some platforms lack wchar_t" *.*
lib\stddef.h
lib\stddef.in.h

/c/libidn2/gettext-0.22.5/libtextstyle/configure.ac
# Check for wchar_t type
AC_CHECK_TYPE([wchar_t],
  [AC_DEFINE([HAVE_WCHAR_T], [1], [Define to 1 if you have wchar_t])],
  [AC_DEFINE([HAVE_WCHAR_T], [0], [Define to 0 if you do not have wchar_t])]
)

/c/libidn2/gettext-0.22.5/libtextstyle/lib/stddef.h
/* Some platforms lack wchar_t.  */
#if !
# define wchar_t int
#endif

/c/libidn2/gettext-0.22.5/libtextstyle/lib/stddef.in.h
/* Some platforms lack wchar_t.  */
#if !@HAVE_WCHAR_T@
# define wchar_t int
#endif

결론)
stddef.h
/* Some platforms lack wchar_t.  */
/*#if !
# define wchar_t int
#endif*/

stddef.in.h
/* Some platforms lack wchar_t.  */
/*#if !@HAVE_WCHAR_T@
# define wchar_t int
#endif*/

/* Some platforms lack wchar_t.  */
/*#if !@HAVE_WCHAR_T@
  #define wchar_t int
#endif*/

# autoreconf -ivf && ./configure && make
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/doc' 들어감
make[2]: 'all'을(를) 위해 할 일이 없습니다.
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/doc' 나감
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 들어감
make[2]: *** 'color.lo'에서 필요한 'color.c' 타겟을 만들 규칙이 없습니다.  멈춤.
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make[1]: *** [Makefile:694: all-recursive] 오류 1
make[1]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make: *** [Makefile:568: all] 오류 2

파일확인
"C:\libidn2\gettext-0.22.5\libtextstyle\lib\color.h"
"C:\libidn2\gettext-0.22.5\libtextstyle\lib\color.c"

Makefile.in
AUTOMAKE_OPTIONS = 1.13 gnu no-dependencies subdir-objects
libtextstyle_la_SOURCES = \
	color.c \
	gl_array_list.c
AUTOCONF = @AUTOCONF@
	$(am__cd) $(srcdir) && $(AUTOCONF)

Makefile.am
AUTOMAKE_OPTIONS = 1.13 gnu no-dependencies subdir-objects
libtextstyle_la_SOURCES = \
	color.c \
	gl_array_list.c 
AUTOCONF 없음

configure.ac
AC_CONFIG_SRCDIR([lib/color.c])

(수정)
Makefile.in
libtextstyle_la_SOURCES = \
	lib/color.c \
	lib/gl_array_list.c 

Makefile.am
libtextstyle_la_SOURCES = \
	lib/color.c \
	lib/gl_array_list.c

configure.ac
없음

# autoreconf -ivf && ./configure && make
(오류)
lib/color.h:49:6: error: redeclaration of 'enum color_option'
   49 | enum color_option { color_no, color_tty, color_yes, color_html };
      |      ^~~~~~~~~~~~
lib/color.h:36:6: note: originally defined here
   36 | enum color_option { color_no, color_tty, color_yes, color_html };
      |      ^~~~~~~~~~~~
lib/color.h:49:21: error: redeclaration of enumerator 'color_no'
   49 | enum color_option { color_no, color_tty, color_yes, color_html };
      |                     ^~~~~~~~
lib/color.h:36:21: note: previous definition of 'color_no' with type 'enum color_option'
   36 | enum color_option { color_no, color_tty, color_yes, color_html };
      |                     ^~~~~~~~
lib/color.h:49:31: error: redeclaration of enumerator 'color_tty'
   49 | enum color_option { color_no, color_tty, color_yes, color_html };
      |                               ^~~~~~~~~
lib/color.h:36:31: note: previous definition of 'color_tty' with type 'enum color_option'
   36 | enum color_option { color_no, color_tty, color_yes, color_html };
      |                               ^~~~~~~~~
lib/color.h:49:42: error: redeclaration of enumerator 'color_yes'
   49 | enum color_option { color_no, color_tty, color_yes, color_html };
      |                                          ^~~~~~~~~
lib/color.h:36:42: note: previous definition of 'color_yes' with type 'enum color_option'
   36 | enum color_option { color_no, color_tty, color_yes, color_html };
      |                                          ^~~~~~~~~
lib/color.h:49:53: error: redeclaration of enumerator 'color_html'
   49 | enum color_option { color_no, color_tty, color_yes, color_html };
      |                                                     ^~~~~~~~~~
lib/color.h:36:53: note: previous definition of 'color_html' with type 'enum color_option'
   36 | enum color_option { color_no, color_tty, color_yes, color_html };
      |                                                     ^~~~~~~~~~
In file included from term-ostream.oo.h:65,
                 from lib/color.c:32:
lib/term-style-control.h:86:3: error: expected specifier-qualifier-list before '_GL_ASYNC_SAFE'
   86 |   _GL_ASYNC_SAFE void (*async_restore) (struct term_style_user_data *);
      |   ^~~~~~~~~~~~~~
In file included from lib/color.c:35:
lib/concat-filename.h: In function 'concatenated_filename':
lib/concat-filename.h:38:3: error: unknown type name '_GL_ATTRIBUTE_MALLOC'
   38 |   _GL_ATTRIBUTE_MALLOC _GL_ATTRIBUTE_DEALLOC_FREE;
      |   ^~~~~~~~~~~~~~~~~~~~
lib/concat-filename.h:44:3: error: expected '=', ',', ';', 'asm' or '__attribute__' before '_GL_ATTRIBUTE_MALLOC'
   44 |   _GL_ATTRIBUTE_MALLOC _GL_ATTRIBUTE_DEALLOC_FREE
      |   ^~~~~~~~~~~~~~~~~~~~
lib/color.c:42:6: error: parameter 'color_mode' is initialized
   42 | enum color_option color_mode = color_tty;
      |      ^~~~~~~~~~~~
lib/color.c:50:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
   50 | {
      | ^
lib/color.c:78:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
   78 | {
      | ^
lib/color.c:85:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
   85 | {
      | ^
lib/color.c:391:1: error: expected '=', ',', ';', 'asm' or '__attribute_
' before '{' token
  391 | {
      | ^
lib/color.c:423:1: error: expected '=', ',', ';', 'asm' or '__attribute_
' before '{' token
  423 | {
      | ^
lib/concat-filename.h:36:14: error: old-style parameter declarations in prototyped function definition
   36 | extern char *concatenated_filename (const char *directory,
      |              ^~~~~~~~~~~~~~~~~~~~~
lib/color.c:451: error: expected '{' at end of input
make[2]: *** [Makefile:684: lib/color.lo] 오류 1
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make[1]: *** [Makefile:703: all-recursive] 오류 1
make[1]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make: *** [Makefile:569: all] 오류 2

(수정)
lib/color.h
enum color_option { color_no, color_tty, color_yes, color_html };
중복정의되어있어 하나 삭제

lib/term_style_control.h
_GL_ASYNC_SAFE 선언이있는지 확인
선언이 없어서 검색
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -r -n "define _GL_ASYNC_SAFE" .
./autom4te.cache/traces.0:24717:#define _GL_ASYNC_SAFE
./autom4te.cache/traces.3:4260:#define _GL_ASYNC_SAFE
./gnulib-m4/gnulib-common.m4:883:#define _GL_ASYNC_SAFE
./gnulib-m4/gnulib-common.m4~:616:#define _GL_ASYNC_SAFE
./m4/gnulib-common.m4:883:#define _GL_ASYNC_SAFE
config.h 수정
/* Define _GL_ASYNC_SAFE lib/term_style_control.h 필요 */
#ifndef _GL_ASYNC_SAFE
#define _GL_ASYNC_SAFE
#endif

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -r -n -E "#define _GL_ATTRIBUTE_MALLOC|#define _GL_ATTRIBUTE_DEALLOC_FREE" .
찾을수없음
config.h 수정
#ifndef _GL_ATTRIBUTE_MALLOC
#define _GL_ATTRIBUTE_MALLOC /* 정의할 내용 */
#endif

#ifndef _GL_ATTRIBUTE_DEALLOC_FREE
#define _GL_ATTRIBUTE_DEALLOC_FREE /* 정의할 내용 */
#endif

# autoreconf -ivf && ./configure && make

config.h와 config.h.in에 추가해도 계속 초기화가 되서
configure.ac에 추가함
# Define _GL_ASYNC_SAFE if necessary
AC_DEFINE([_GL_ASYNC_SAFE], [], [Define to enable async safe functions])

# Define _GL_ATTRIBUTE_MALLOC if necessary
AC_DEFINE([_GL_ATTRIBUTE_MALLOC], [], [Define to enable malloc attributes])

# Define _GL_ATTRIBUTE_DEALLOC_FREE if necessary
AC_DEFINE([_GL_ATTRIBUTE_DEALLOC_FREE], [], [Define to enable dealloc free attributes])

# autoreconf -ivf && ./configure && make
(오류)
In file included from ../lib/stdio.h:1,
                 from hello.c:23:
../config.h:174:9: warning: "_GL_ATTRIBUTE_DEALLOC_FREE" redefined
  174 | #define _GL_ATTRIBUTE_DEALLOC_FREE /**/
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/msys64/mingw64/include/io.h:10,
                 from ../lib/textstyle.h:688,
                 from hello.c:21:
../lib/string.h:699:11: note: this is the location of the previous definition
  699 | #  define _GL_ATTRIBUTE_DEALLOC_FREE _GL_ATTRIBUTE_DEALLOC (rpl_free, 1)
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~
mv -f .deps/hello.Tpo .deps/hello.Po
/bin/sh ../libtool  --tag=CC   --mode=link /mingw64/bin/gcc  -I/mingw64/include  -no-undefined -export-dynamic -o hello.exe hello.o ../lib/libtextstyle.la
libtool: link: /mingw64/bin/gcc -I/mingw64/include -o .libs/hello.exe hello.o -Wl,--export-all-symbols  /mingw64/lib/libtextstyle.a -L/mingw64/lib -lws2_32 -liconv -lncurses
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/adhoc-tests' 나감
Making all in doc
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/doc' 들어감
make[2]: 'all'을(를) 위해 할 일이 없습니다.
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/doc' 나감
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 들어감
/bin/sh ./libtool  --tag=CC   --mode=compile /mingw64/bin/gcc -DHAVE_CONFIG_H -I.   -I/mingw64/include  -I/mingw64/include -c -o lib/color.lo lib/color.c
libtool: compile:  /mingw64/bin/gcc -DHAVE_CONFIG_H -I. -I/mingw64/include -I/mingw64/include -c lib/color.c  -DDLL_EXPORT -DPIC -o lib/.libs/color.o
In file included from lib/color.c:35:
lib/concat-filename.h: In function 'xconcatenated_filename':
lib/concat-filename.h:45:3: error: expected declaration specifiers before '_GL_ATTRIBUTE_RETURNS_NONNULL'
   45 |   _GL_ATTRIBUTE_RETURNS_NONNULL;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/color.c:42:6: error: parameter 'color_mode' is initialized
   42 | enum color_option color_mode = color_tty;
      |      ^~~~~~~~~~~~
lib/color.c:50:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
   50 | {
      | ^
lib/color.c:78:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
   78 | {
      | ^
lib/color.c:85:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
   85 | {
      | ^
lib/color.c:391:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
  391 | {
      | ^
lib/color.c:423:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
  423 | {
      | ^
lib/concat-filename.h:42:14: error: old-style parameter declarations in prototyped function definition
   42 | extern char *xconcatenated_filename (const char *directory,
      |              ^~~~~~~~~~~~~~~~~~~~~~
lib/color.c:451: error: expected '{' at end of input
make[2]: *** [Makefile:684: lib/color.lo] 오류 1
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make[1]: *** [Makefile:703: all-recursive] 오류 1
make[1]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make: *** [Makefile:569: all] 오류 2
(수정)
_GL_ATTRIBUTE_DEALLOC_FREE 매크로가 config.h와 lib/string.h에서 각각 정의
# Define _GL_ATTRIBUTE_DEALLOC_FREE if necessary
# 중복선언주석처리 lib/string.h
#AC_DEFINE([_GL_ATTRIBUTE_DEALLOC_FREE], [], [Define to enable dealloc free attributes])
# Define _GL_ATTRIBUTE_RETURNS_NONNULL if necessary
# 추가
AC_DEFINE([_GL_ATTRIBUTE_RETURNS_NONNULL], [], [Define to enable returns nonnull attributes])
concat-filename.h 수정
/* undefine error 추가 */
#ifndef _GL_ATTRIBUTE_DEALLOC_FREE
#define _GL_ATTRIBUTE_DEALLOC_FREE
#endif
color.c에서 선언되지않은 xstrdup함수사용
color.h 수정
#include "xstrdup.h" 
lib/xstrdup.h생성
#ifndef XSTRDUP_H
#define XSTRDUP_H

#include <stddef.h>  // for size_t

// Function declaration for xstrdup
char *xstrdup(const char *s);

#endif /* XSTRDUP_H */

lib/xstrdup.c 생성
#include "xstrdup.h"
#include <stdlib.h>  // for malloc, free
#include <string.h>  // for strlen, strcpy

// Function implementation for xstrdup
char *xstrdup(const char *s) {
    if (s == NULL) {
        return NULL;  // Handle NULL pointer input
    }

    // Allocate memory for the duplicated string
    char *dup = (char *)malloc(strlen(s) + 1);
    if (dup == NULL) {
        return NULL;  // Memory allocation failed
    }

    // Copy the string into the allocated memory
    strcpy(dup, s);
    return dup;
}

typedef bool (*gl_listelement_equals_fn) bool 타입이 정의되지 않았습니다
lib/gl_list.h 수정
#include <stdbool.h>/*추가*/

lib/gl_list.h:34:25: error: unknown type name '_GL_INLINE'
   34 | # define GL_LIST_INLINE _GL_INLINE
configure.ac 수정
AC_DEFINE([_GL_INLINE],[],[Define for inline]) /*추가*/

lib/gl_list.h:648:24: error: expected ';' before 'int'
  648 | _GL_ATTRIBUTE_NODISCARD GL_LIST_INLINE int
      |                        ^               ~~~
      |                        ;
configure.ac 수정
# Define macros for inline header
AC_DEFINE([_GL_INLINE],[inline],[Define for inline]) /*추가*/
AC_DEFINE([_GL_INLINE_HEADER_BEGIN], [], [Define for inline header start])
AC_DEFINE([_GL_INLINE_HEADER_END], [], [Define for inline header end])
AC_DEFINE([_GL_CONFIG_H_INCLUDED], [1], [Define to prevent multiple inclusion])
AC_DEFINE([_GL_ATTRIBUTE_NODISCARD], [], [Define for attribute nodiscard])
AC_DEFINE([_GL_LIST_INLINE], [], [Define for list inline])

lib/xsize.h:66:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'xsum'
   66 | xsum (size_t size1, size_t size2)
      | ^~~~
확인할사항
config.h
/* Define for inline */
#define _GL_INLINE /**/

lib/attribute.h
#define ATTRIBUTE_PURE _GL_ATTRIBUTE_PURE

lib/xsize.h
/* Get ATTRIBUTE_PURE.  */
#include "attribute.h"
#include <stdbool.h> /* 추가 bool타입 사용*/

lib/xsize.h:68:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'xsum'
   68 | xsum (size_t size1, size_t size2)
      | ^~~~
lib/xsize.h:76:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'xsum3'
   76 | xsum3 (size_t size1, size_t size2, size_t size3)
      | ^~~~~
lib/xsize.h:83:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'xsum4'
   83 | xsum4 (size_t size1, size_t size2, size_t size3, size_t size4)
      | ^~~~~
lib/xsize.h:90:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'xmax'
   90 | xmax (size_t size1, size_t size2)
      | ^~~~

configure.ac 수정
AC_DEFINE([_GL_ATTRIBUTE_PURE], [__attribute__((pure))], [Define to __attribute__((pure))])

(오류)
lib/gl_array_list.c:531:25: error: unknown type name '_GL_ATTRIBUTE_MAYBE_UNUSED'
  531 | gl_array_iterator_free (_GL_ATTRIBUTE_MAYBE_UNUSED gl_list_iterator_t *iterator)
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
lib/gl_array_list.c:691:5: error: 'gl_array_iterator_free' undeclared here (not in a function); did you mean 'gl_array_iterator_next'?
  691 |     gl_array_iterator_free,
      |     ^~~~~~~~~~~~~~~~~~~~~~
      |     gl_array_iterator_next
make[2]: *** [Makefile:684: lib/gl_array_list.lo] 오류 1
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make[1]: *** [Makefile:703: all-recursive] 오류 1
make[1]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make: *** [Makefile:569: all] 오류 2

(수정)
configure.ac 수정
AC_DEFINE([_GL_ATTRIBUTE_MAYBE_UNUSED], [__attribute__((unused))], [Define to __attribute__((unused))])

(오류)
lib/gl_array_list.c:692:9: error: initialization of 'void (*)(gl_list_iterator_t *)' 
from incompatible pointer type '_Bool (*)(gl_list_iterator_t *, const void **, struct gl_list_node_impl **)' [-Wincompatible-pointer-types]
  692 |         gl_array_iterator_next, /* ??         ^~~~~~~~~~~~~~~~~~~~~
lib/gl_array_list.c:692:9: note: (near initialization for 'gl_array_list_implementation.iterator_free')

(수정)
static bool gl_array_iterator_next (gl_list_iterator_t *iterator, const void **eltp, gl_list_node_t *nodep)
static void gl_array_iterator_free (_GL_ATTRIBUTE_MAYBE_UNUSED gl_list_iterator_t *iterator)
gl_array_iterator_next가 iterator_free 함수 포인터와 일치하지 않음

(오류)
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: lib/.libs/color.o:color.c:(.text+0x1cb): undefined reference to `term_ostream_create'
(수정)
선언된파일찾아 포함하기
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'term_ostream_create' .
Binary file ./adhoc-tests/.libs/hello.exe matches
Binary file ./doc/libtextstyle.info matches
./doc/libtextstyle.texi:1000:@deftypefn Function term_ostream_t term_ostream_create (int@tie{}@var{fd}, const@tie{}char@tie{}*@var{filename}, ttyctl_t@tie{}@var{tty_control})
./doc/libtextstyle_3.html:534:<dt><u>Function:</u> term_ostream_t <b>term_ostream_create</b><i> (int&nbsp;<var>fd</var>, const&nbsp;char&nbsp;*<var>filename</var>, ttyctl_t&nbsp;<var>tty_control</var>)</i>
./doc/libtextstyle_5.html:155:<tr><td></td><td valign="top"><a href="libtextstyle_3.html#IDX32"><code>term_ostream_create</code></a></td><td valign="top"><a href="libtextstyle_3.html#SEC27">3.5.3.3 The <code>term_ostream</code> class</a></td></tr>
./gnulib-local/lib/term-ostream.oo.c:2377:term_ostream_create (int fd, const char *filename, ttyctl_t tty_control)
./gnulib-local/lib/term-ostream.oo.h:132:       term_ostream_create (int fd, const char *filename, ttyctl_t tty_control);
./gnulib-local/lib/term-styled-ostream.oo.c:651:  stream->destination = term_ostream_create (fd, filename, tty_control);
./gnulib-local/tests/test-term-ostream.c:30:  stream = term_ostream_create (1, "stdout", TTYCTL_AUTO);
Binary file ./hello.exe matches
Binary file ./lib/.libs/color.o matches
Binary file ./lib/.libs/libtextstyle.a matches
Binary file ./lib/.libs/libtextstyle_la-color.o matches
Binary file ./lib/.libs/libtextstyle_la-term-ostream.o matches
Binary file ./lib/.libs/libtextstyle_la-term-styled-ostream.o matches
./lib/color.c:103:  stream = term_ostream_create (1, "stdout", TTYCTL_AUTO);
Binary file ./lib/color.o matches
./lib/libtextstyle.sym:96:term_ostream_create
./lib/libtextstyle.sym.in:96:term_ostream_create
Binary file ./lib/libtextstyle_la-color.o matches
Binary file ./lib/libtextstyle_la-term-ostream.o matches
Binary file ./lib/libtextstyle_la-term-styled-ostream.o matches
(찾음) ./lib/term-ostream.c:2317:term_ostream_create (int fd, const char *filename, ttyctl_t tty_control)
(찾음) ./lib/term-ostream.h:370:       term_ostream_create (int fd, const char *filename, ttyctl_t tty_control);
./lib/term-ostream.oo.c:2377:term_ostream_create (int fd, const char *filename, ttyctl_t tty_control)
./lib/term-ostream.oo.h:132:       term_ostream_create (int fd, const char *filename, ttyctl_t tty_control);
./lib/term-styled-ostream.c:646:  stream->destination = term_ostream_create (fd, filename, tty_control);
./lib/term-styled-ostream.oo.c:651:  stream->destination = term_ostream_create (fd, filename, tty_control);
./lib/textstyle.h:327:       term_ostream_create (int fd, const char *filename, ttyctl_t tty_control);
./tests/test-accessors.c:34:    ostream_t stream = term_ostream_create (1, "(stdout)", TTYCTL_AUTO);
./tests/test-instanceof.c:18:  ostream_t stream3 = term_ostream_create (1, "(stdout)", TTYCTL_AUTO);
./tests/test-term-ostream.c:30:  stream = term_ostream_create (1, "stdout", TTYCTL_AUTO);

링커오류가났으므로
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# gcc -I /c/libidn2/gettext-0.22.5/libtextstyle -std=gnu99 -D_GNU_SOURCE -c lib/term-ostream.c -o lib/term-ostream.o

(오류)
lib/error.h:477:19: error: unknown type name '_GL_ATTRIBUTE_COLD'
  477 |                   _GL_ATTRIBUTE_COLD
      |                   ^~~~~~~~~~~~~~~~~~
(수정)
configure.ac
AC_DEFINE([_GL_ATTRIBUTE_COLD], [__attribute__((cold))], [Define to __attribute__((cold))])
configure.ac 를 수정했기때문에 config.h파일을 재생성하려면
autoreconf -ivf -> ./configure -> make ->config.h 생성
gcc -I /c/libidn2/gettext-0.22.5/libtextstyle -std=gnu99 -D_GNU_SOURCE -c lib/term-ostream.c -o lib/term-ostream.o

(오류)
lib/error.h:478:41: error: expected declaration specifiers or '...' before
(' token
  478 |                   _GL_ATTRIBUTE_FORMAT ((_GL_ATTRIBUTE_SPEC_PRINTF_ERROR, 3, 4)));

(수정)
configure.ac 수정
AC_DEFINE([_GL_ATTRIBUTE_FORMAT], [__attribute__((format))], [Define to __attribute__((format))])
AC_DEFINE([_GL_ATTRIBUTE_SPEC_PRINTF_ERROR], [__attribute__((format(printf, 1, 2)))], [Define to __attribute__((format(printf, 1, 2)))])

(오류)
lib/error.h:478:73: error: expected ')' before ',' token
  478 |                   _GL_ATTRIBUTE_FORMAT ((_GL_ATTRIBUTE_SPEC_PRINTF_ERROR, 3, 4)));
      |
    ^
(수정)
__attribute__((format(printf, 1, 2)))를 사용하는 것이 좋음
lib/error.h 409 수정
# if ! 0
_GL_FUNCDECL_SYS (error, void,
                  (int __status, int __errnum, const char *__format, ...),
                  _GL_ATTRIBUTE_COLD
                  /*_GL_ATTRIBUTE_FORMAT ((_GL_ATTRIBUTE_SPEC_PRINTF_ERROR, 3, 4))*/
				  _GL_ATTRIBUTE_FORMAT
				);
# endif

#ifndef _GL_ATTRIBUTE_SPEC_PRINTF_ERROR /*추가*/
#if GNULIB_VFPRINTF_POSIX
# define _GL_ATTRIBUTE_SPEC_PRINTF_ERROR _GL_ATTRIBUTE_SPEC_PRINTF_STANDARD
#else
# define _GL_ATTRIBUTE_SPEC_PRINTF_ERROR _GL_ATTRIBUTE_SPEC_PRINTF_SYSTEM
#endif
#endif /*추가*/
configure.ac 수정
# Define macros for inline header
AC_DEFINE([_GL_INLINE],[inline],[Define for inline]) /*추가*/
AC_DEFINE([_GL_INLINE_HEADER_BEGIN], [], [Define for inline header start])
AC_DEFINE([_GL_INLINE_HEADER_END], [], [Define for inline header end])
AC_DEFINE([_GL_CONFIG_H_INCLUDED], [1], [Define to prevent multiple inclusion])
AC_DEFINE([_GL_ATTRIBUTE_NODISCARD], [__attribute__((nodiscard))], [Define for attribute nodiscard])
AC_DEFINE([_GL_LIST_INLINE], [inline], [Define for list inline])
AC_DEFINE([_GL_ATTRIBUTE_PURE], [__attribute__((pure))], [Define to __attribute__((pure))])
AC_DEFINE([_GL_ATTRIBUTE_MAYBE_UNUSED], [__attribute__((unused))], [Define to __attribute__((unused))])
AC_DEFINE([_GL_ATTRIBUTE_COLD], [__attribute__((cold))], [Define to __attribute__((cold))])
#AC_DEFINE([_GL_ATTRIBUTE_SPEC_PRINTF_ERROR], [__attribute__((format(printf, 3, 4)))], [Define to __attribute__((format(printf, 3, 4)))])
#AC_DEFINE([_GL_ATTRIBUTE_FORMAT], [_GL_ATTRIBUTE_SPEC_PRINTF_ERROR], [Define to __attribute__((format))])

# Define _GL_ATTRIBUTE_SPEC_PRINTF_ERROR based on the standard or system attributes
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_SPEC_PRINTF_ERROR], [__attribute__((format(printf, 3, 4)))], [Define to __attribute__((format(printf, 3, 4)))])
AC_DEFINE([_GL_ATTRIBUTE_FORMAT], [_GL_ATTRIBUTE_SPEC_PRINTF_ERROR], [Define to _GL_ATTRIBUTE_SPEC_PRINTF_ERROR])

(오류)
lib/error.h:541:73: error: expected identifier or '(' before ',' token
  541 |                   _GL_ATTRIBUTE_FORMAT ((_GL_ATTRIBUTE_SPEC_PRINTF_ERROR, 5, 6)));
      |
    ^
(수정)
lib/error.h 수정
# if ! 0
_GL_FUNCDECL_SYS (error_at_line, void,
                  (int __status, int __errnum, const char *__filename,
                   unsigned int __lineno, const char *__format, ...),
                  _GL_ATTRIBUTE_COLD
                  /*_GL_ATTRIBUTE_FORMAT ((_GL_ATTRIBUTE_SPEC_PRINTF_ERROR, 5, 6))*/
				  _GL_ATTRIBUTE_FORMAT_ERROR_AT_LINE
				  );
# endif

(오류)
lib/error.h:586:6: error: 'format' attribute argument 3 value '4' does not refer to a variable argument list
  586 |      _GL_ATTRIBUTE_FORMAT ((_GL_ATTRIBUTE_SPEC_PRINTF_STANDARD, 3, 0));
      |      ^~~~~~~~~~~~~~~~~~~~
lib/error.h:586:27: error: expected ',' or ';' before '(' token
  586 |      _GL_ATTRIBUTE_FORMAT ((_GL_ATTRIBUTE_SPEC_PRINTF_STANDARD, 3, 0));
      |                           ^
lib/error.h:606:6: error: 'format' attribute argument 3 value '4' does not refer to a variable argument list
  606 |      _GL_ATTRIBUTE_FORMAT ((_GL_ATTRIBUTE_SPEC_PRINTF_STANDARD, 5, 0));
      |      ^~~~~~~~~~~~~~~~~~~~
lib/error.h:606:27: error: expected ',' or ';' before '(' token
  606 |      _GL_ATTRIBUTE_FORMAT ((_GL_ATTRIBUTE_SPEC_PRINTF_STANDARD, 5, 0));
      |                           ^
(수정)
configure.ac 수정
# AC_DEFINE_UNQUOTED는 매크로를 정의할 때 큰따옴표를 자동으로 제거
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_SPEC_PRINTF_ERROR], [__attribute__((format(printf, 3, 4)))], [Define to __attribute__((format(printf, 3, 4)))])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_FORMAT], [_GL_ATTRIBUTE_SPEC_PRINTF_ERROR], [Define to _GL_ATTRIBUTE_SPEC_PRINTF_ERROR])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_FORMAT_ERROR_AT_LINE], [__attribute__((format(printf, 5, 6)))], [Define for format attribute with index 5, 6])

(오류)
lib/error.h:541:73: error: expected identifier or '(' before ',' token
  541 |                   _GL_ATTRIBUTE_FORMAT ((_GL_ATTRIBUTE_SPEC_PRINTF_ERROR, 5, 6)));
      |
    ^
lib/error.h:189:21: note: in definition of macro '_GL_FUNCDECL_SYS'
  189 |   _GL_EXTERN_C_FUNC __VA_ARGS__ rettype func parameters
      |                     ^~~~~~~~~~~
lib/error.h:584:6: error: 'format' attribute argument 3 value '4' does not refer to a variable argument list
  584 |      _GL_ATTRIBUTE_FORMAT ((_GL_ATTRIBUTE_SPEC_PRINTF_STANDARD, 3, 0));
      |      ^~~~~~~~~~~~~~~~~~~~
lib/error.h:584:27: error: expected ',' or ';' before '(' token
  584 |      _GL_ATTRIBUTE_FORMAT ((_GL_ATTRIBUTE_SPEC_PRINTF_STANDARD, 3, 0));
      |                           ^
lib/error.h:604:6: error: 'format' attribute argument 3 value '4' does not refer to a variable argument list
  604 |      _GL_ATTRIBUTE_FORMAT ((_GL_ATTRIBUTE_SPEC_PRINTF_STANDARD, 5, 0));
      |      ^~~~~~~~~~~~~~~~~~~~
lib/error.h:604:27: error: expected ',' or ';' before '(' token
  604 |      _GL_ATTRIBUTE_FORMAT ((_GL_ATTRIBUTE_SPEC_PRINTF_STANDARD, 5, 0));
      |                           ^
(수정)
lib/error.h 수정
_GL_ATTRIBUTE_SPEC_PRINTF_STANDARD_ERROR /*추가*/

configure.ac 수정
/*추가*/
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_SPEC_PRINTF_STANDARD_ERROR], [__attribute__((format(printf, 3, 0)))], [Define for format attribute with index 3, 0])

lib/error.h 수정
extern void verror (int __status, int __errnum, const char *__format,
                    va_list __args)
     _GL_ATTRIBUTE_COLD
     /*_GL_ATTRIBUTE_FORMAT ((_GL_ATTRIBUTE_SPEC_PRINTF_STANDARD, 3, 0));*/
	 _GL_ATTRIBUTE_SPEC_PRINTF_STANDARD_ERROR /*추가*/

(오류)
lib/error.h:613:1: error: expected ',' or ';' before 'extern'
  613 | extern void verror_at_line (int __status, int __errnum, const char *__fname,
      | ^~~~~~
configure.ac 수정
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_SPEC_PRINTF_STANDARD_ERROR], [__attribute__((format(printf, 3, 0)))], [Define for format attribute with index 3, 0])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_SPEC_PRINTF_STANDARD_ERROR_AT_LINE], [__attribute__((format(printf, 5, 0)))], [Define for format attribute with index 5, 0])

lib/error.h 수정
extern void verror (int __status, int __errnum, const char *__format,
                    va_list __args)
     _GL_ATTRIBUTE_COLD
     _GL_ATTRIBUTE_SPEC_PRINTF_STANDARD_ERROR; /*추가*/
extern void verror_at_line (int __status, int __errnum, const char *__fname,
                            unsigned int __lineno, const char *__format,
                            va_list __args)
     _GL_ATTRIBUTE_COLD
     _GL_ATTRIBUTE_SPEC_PRINTF_STANDARD_ERROR_AT_LINE;

(오류)
lib/error.h:637:20: error: expected ';' before 'void'
  637 | extern DLL_VARIABLE void (*error_print_progname) (void);
      |                    ^~~~~
      |                    ;
lib/error.h:640:20: error: expected ';' before 'unsigned'
  640 | extern DLL_VARIABLE unsigned int error_message_count;
      |                    ^~~~~~~~~
      |                    ;
lib/error.h:644:20: error: expected ';' before 'int'
  644 | extern DLL_VARIABLE int error_one_per_line;
      |                    ^~~~
      |  
;
(수정)
Makefile.am 수정
AM_CPPFLAGS = -I${top_builddir} # 전처리기 플래그 설정 추가

configure.ac 수정
if test "$host_os" = "mingw32"; then # DLL_VARIABLE 정의
	AC_DEFINE([DLL_VARIABLE], [__declspec(dllexport)], [Define to __declspec(dllexport)])
else
	AC_DEFINE([DLL_VARIABLE], [], [Define to nothing for non-Windows platforms])
fi
AC_SUBST([DLL_VARIABLE]) # DLL_VARIABLE 매크로 설정 추가

(오류)
In file included from term-ostream.oo.c:42:
lib/get_progname_of.h: In function 'get_progname_of':
lib/get_progname_of.h:38:24: error: expected declaration specifiers before '_GL_ATTRIBUTE_DEALLOC_FREE'
   38 |   _GL_ATTRIBUTE_MALLOC _GL_ATTRIBUTE_DEALLOC_FRE
;
      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~
(수정)
configure.ac 수정
AC_CHECK_HEADERS([attributes.h])
# 문자열 값 정의
AC_DEFINE([_GL_ASYNC_SAFE], [], [Define to enable async safe functions])
AC_DEFINE([_GL_ATTRIBUTE_MALLOC], [], [Define to enable malloc attributes])
AC_DEFINE([_GL_ATTRIBUTE_DEALLOC_FREE], [], [Define to enable dealloc free attributes])
AC_DEFINE([_GL_ATTRIBUTE_RETURNS_NONNULL], [], [Define to enable returns nonnull attributes])
AC_DEFINE([_GL_INLINE],[inline],[Define for inline])
AC_DEFINE([_GL_INLINE_HEADER_BEGIN], [], [Define for inline header start])
AC_DEFINE([_GL_INLINE_HEADER_END], [], [Define for inline header end])
AC_DEFINE([_GL_CONFIG_H_INCLUDED], [1], [Define to prevent multiple inclusion])
AC_DEFINE([_GL_LIST_INLINE], [inline], [Define for list inline])
# C 코드조각 직접 삽입 시
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_NODISCARD], [__attribute__((nodiscard))], [Define for attribute nodiscard])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_PURE], [__attribute__((pure))], [Define to __attribute__((pure))])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_MAYBE_UNUSED], [__attribute__((unused))], [Define to __attribute__((unused))])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_COLD], [__attribute__((cold))], [Define to __attribute__((cold))])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_SPEC_PRINTF_ERROR], [__attribute__((format(printf, 3, 4)))], [Define to __attribute__((format(printf, 3, 4)))])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_FORMAT], [_GL_ATTRIBUTE_SPEC_PRINTF_ERROR], [Define to _GL_ATTRIBUTE_SPEC_PRINTF_ERROR])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_FORMAT_ERROR_AT_LINE], [__attribute__((format(printf, 5, 6)))], [Define for format attribute with index 5, 6])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_SPEC_PRINTF_STANDARD_ERROR], [__attribute__((format(printf, 3, 0)))], [Define for format attribute with index 3, 0])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_SPEC_PRINTF_STANDARD_ERROR_AT_LINE], [__attribute__((format(printf, 5, 0)))], [Define for format attribute with index 5, 0])

(오류)
term-ostream.oo.c: In function 'generate_hyperlink_id':
term-ostream.oo.c:1158:23: error: implicit declaration of function 'xmalloc'; did you mean 'malloc'? [-Wimplicit-function-declaration]
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find /c/gnulib -name "*xmalloc*"
/c/gnulib/lib/xmalloc.c
/c/gnulib/lib/xmalloca.c
/c/gnulib/lib/xmalloca.h
/c/gnulib/modules/xmalloca

cp /c/gnulib/lib/xmalloca.h /c/libidn2/gettext-0.22.5/libtextstyle/lib
cp /c/gnulib/lib/xmalloca.c /c/libidn2/gettext-0.22.5/libtextstyle/lib
cp /c/gnulib/lib/xmalloc.c /c/libidn2/gettext-0.22.5/libtextstyle/lib

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls /c/libidn2/gettext-0.22.5/libtextstyle/lib/xmalloc*
/c/libidn2/gettext-0.22.5/libtextstyle/lib/xmalloc.c
/c/libidn2/gettext-0.22.5/libtextstyle/lib/xmalloca.c
/c/libidn2/gettext-0.22.5/libtextstyle/lib/xmalloca.h

term-ostream.oo.c의 상단에 xmalloca.h를 포함
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l /c/libidn2/gettext-0.22.5/libtextstyle/lib/xmalloca.h
-rw-r--r-- 1 nayou nayou 2721  9월  3 09:17 /c/libidn2/gettext-0.22.5/libtextstyle/lib/xmalloca.h

lib/term-ostream.oo.c 수정
#include "xmalloca.h" /*추가*/

configure.ac 수정
# Specify the Gnulib modules to use
gl_MODULES([xmalloca]) /*추가*/

(오류)
term-ostream.oo.c: In function 'generate_hyperlink_id':
term-ostream.oo.c:1158:23: error: implicit declaration of function 'xmalloc'; did you mean 'malloc'? [-Wimplicit-function-declaration]
(수정)
lib/term-ostream.oo.c 수정
/*char *id = (char *) xmalloc (128 / 4 + 1);*/
  char *id = (char *) malloc (128 / 4 + 1);

(오류)
term-ostream.oo.c: In function 'generate_hyperlink_id':
term-ostream.oo.c:1158:23: error: implicit declaration of function 'xmalloc'; did you mean 'malloc'? [-Wimplicit-function-declaration]
(수정)
lib/term-ostream.c 수정
/*char *id = (char *) xmalloc (128 / 4 + 1);*/
  char *id = (char *) malloc (128 / 4 + 1);

(오류)
term-ostream.oo.c: In function 'out_error':
lib/error.h:422:22: error: implicit declaration of function 'unreachable' [-Wimplicit-function-declaration]
  422 |      (status) != 0 ? unreachable () : (void) 0)
      |                      ^~~~~~~~~~~
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# /c/gnulib/gnulib-tool --import unreachable
gnulib-tool: warning: module unreachable doesn't exist
Module list with included dependencies (indented):
File list:
  lib/dummy.c
  m4/00gnulib.m4
  m4/gnulib-common.m4
  m4/zzgnulib.m4
Updating m4/gnulib-cache.m4 (backup in m4/gnulib-cache.m4~)
Updating lib/Makefile.am (backup in lib/Makefile.am~)
Finished.

You may need to add #include directives for the following .h files.

Don't forget to
  - add "lib/Makefile" to AC_CONFIG_FILES in ./configure.ac,
  - mention "lib" in SUBDIRS in Makefile.am,
  - mention "-I m4" in ACLOCAL_AMFLAGS in Makefile.am
    or add an AC_CONFIG_MACRO_DIRS([m4]) invocation in ./configure.ac,
  - mention "m4/gnulib-cache.m4" in EXTRA_DIST in Makefile.am,
  - invoke gl_EARLY in ./configure.ac, right after AC_PROG_CC,
  - invoke gl_INIT in ./configure.ac.

정의된 파일 찾기
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'unreachable' /c/gnulib
/c/gnulib/lib/stddef.in.h:191:#ifndef unreachable
/c/gnulib/lib/stddef.in.h:200:#   define _GL_HAS_BUILTIN_UNREACHABLE __has_builtin (__builtin_unreachable)
/c/gnulib/lib/stddef.in.h:207:#  define unreachable() __builtin_unreachable ()
/c/gnulib/lib/stddef.in.h:209:#  define unreachable() __assume (0)
/c/gnulib/lib/stddef.in.h:222:#  define unreachable() abort ()
/c/libidn2/gettext-0.22.5/libtextstyle/lib/stddef.in.h
/c/libidn2/gettext-0.22.5/libtextstyle/lib/stddef.h

unreachable() 함수가 사용된 위치에서 이 매크로 또는 함수가 정의되지 않았기 때문에 발생
lib/unreachable.h 생성
/* unreachable.h */
#ifndef UNREACHABLE_H
#define UNREACHABLE_H

#if defined(__cplusplus)
extern "C" {
#endif

#include <stdlib.h>  // For abort()

_Noreturn void abort(void);  // Ensure abort() is declared

#if defined(__cplusplus)
}
#endif

#define unreachable() abort()  // Define the unreachable macro to call abort()

#endif /* UNREACHABLE_H */

lib/error.h 수정
include "unreachable.h"

lib/error.in.h 수정
include "unreachable.h"

(오류)
term-ostream.oo.c:2020:37: error: implicit declaration of function 'xrealloc'; 
did you mean 'realloc'? [-Wimplicit-function-declaration]
(수정)
lib/term-ostream.oo.c, lib/term-ostream.c 수정
/*stream->buffer = (char *) xrealloc (stream->buffer, new_allocated);*/
stream->buffer = (char *) realloc (stream->buffer, new_allocated);
/*stream->attrbuffer =
	(attributes_t *)
	xrealloc (stream->attrbuffer,
	new_allocated * sizeof (attributes_t));*/
stream->attrbuffer =
	(attributes_t *)
	realloc (stream->attrbuffer,
	new_allocated * sizeof (attributes_t));

(오류)
term-ostream.oo.c: In function 'term_ostream__flush':
term-ostream.oo.c:2067:11: error: implicit declaration of function 'fsync' [-Wimplicit-function-declaration]
(수정)
term-ostream.oo.c, term-ostream.c 수정
#include <unistd.h>

gnulib 모듈 설정(/c/gnulib/gnulib-tool --help : 옵션출력)
gnulib 모듈을 현재 패키지에 가져와서 필요한 파일을 추가하고, 
관련 설정을 configure.ac와 Makefile.am에 반영
/c/gnulib/gnulib-tool --import fsync
gnulib 모듈을 이미 가져온 후, 새 모듈을 추가하거나 기존 모듈을 업데이트할 때 사용
gnulib 설정을 유지한 채로 새로운 모듈을 추가
/c/gnulib/gnulib-tool --add-import fsync

lib/fsync.c 만 존재함
lib/fsync.h 생성
// fsync.h
#ifndef FSYNC_H
#define FSYNC_H

int fsync(int fd);

#endif // FSYNC_H

configure.ac 수정
# Make sure to include the gnulib modules
gl_MODULES([fsync]) /*추가*/

Makefile.am 수정
# Add gnulib modules to the sources
noinst_HEADERS = $(top_srcdir)/lib/fsync.h

# Add gnulib modules to the sources
noinst_SOURCES = fsync.c

# Makefile.am에 새로운 타겟 추가
print-noinst-headers-sources:
@echo ">>>>>>>>>>>>>>>>>>>>>>$(noinst_HEADERS)"
@echo ">>>>>>>>>>>>>>>>>>>>>>$(noinst_SOURCES)"
# autoreconf -ivf && ./configure
# make print-noinst-headers-sources
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# make print-noinst-headers-sources
>>>>>>>>>>>>>>>>>>>>>>./lib/fsync.h
>>>>>>>>>>>>>>>>>>>>>>./lib/fsync.c

lib/unistd.h 수정
gnulib 모듈을 사용하여 fsync를 포터블하게 처리하는 방법
//#if 1
/* Synchronize changes, including metadata, to a file.
   Return 0 if successful, otherwise -1 and errno set.
   See POSIX:2008 specification
   <https://pubs.opengroup.org/onlinepubs/9699919799/functions/fsync.html>.  */
/*# if !0
_GL_FUNCDECL_SYS (fsync, int, (int fd));
# endif
_GL_CXXALIAS_SYS (fsync, int, (int fd));
_GL_CXXALIASWARN (fsync);
#elif defined GNULIB_POSIXCHECK
# undef fsync
# if HAVE_RAW_DECL_FSYNC
_GL_WARN_ON_USE (fsync, "fsync is unportable - "
                 "use gnulib module fsync for portability");
# endif
#endif*/
#if defined GNULIB_POSIXCHECK
/* GNULIB_POSIXCHECK가 정의된 경우 */
/* fsync가 제공되지 않거나 포터블하지 않을 수 있습니다. 
   gnulib 모듈을 사용하여 fsync를 포터블하게 처리하세요. */
# undef fsync
# if HAVE_RAW_DECL_FSYNC
_GL_WARN_ON_USE (fsync, "fsync is unportable - "
                 "use gnulib module fsync for portability");
# endif
#else
/* GNULIB_POSIXCHECK가 정의되지 않은 경우 */
/* Synchronize changes, including metadata, to a file.
   Return 0 if successful, otherwise -1 and errno set.
   See POSIX:2008 specification
   <https://pubs.opengroup.org/onlinepubs/9699919799/functions/fsync.html>.  */
_GL_FUNCDECL_SYS (fsync, int, (int fd));
_GL_CXXALIAS_SYS (fsync, int, (int fd));
_GL_CXXALIASWARN (fsync);
#endif

lib/unistd.in.h 수정
gnulib 모듈을 사용하여 fsync를 포터블하게 처리하는 방법
//#if @GNULIB_FSYNC@
/* Synchronize changes, including metadata, to a file.
   Return 0 if successful, otherwise -1 and errno set.
   See POSIX:2008 specification
   <https://pubs.opengroup.org/onlinepubs/9699919799/functions/fsync.html>.  */
/*# if !@HAVE_FSYNC@
_GL_FUNCDECL_SYS (fsync, int, (int fd));
# endif
_GL_CXXALIAS_SYS (fsync, int, (int fd));
_GL_CXXALIASWARN (fsync);
#elif defined GNULIB_POSIXCHECK
# undef fsync
# if HAVE_RAW_DECL_FSYNC
_GL_WARN_ON_USE (fsync, "fsync is unportable - "
                 "use gnulib module fsync for portability");
# endif
#endif*/
#if @GNULIB_FSYNC@
/* Synchronize changes, including metadata, to a file.
   Return 0 if successful, otherwise -1 and errno set.
   See POSIX:2008 specification
   <https://pubs.opengroup.org/onlinepubs/9699919799/functions/fsync.html>.  */
# if !@HAVE_FSYNC@
_GL_FUNCDECL_SYS (fsync, int, (int fd));
# endif
_GL_CXXALIAS_SYS (fsync, int, (int fd));
_GL_CXXALIASWARN (fsync);
#elif defined GNULIB_POSIXCHECK
/* GNULIB_POSIXCHECK가 정의된 경우 */
/* fsync가 제공되지 않거나 포터블하지 않을 수 있습니다. 
   gnulib 모듈을 사용하여 fsync를 포터블하게 처리하세요. */
# undef fsync
# if HAVE_RAW_DECL_FSYNC
_GL_WARN_ON_USE (fsync, "fsync is unportable - "
                 "use gnulib module fsync for portability");
# endif
#endif

(오류)
term-ostream.oo.c: In function 'term_ostream__set_hyperlink':
term-ostream.oo.c:2209:32: error: implicit declaration of function 'XMALLOC' [-Wimplicit-function-declaration]

(수정)
메모리 할당을 위한 함수
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle/lib
grep -rn "XMALLOC" .
./xalloc.h:115:# define XMALLOC(t) ((t *) xmalloc (sizeof (t)))

Makefile.am 수정
# Add gnulib modules to the sources
# $(top_srcdir) : .
noinst_HEADERS = $(top_srcdir)/lib/fsync.h $(top_srcdir)/lib/xalloc.h

configure.ac 수정
AC_DEFINE([GNULIB_XALLOC], [1], [Define for gnulib xalloc])

xalloc.h 확인
xmalloc 함수를 사용하여 주어진 타입 t의 크기만큼 메모리를 할당하고, 그 포인터를 반환
# define XMALLOC(t) ((t *) xmalloc (sizeof (t))) 
hyperlink_t *hyperlink = XMALLOC (hyperlink_t);

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# autoreconf -ivf && ./configure && gcc -I /c/libidn2/gettext-0.22.5/libtextstyle -std=gnu99 -D_GNU_SOURCE -c lib/term-ostream.c -o lib/term-ostream.o
성공!

# make
../lib/stdio.h:1979:19: error: expected ',' or ';' before '(' token
 1979 |                   _GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD (3, 4)
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdio.h:2116:19: error: expected ',' or ';' before '(' token
 2116 |                   _GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD (2, 3)
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdio.h:2136:1: error: 'format' attribute argument 3 value '4' does not refer to a variable argument list
 2136 | _GL_FUNCDECL_SYS (vasprintf, int,
      | ^~~~~~~~~~~~~~~~
../lib/stdio.h:2138:19: error: expected ',' or ';' before '(' token
 2138 |                   _GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD (2, 0)
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/stdio.h:2312:1: error: 'format' attribute argument 3 value '4' does not refer to a variable argument list
 2312 | _GL_FUNCDECL_RPL (vsnprintf, int,
      | ^~~~~~~~~~~~~~~~
../lib/stdio.h:2315:19: error: expected ',' or ';' before '(' token
 2315 |                   _GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD (3, 0)
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../lib/stdio.h:1,
                 from hello.c:23:
../config.h:328:9: warning: "_GL_ATTRIBUTE_DEALLOC_FREE" redefined
  328 | #define _GL_ATTRIBUTE_DEALLOC_FREE /**/
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/msys64/mingw64/include/io.h:10,
                 from ../lib/textstyle.h:688:
../lib/string.h:699:11: note: this is the location of the previous definition
  699 | #  define _GL_ATTRIBUTE_DEALLOC_FREE _GL_ATTRIBUTE_DEALLOC (rpl_free, 1)
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~
make[2]: *** [Makefile:626: hello.o] 오류 1
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/adhoc-tests' 나감
make[1]: *** [Makefile:941: all-recursive] 오류 1
make[1]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make: *** [Makefile:807: all] 오류 2
(수정)
configure.ac 수정
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD_1_2], [__attribute__((format(printf, 1, 2)))], [Define to use printf format attribute with parameters (1, 2)])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD_2_0], [__attribute__((format(printf, 2, 0)))], [Define to use printf format attribute with parameters (2, 0)])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD_2_3], [__attribute__((format(printf, 2, 3)))], [Define to use printf format attribute with parameters (2, 3)])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD_3_0], [__attribute__((format(printf, 3, 4)))], [Define to use printf format attribute with parameters (3, 0)])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD_3_4], [__attribute__((format(printf, 3, 4)))], [Define to use printf format attribute with parameters (3, 4)])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_FORMAT_PRINTF_SYSTEM_2_3], [__attribute__((format(printf, 2, 3)))], [Define to use printf format attribute with parameters (2, 3)])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_FORMAT_PRINTF_SYSTEM_1_0], [__attribute__((format(printf, 1, 0)))], [Define to use printf format attribute with parameters (1, 0)])
lib/stdio.h, stdio.in.h 수정
모두 변경
...
_GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD_3_4 /*_GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD (3, 4)*/
...

(오류)
../lib/stdio.h:2312:1: error: 'format' attribute argument 3 value '4' does not refer to a variable argument list
 2312 | _GL_FUNCDECL_RPL (vsnprintf, int,
      | ^~~~~~~~~~~~~~~~
In file included from ../lib/stdio.h:1,
                 from hello.c:23:
../config.h:328:9: warning: "_GL_ATTRIBUTE_DEALLOC_FREE" redefined
  328 | #define _GL_ATTRIBUTE_DEALLOC_FREE /**/
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/msys64/mingw64/include/io.h:10,
                 from ../lib/textstyle.h:688:
../lib/string.h:699:11: note: this is the location of the previous definition
  699 | #  define _GL_ATTRIBUTE_DEALLOC_FREE _GL_ATTRIBUTE_DEALLOC (rpl_free, 1)
(수정)
configure.ac 수정
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD_3_0], [__attribute__((format(printf, 3, 4)))], [Define to use printf format attribute with parameters (3, 0)])
-> AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD_3_0], [__attribute__((format(printf, 3, 0)))], [Define to use printf format attribute with parameters (3, 0)])

(오류)
configure.ac:68: error: possibly undefined macro: AC_CHECK_DEFINE
      If this token and others are legitimate, please use m4_pattern_allow.
      See the Autoconf documentation.
configure.ac:70: error: possibly undefined macro: AC_DEFINE
autoreconf: error: /mingw64/bin/autoconf failed with exit status: 1

(수정)
config.h.in 수정
/* Define to enable dealloc free attributes if not already defined. */
#ifndef _GL_ATTRIBUTE_DEALLOC_FREE /*추가 lib/string.h 중복선언*/
#define _GL_ATTRIBUTE_DEALLOC_FREE /**/
#endif

(오류)
lib/gl_list.h:651:1: warning: 'nodiscard' attribute directive ignored [-Wattributes]
  651 | {
      | ^
(수정)
configure.ac 수정
# Check for C++ compiler
AC_PROG_CXX

# Set C++ standard to C++17
CXXFLAGS="$CXXFLAGS -std=c++17"

(오류)
...
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: 
lib/.libs/color.o:color.c:(.text+0x291): undefined reference to `ostream_write_str'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: 
lib/.libs/color.o:color.c:(.text+0x328): undefined reference to `ostream_write_mem'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe:
lib/.libs/color.o:color.c:(.text+0x3bd): undefined reference to `ostream_write_mem'
...
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'define ostream_write_str' ./
./gnulib-local/lib/ostream.oo.h:87:#define ostream_write_str ostream_write_str_inline
./lib/ostream.h:170:#define ostream_write_str ostream_write_str_inline
./lib/ostream.oo.h:87:#define ostream_write_str ostream_write_str_inline
color.o 파일에서 참조된 ostream_write_str 함수의 정의를 찾을 수 없다
링크 중인 오브젝트 파일이나 라이브러리에 해당 함수의 정의가 없을 때 발생
ostream_write_str가 #define 지시어로 ostream_write_str_inline로 정의되어 있는 것을 볼 수 있다.
ostream_write_str는 실제로는 ostream_write_str_inline라는 이름의 인라인 함수로 정의되어 있을 가능성이 있다.
컴파일러에 -fno-inline 또는 관련 옵션을 추가하여 인라인 함수의 실제 구현이 생성되도록 할 수 있다.
configure.ac 수정
if test "$host_os" = "mingw32"; then
    AM_CONDITIONAL([WOE32DLL], true)
    AM_CONDITIONAL([WOE32], true)
    echo "WOE32DLL and WOE32 are enabled."
    LDFLAGS="$LDFLAGS -no-undefined -export-dynamic"
else
    AM_CONDITIONAL([WOE32DLL], false)
    AM_CONDITIONAL([WOE32], false)
    echo "WOE32DLL and WOE32 are disabled."
    LDFLAGS="$LDFLAGS -no-undefined"
fi

# 공통적으로 추가되는 LDFLAGS 설정
LDFLAGS="$LDFLAGS -L./lib -lterm_ostream"
AC_SUBST(LDFLAGS)

# CFLAGS 설정 추가
CFLAGS="$CFLAGS -fno-inline"
AC_SUBST(CFLAGS)

(오류)
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: 
cannot find -lterm_ostream: No such file or directory

(수정)
configure.ac 수정
LDFLAGS="$LDFLAGS -L/c/libidn2/gettext-0.22.5/libtextstyle/lib -lterm_ostream"
=> LDFLAGS="$LDFLAGS -L/c/libidn2/gettext-0.22.5/libtextstyle/lib"

(오류)
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: 
lib/.libs/color.o:color.c:(.text+0x1cb): undefined reference to `term_ostream_create'
(수정)
lib/color.h
#include "term-ostream.h" /*추가*/

C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe:
lib/.libs/color.o:color.c:(.text+0x1cb): undefined reference to `term_ostream_create'

libterm_ostream.a 또는 libterm_ostream.so 파일이 없으면, term_ostream 라이브러리가 제대로 설치되지 않았거나, 라이브러리 파일이 빌드되지 않았다는 것을 의미
term_ostream 라이브러리의 소스 코드가 제대로 다운로드되었는지 확인

정의찾기
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn --include='*.h' 'define term_ostream' ./

term-ostream.h 헤더 파일에서 term_ostream_create와 같은 함수가 매크로로 정의되어 있는 것을 확인
함수정의
./lib/term-ostream.c:2323:
term_ostream_create (int fd, const char *filename, ttyctl_t tty_control)
함수선언
./lib/term-ostream.h:370:       
term_ostream_create (int fd, const char *filename, ttyctl_t tty_control);
확인
lib/term-ostream.h
extern term_ostream_t
       term_ostream_create (int fd, const char *filename, ttyctl_t tty_control);

lib/term-ostream.c
term_ostream_t
term_ostream_create (int fd, const char *filename, ttyctl_t tty_control)
{
...
}
빌드 시스템 점검
Makefile.am
libtextstyle_la_SOURCES = \
	lib/color.c \
	lib/gl_array_list.c \
	lib/term-ostream.c

configure.ac
AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([lib/Makefile])

(오류)
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: 
lib/.libs/color.o:color.c:(.text+0x291): undefined reference to `ostream_write_str'

(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'define ostream_write_str' .
./gnulib-local/lib/ostream.oo.h:87:#define ostream_write_str ostream_write_str_inline
./lib/ostream.h:170:#define ostream_write_str ostream_write_str_inline
./lib/ostream.oo.h:87:#define ostream_write_str ostream_write_str_inline
lib/color.h 수정
#include "ostream.h" /*추가*/
Makefile.am 수정
libtextstyle_la_SOURCES = \
	lib/color.c \
	lib/gl_array_list.c \
	lib/term-ostream.c \
        lib/ostream.c
(오류)
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: 
lib/.libs/color.o:color.c:(.text+0x1670): undefined reference to `xconcatenated_filename'
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'xconcatenated_filename' .
Binary file ./adhoc-tests/.libs/hello.exe matches
Binary file ./hello.exe matches
Binary file ./lib/.libs/color.o matches
./lib/color.c:402:            xconcatenated_filename (stylesdir_after_install, file_name, NULL);
./lib/color.c:443:            xconcatenated_filename (stylesdir, default_style_file,
Binary file ./lib/color.o matches
>> ./lib/concat-filename.h:41:extern char *xconcatenated_filename (const char *directory,
./lib/concat-filename.h~:47:extern char *xconcatenated_filename (const char *directory,
>> ./lib/xconcat-filename.c:32:xconcatenated_filename (const char *directory, const char *filename,
Makefile.am 수정
libtextstyle_la_SOURCES = \
	lib/color.c \
	lib/gl_array_list.c \
	lib/term-ostream.c \
	lib/ostream.c \
	lib/concat-filename.h
lib/color.h 수정
#include "concat-filename.h" /*추가*/
(오류) undefined error
color.c xconcatenated_filename
color.c xstrdup
gl_array_list.c xsum
term-ostream.c error
term-ostream.c full_write
term-ostream.c tparm
term-ostream.c tputs
term-ostream.c deactivate_term_non_default_mode
term-ostream.c activate_term_non_default_mode
term-ostream.c xmax
term-ostream.c fsync
term-ostream.c deactivate_term_style_controller

(수정)
grep -rnE --include='*.h' \
"xsum|error|full_write|tparm|tputs|\
deactivate_term_non_default_mode|\
activate_term_non_default_mode|\
xmax|fsync|deactivate_term_style_controller" .

# grep -rnE --include='*.h' "xsum" .
./lib/xsize.h:58:      size_t size = xsum (header_size, xtimes (n, element_size));
./lib/xsize.h:68:xsum (size_t size1, size_t size2)
./lib/xsize.h:76:xsum3 (size_t size1, size_t size2, size_t size3)
./lib/xsize.h:78:  return xsum (xsum (size1, size2), size3);
./lib/xsize.h:83:xsum4 (size_t size1, size_t size2, size_t size3, size_t size4)
./lib/xsize.h:85:  return xsum (xsum (xsum (size1, size2), size3), size4);

lib/gl_array_list.c 수정
#include "xsize.h" /*추가*/

Makefile.am 수정
libtextstyle_la_SOURCES = \
	lib/color.c \
	lib/gl_array_list.c \
	lib/term-ostream.c \
	lib/ostream.c \
	lib/concat-filename.c \
    	lib/xsize.c

lib/term-ostream.c 수정
#include "error.h" /*추가*/

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rnE --include='*.h' "full_write" .
./lib/full-write.h:30:extern size_t full_write (int fd, const void *buf, size_t count);

lib/term-ostream.c 수정
#include "full-write.h" /*추가*/

Makefile.am 수정
libtextstyle_la_SOURCES = \
	lib/color.c \
	lib/gl_array_list.c \
	lib/term-ostream.c \
	lib/ostream.c \
	lib/concat-filename.c \
    	lib/xsize.c \
	lib/error.c \
	lib/full-write.c

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rnE --include='*.h' "tparm" .
./lib/terminfo.h:95:extern char * tparm (const char *str, ...);

lib/term-ostream.c 수정
#include "terminfo.h" /*추가*/

Makefile.am 수정
libtextstyle_la_SOURCES = \
	lib/color.c \
	lib/gl_array_list.c \
	lib/term-ostream.c \
	lib/ostream.c \
	lib/concat-filename.c \
    	lib/xsize.c \
	lib/error.c \
	lib/full-write.c \
	lib/terminfo.c

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rnE --include='*.h' "tputs" .
./lib/terminfo.h:112:extern void tputs (const char *cp, int affcnt, int (*outcharfun) (int));

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rnE --include='*.h' "deactivate_term_non_default_mode" .
./lib/term-style-control.h:159:   deactivate_term_non_default_mode.  */
./lib/term-style-control.h:171:       deactivate_term_non_default_mode (const struct term_style_controller *controller,

lib/term-ostream.c 수정
#include "term-style-control.h" /*추가*/

Makefile.am 수정
libtextstyle_la_SOURCES = \
	lib/color.c \
	lib/gl_array_list.c \
	lib/term-ostream.c \
	lib/ostream.c \
	lib/concat-filename.c \
    	lib/xsize.c \
	lib/error.c \
	lib/full-write.c \
	lib/terminfo.c \
	lib/term-style-control.h

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rnE --include='*.h' "activate_term_non_default_mode" .
./lib/term-style-control.h:61:  bool non_default_active;           /* True if activate_term_non_default_mode()
./lib/term-style-control.h:159:   deactivate_term_non_default_mode.  */
./lib/term-style-control.h:161:       activate_term_non_default_mode (const struct term_style_controller *controller,
./lib/term-style-control.h:171:       deactivate_term_non_default_mode (const struct term_style_controller *controller,

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rnE --include='*.h' "xmax" .
./lib/xsize.h:90:xmax (size_t size1, size_t size2)

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rnE --include='*.h' "fsync" .
./config.h:18:/* Define to 1 when the gnulib module fsync should be tested. */
./config.h:34:/* Define to 1 if you have the 'fsync' function. */
./lib/fsync.h:1:// fsync.h
./lib/fsync.h:5:int fsync(int fd);
./lib/unistd.h:1606:   <https://pubs.opengroup.org/onlinepubs/9699919799/functions/fsync.html>.  */
./lib/unistd.h:1608:_GL_FUNCDECL_SYS (fsync, int, (int fd));
./lib/unistd.h:1610:_GL_CXXALIAS_SYS (fsync, int, (int fd));
./lib/unistd.h:1611:_GL_CXXALIASWARN (fsync);
./lib/unistd.h:1613:# undef fsync
./lib/unistd.h:1615:_GL_WARN_ON_USE (fsync, "fsync is unportable - "
./lib/unistd.h:1616:                 "use gnulib module fsync for portability");
./lib/unistd.in.h:1072:   <https://pubs.opengroup.org/onlinepubs/9699919799/functions/fsync.html>.  */
./lib/unistd.in.h:1074:_GL_FUNCDECL_SYS (fsync, int, (int fd));
./lib/unistd.in.h:1076:_GL_CXXALIAS_SYS (fsync, int, (int fd));
./lib/unistd.in.h:1077:_GL_CXXALIASWARN (fsync);
./lib/unistd.in.h:1079:# undef fsync
./lib/unistd.in.h:1081:_GL_WARN_ON_USE (fsync, "fsync is unportable - "
./lib/unistd.in.h:1082:                 "use gnulib module fsync for portability");
./동적/config.h:156:/* Define to 1 when the gnulib module fsync should be tested. */
./동적/config.h:460:/* Define to 1 if you have the 'fsync' function. */

lib/term-ostream.c 수정
#include "fsync.h" /*추가*/

Makefile.am 수정
libtextstyle_la_SOURCES = \
	lib/color.c \
	lib/gl_array_list.c \
	lib/term-ostream.c \
	lib/ostream.c \
	lib/concat-filename.c \
    	lib/xsize.c \
	lib/error.c \
	lib/full-write.c \
	lib/terminfo.c \
	lib/term-style-control.c \
	lib/fsync.c

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rnE --include='*.h' "deactivate_term_style_controller" .
./lib/term-style-control.h:144:   deactivate_term_style_controller.
./lib/term-style-control.h:179:       deactivate_term_style_controller (const struct term_style_controller *controller,

# autoreconf -ivf && ./configure && make
lib/concat-filename.c: In function 'concatenated_filename':
lib/concat-filename.c:69:7: error: implicit declaration of function 'stpcpy' [-Wimplicit-function-declaration]
   69 |   p = stpcpy (p, filename);
      |       ^~~~~~
lib/concat-filename.c:69:7: warning: incompatible implicit declaration of built-in function 'stpcpy' [-Wbuiltin-declaration-mismatch]
make[2]: *** [Makefile:945: lib/concat-filename.lo] 오류 1
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make[1]: *** [Makefile:964: all-recursive] 오류 1
make[1]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make: *** [Makefile:823: all] 오류 2

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rnE --include='*.h' "strcpy" .
./lib/unistr.h:541:/* Similar to strcpy(), wcscpy().  */
./lib/unistr.h:543:       u8_strcpy (uint8_t *_UC_RESTRICT dest, const uint8_t *src);
./lib/unistr.h:545:       u16_strcpy (uint16_t *_UC_RESTRICT dest, const uint16_t *src);
./lib/unistr.h:547:       u32_strcpy (uint32_t *_UC_RESTRICT dest, const uint32_t *src);
./lib/unistr.in.h:540:/* Similar to strcpy(), wcscpy().  */
./lib/unistr.in.h:542:       u8_strcpy (uint8_t *_UC_RESTRICT dest, const uint8_t *src);
./lib/unistr.in.h:544:       u16_strcpy (uint16_t *_UC_RESTRICT dest, const uint16_t *src);
./lib/unistr.in.h:546:       u32_strcpy (uint32_t *_UC_RESTRICT dest, const uint32_t *src);

lib/concat-filename.h 수정
#include "string.h" /*추가*/

(오류)
lib/error.c:119:1: error: expected identifier or '(' before string constant
  119 | "this configure-time declaration test was not run"
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(수정)
lib/error.c
# if !(GNULIB_STRERROR_R_POSIX || HAVE_DECL_STRERROR_R)
#  ifndef HAVE_DECL_STRERROR_R
"this configure-time declaration test was not run"
#  endif
=> #    error "this configure-time declaration test was not run"

(오류)
lib/error.c:218:51: error: expected declaration specifiers or '...' before numeric constant
  218 | static void _GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD (3, 0) _GL_ARG_NONNULL ((3))
      |                                                   ^
(수정)
lib/error.c
/*static void _GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD (3, 0) _GL_ARG_NONNULL ((3))*/
static void _GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD_3_0 _GL_ARG_NONNULL ((3))

(오류)
lib/error.c:218:54: error: expected declaration specifiers or '...' before numeric constant
  218 | static void _GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD (3, 0) _GL_ARG_NONNULL ((3))
      |                                                      ^
(수정)
/*# define _GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD (a, b) 삭제*/
static void _GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD (3,0) _GL_ARG_NONNULL ((3))
=> static void _GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD_3_0 _GL_ARG_NONNULL ((3))

(오류)
lib/error.c: In function 'verror':
lib/error.c:128:23: error: implicit declaration of function 'getprogname' [-Wimplicit-function-declaration]
  128 | # define program_name getprogname ()
      |                       ^~~~~~~~~~~
(수정)
lib/error.c
#include <stdlib.h> 확인
#   undef getprogname
#   define getprogname rpl_getprogname
getprogname 함수가 실제로 rpl_getprogname으로 대체된다는 것을 의미
rpl_getprogname은 GNULIB의 대체 구현으로, GNULIB 모듈이 필요
getprogname을 시스템 함수로 체크하고, 필요한 경우 GNULIB을 포함
configure.ac 수정
AC_CONFIG_RPATH([/c/gnulib/lib]) #추가
# Check for the presence of getprogname function # 추가
AC_CHECK_FUNCS([getprogname])
# If not found, use GNULIB for getprogname
if test "$ac_cv_func_getprogname" = no; then
  AC_MSG_WARN([getprogname not found, using GNULIB])
  # Add GNULIB to the project
  # You should already have GNULIB initialization in your project
  GNULIB_MODULES([getprogname])
fi
AC_DEFINE([getprogname], [1], [Define for gnulib getprogname])는 직접적인 정의를 추가할 수 있지만, 
보통 AC_CHECK_FUNCS와 GNULIB 모듈을 사용하는 것이 더 일반적

(오류)
lib/error.c:273:32: note: in expansion of macro 'program_name'
  273 |       fprintf (stderr, "%s: ", program_name);
      |                                ^~~~~~~~~~~~
(수정)

(오류)
lib/error.c:29:9: error: implicit declaration of function 'error_tail' [-Wimplicit-function-declaration]
   29 |         error_tail (status, err, fmt, args)
      |         ^~~~~~~~~~

(수정)
lib/error.c:277:3: note: in expansion of macro 'error_tail'
  277 |   error_tail (status, errnum, message, args, mode_flags);
      |   ^~~~~~~~~~

(오류)
configure.ac:25: error: possibly undefined macro: AC_CONFIG_RPATH
      If this token and others are legitimate, please use m4_pattern_allow.
      See the Autoconf documentation.
autoreconf: error: /mingw64/bin/autoconf failed with exit status: 1
(수정)
configure.ac
AC_CHECK_HEADERS([stdlib.h]) #추가

# Configure RPATH for libraries
AC_CONFIG_RPATH([/c/gnulib/lib]) #추가

# Configure libraries (optional, if needed)
AC_CONFIG_LIBS #추가

m4_pattern_allow([AC_CONFIG_RPATH]) #추가
m4_pattern_allow([AC_CONFIG_LIBS]) #추가

(오류)
./configure: line 5151: syntax error near unexpected token `/c/gnulib/lib'
./configure: line 5151: `AC_CONFIG_RPATH(/c/gnulib/lib) #추가'

(수정)
AC_CONFIG_RPATH"([./lib])" # 중요!!

(오류)
./configure: line 5151: AC_CONFIG_RPATH(/c/libidn2/gettext-0.22.5/libtextstyle/lib): No such file or directory
./configure: line 5160: (getprogname): command not found
./configure: line 5167: syntax error near unexpected token `getprogname'
./configure: line 5167: `  GNULIB_MODULES(getprogname)'

(수정)
configure.ac 수정
#AC_CONFIG_RPATH"([/c/libidn2/gettext-0.22.5/libtextstyle/lib])" # 추가

# 공통적으로 추가되는 LDFLAGS 설정
LDFLAGS="$LDFLAGS -L./lib"
# Set library path for linking and runtime
LDFLAGS="$LDFLAGS -L/c/libidn2/gettext-0.22.5/libtextstyle/lib -Wl,-rpath,/c/libidn2/gettext-0.22.5/libtextstyle/lib"
AC_SUBST(LDFLAGS)
AC_SUBST([CPPFLAGS], ["-I/c/libidn2/gettext-0.22.5/libtextstyle/lib"]) #헤더파일

GNULIB_MODULES"([getprogname])"

(오류)
./configure: line 5154: AC_CONFIG_LIBS: command not found
./configure: line 5160: (getprogname): command not found

(수정)
configure.ac 수정
두가지 방법
첫쨰. 무조건 m4_define([gl_GETPROGNAME],[1]) #추가
두번쨰. 선언되어있는지 확인후 처리 (이걸로함)
# Check for the presence of getprogname function # 추가
AC_CHECK_FUNCS"([getprogname])"
# If not found, use GNULIB for getprogname
if test "$ac_cv_func_getprogname" = no; then
  AC_MSG_WARN([getprogname not found, using GNULIB])
  GNULIB_MODULES([getprogname])
fi

m4_pattern_allow([AC_CHECK_FUNCS])
m4_pattern_allow([GNULIB_MODULES])

(오류)
./configure: line 5160: (getprogname): command not found
./configure: line 5165: syntax error near unexpected token `getprogname'
./configure: line 5165: `  GNULIB_MODULES(getprogname)'

(수정)
configure.ac 수정
AC_SUBST([CPPFLAGS], ["-I/mingw64/include"])
AC_SUBST([LDFLAGS], ["$LDFLAGS -L./lib -L/mingw64/lib -L/usr/lib -Wl,-rpath,/mingw64/bin"])

(오류)
getprogname: command not found
C++ preprocessor "/lib/cpp" fails sanity check
(수정)
configure.ac 수정
AC_SUBST([LDFLAGS], [
  $LDFLAGS \
  -L/c/libidn2/gettext-0.22.5/libtextstyle/lib \
  -L/mingw64/lib \
  -L/usr/lib \
  -Wl,-rpath,/mingw64/bin
])
AC_SUBST([CPPFLAGS], ["-I/mingw64/include"]) #헤더파일

(오류)
lib/error.c:119:6: error: #error "this configure-time declaration test was not run"
  119 | #    error "this configure-time declaration test was not run" /*?      ^~~~~
(수정)
configure.ac 수정
AC_CHECK_HEADERS([stdio.h stdlib.h])
AC_CHECK_FUNCS"[printf malloc]"

(오류)
static void _GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD_3_0 _GL_ARG_NONNULL ((3))
lib/error.c:218:71: error: expected declaration specifiers or '...' before '(' token
  218 | static void _GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD_3_0 _GL_ARG_NONNULL ((3))
      |                                                                       ^
(수정)
configure.ac수정
AC_CHECK_FUNCS"[getprogname]"
AC_CHECK_FUNCS"[printf malloc]"
# If not found, use GNULIB for getprogname
if test "$ac_cv_func_getprogname" = no; then
  AC_MSG_WARN([getprogname not found, using GNULIB])
  GNULIB_MODULES"[getprogname]"
fi

GNULIB_MODULES"[argp, getprogname]"
GNULIB_MODULES"[printf malloc]"

(오류)
lib/error.c:128:23: error: implicit declaration of function 'getprogname' [-Wimplicit-function-declaration]
  128 | # define program_name getprogname ()
      |                       ^~~~~~~~~~~
(수정)
# Check for the presence of getprogname function # 추가
AC_CHECK_FUNCS"[getprogname]"
AC_CHECK_FUNCS"[printf malloc]"
# If not found, use GNULIB for getprogname
if test "$ac_cv_func_getprogname" = no; then
  AC_MSG_WARN([getprogname not found, using GNULIB])
  GNULIB_MODULES"[getprogname]"
fi

GNULIB_MODULES"[argp, getprogname]"
GNULIB_MODULES"[printf malloc]"

(오류)
lib/error.c:218:71: error: expected declaration specifiers or '...' before '(' token
  218 | static void _GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD_3_0 _GL_ARG_NONNULL ((3))
      |                                                                       ^

(수정)
lib/string.h 호출
_GL_ARG_NONNULL ((1))

lib/error.c 호출
_GL_ARG_NONNULL ((3))

configure.ac 수정
AC_DEFINE([_GL_ARG_NONNULL], [__attribute__((nonnull))], [Define for non-null argument checking])

(오류)
./string.h:812:1: error: expected ',' or ';' before '(' token
  812 | _GL_FUNCDECL_RPL (memchr, void *, (void const *__s, int __c, size_t __n)
      | ^~~~~~~~~~~~~~~~
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn '#define _GL_FUNCDECL_RPL' .
...
./lib/string.h:271:#define _GL_FUNCDECL_RPL(func,rettype,parameters,...) \
./lib/string.h:273:#define _GL_FUNCDECL_RPL_1(rpl_func,rettype,parameters,...) \
...
_GL_FUNCDECL_RPL (memchr, void *, (void const *__s, int __c, size_t __n)
                                  _GL_ATTRIBUTE_PURE
                                  _GL_ARG_NONNULL ((1)));

./string.h:812:1: error: expected ',' or ';' before '(' token
  812 | _GL_FUNCDECL_RPL (memchr, void *, (void const *__s, int __c, size_t __n)
      | ^~~~~~~~~~~~~~~~
configure.ac 수정
AC_DEFINE([_GL_EXTERN_C_FUNC], [extern "C"], [Define for C linkage])
AC_DEFINE_UNQUOTED([_GL_ARG_NONNULL_1], [__attribute__((nonnull(1)))], [Define _GL_ARG_NONNULL ((1))])
AC_DEFINE_UNQUOTED([_GL_ARG_NONNULL_1_3], [__attribute__((nonnull(1,3)))], [Define _GL_ARG_NONNULL ((1, 3))])
AC_DEFINE_UNQUOTED([_GL_ARG_NONNULL_1_2], [__attribute__((nonnull(1,2)))], [Define _GL_ARG_NONNULL ((1, 2))])
AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_PURE], [__attribute__((pure))], [Define _GL_ATTRIBUTE_PURE macro for pure function attribute])

(오류)
./unistd.h:1613:1: error: expected identifier or '(' before string constant
 1613 | _GL_FUNCDECL_SYS(fsync, int, (int fd));
      | ^~~~~~~~~~~~~~~~
(수정)
lib/unistd.in.h 수정
#define _GL_FUNCDECL_SYS(func, ret_type, args) \
  extern ret_type func args;
_GL_FUNCDECL_SYS(fsync, int, (int fd));

(오류)
./stdlib.h:813:1: error: expected identifier or '(' before string constant
  813 | _GL_FUNCDECL_RPL (free, void, (void *ptr));
      | ^~~~~~~~~~~~~~~~
./stdlib.h:871:1: error: expected identifier or '(' before string constant
  871 | _GL_FUNCDECL_SYS (aligned_alloc, void *,
      | ^~~~~~~~~~~~~~~~
./stdlib.h:910:1: error: expected identifier or '(' before string constant
  910 | _GL_FUNCDECL_RPL (calloc, void *,
      | ^~~~~~~~~~~~~~~~
./stdlib.h:998:1: error: expected identifier or '(' before string constant
  998 | _GL_FUNCDECL_SYS (canonicalize_file_name, char *,
      | ^~~~~~~~~~~~~~~~
./stdlib.h:1131:1: error: expected identifier or '(' before string constant
 1131 | _GL_FUNCDECL_SYS (getprogname, const char *, (void));
      | ^~~~~~~~~~~~~~~~
./stdlib.h:1217:1: error: expected identifier or '(' before string constant
 1217 | _GL_FUNCDECL_RPL (malloc, void *,
      | ^~~~~~~~~~~~~~~~
./stdlib.h:1980:1: error: expected identifier or '(' before string constant
 1980 | _GL_FUNCDECL_RPL (realloc, void *, (void *ptr, size_t size)
      | ^~~~~~~~~~~~~~~~
./stdlib.h:2037:1: error: expected identifier or '(' before string constant
 2037 | _GL_FUNCDECL_SYS (reallocarray, void *,
      | ^~~~~~~~~~~~~~~~

(수정)
# Define _GL_FUNCDECL_RPL and _GL_FUNCDECL_RPL_1 macros
#AH_BOTTOM([
##define _GL_FUNCDECL_RPL(func, rettype, parameters, ...) _GL_FUNCDECL_RPL_1(rpl_##func, rettype, parameters, __VA_ARGS__)
##define _GL_FUNCDECL_RPL_1(rpl_func, rettype, parameters, ...) _GL_EXTERN_C_FUNC __VA_ARGS__ rettype rpl_func parameters
#])

(오류)
static void _GL_ATTRIBUTE_FORMAT_PRINTF_STANDARD_3_0 _GL_ARG_NONNULL ((3))

(수정)
AC_DEFINE_UNQUOTED([_GL_ARG_NONNULL_3], [__attribute__((nonnull(3)))], [Define _GL_ARG_NONNULL ((3))])

(오류)
lib/error.c:128:23: error: implicit declaration of function 'getprogname' [-Wimplicit-function-declaration]
  128 | # define program_name getprogname ()
      |                       ^~~~~~~~~~~
lib/error.c:273:32: note: in expansion of macro 'program_name'
  273 |       fprintf (stderr, "%s: ", program_name);
      |                                ^~~~~~~~~~~~
getprogname 함수가 암시적으로 선언되어 있어서 발생
# define program_name getprogname ()

lib/error.c 수정
/*추가 window는 지원이안돼서 생성*/
#include <windows.h>
// getprogname() 함수 정의
const char* getprogname() {
    static char program_name[MAX_PATH];
    // const 제거하고 GetModuleFileName을 올바르게 사용
    GetModuleFileName(NULL, program_name, MAX_PATH);
    return program_name;
}

#if _LIBC
      /*__fxprintf (NULL, "%s: ", program_name);*/
	  __fxprintf (NULL, "%s: ", getprogname());
#else
      /*fprintf (stderr, "%s: ", program_name);*/
	  fprintf (stderr, "%s: ", getprogname());
#endif

#if _LIBC
      /*__fxprintf (NULL, "%s:", program_name);*/
	  __fxprintf (NULL, "%s:", getprogname());
#else
      /*fprintf (stderr, "%s:", program_name);*/
	  fprintf (stderr, "%s:", getprogname());
#endif

configure.ac 수정
# Check for the presence of getprogname function
AC_CHECK_FUNCS"([getprogname printf malloc])" #함수의 존재 여부를 검사
GNULIB_MODULES"([argp, getprogname, printf, malloc])"

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# autoreconf -ivf
autoreconf: export WARNINGS=
autoreconf: Entering directory '.'
autoreconf: configure.ac: not using Gettext
autoreconf: running: aclocal --force -I m4 -I gnulib-m4
autoreconf: configure.ac: tracing
autoreconf: running: libtoolize --copy --force
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize: putting macros in 'm4'.
libtoolize: copying file 'm4/libtool.m4'
libtoolize: copying file 'm4/ltoptions.m4'
libtoolize: copying file 'm4/ltsugar.m4'
libtoolize: copying file 'm4/ltversion.m4'
libtoolize: copying file 'm4/lt~obsolete.m4'
libtoolize: Consider adding 'AC_CONFIG_MACRO_DIRS([m4])' to configure.ac,
libtoolize: and rerunning libtoolize and aclocal.
autoreconf: configure.ac: not using Intltool
autoreconf: configure.ac: not using Gtkdoc
autoreconf: running: aclocal --force -I m4 -I gnulib-m4
autoreconf: running: /mingw64/bin/autoconf --force
configure.ac:40: warning: AC_COMPILE_IFELSE was called before AC_USE_SYSTEM_EXTENSIONS
=> AC_COMPILE_IFELSE가 AC_USE_SYSTEM_EXTENSIONS보다 먼저 호출
./lib/autoconf/specific.m4:541: AC_USE_SYSTEM_EXTENSIONS is expanded from...
configure.ac:40: the top level
configure.ac:70: warning: AM_INIT_AUTOMAKE was called before gl_INIT_PACKAGE
=> AM_INIT_AUTOMAKE가 gl_INIT_PACKAGE보다 먼저 호출
m4/init-package-version.m4:92: gl_INIT_PACKAGE is expanded from...
configure.ac:70: the top level
autoreconf: running: /mingw64/bin/autoheader --force
autoreconf: running: automake --add-missing --copy --force-missing
configure.ac:26: installing 'build-aux/missing'
Makefile.am:59: warning: variable 'noinst_SOURCES' is defined but no program or
=> Makefile.am 파일에서 noinst_SOURCES 변수를 정의했지만, 이를 사용하는 프로그램이나 라이브러리가 없음.
=> Makefile.am 파일에서 noinst_SOURCES 변수수정/삭제
Makefile.am:59: library has 'noinst' as canonical name (possible typo)
adhoc-tests/Makefile.am: installing 'build-aux/depcomp'
autoreconf: 'build-aux/install-sh' is updated
autoreconf: 'build-aux/config.sub' is updated
autoreconf: 'build-aux/config.guess' is updated
autoreconf: Leaving directory '.'

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./configure
configure: loading site script /etc/config.site
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a race-free mkdir -p... /usr/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking whether make supports the include directive... yes (GNU style)
checking for gcc... /mingw64/bin/gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.exe
checking for suffix of executables... .exe
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether the compiler supports GNU C... yes
checking whether /mingw64/bin/gcc accepts -g... yes
checking for /mingw64/bin/gcc option to enable C23 features... unsupported
checking for /mingw64/bin/gcc option to enable C11 features... none needed
checking whether the compiler is clang... no
checking for compiler option needed when checking for declarations... none
checking dependency style of /mingw64/bin/gcc... gcc3
checking for stdio.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for strings.h... yes
checking for sys/stat.h... yes
checking for sys/types.h... yes
checking for unistd.h... yes
checking for wchar.h... yes
checking for minix/config.h... no
checking whether it is safe to define __EXTENSIONS__... yes
checking whether _XOPEN_SOURCE should be defined... no
checking for gcc... (cached) /mingw64/bin/gcc
checking whether the compiler supports GNU C... (cached) yes
checking whether /mingw64/bin/gcc accepts -g... (cached) yes
checking for /mingw64/bin/gcc option to enable C23 features... (cached) unsupported
checking for /mingw64/bin/gcc option to enable C11 features... (cached) none needed
checking whether the compiler is clang... (cached) no
checking for compiler option needed when checking for declarations... (cached) none
checking dependency style of /mingw64/bin/gcc... (cached) gcc3
checking for stdio.h... (cached) yes
checking for stdlib.h... (cached) yes
checking for wchar.h... (cached) yes
checking for attributes.h... no
checking for getprogname... no
checking for printf... yes
checking for malloc... yes

./configure: line 6521: GNULIB_INIT: command not found
=> gnulib과 관련된 설정이나 초기화 과정에서 문제가 발생했음을 의미
nayou@kimnayooung MINGW64 /c/gnulib
# git pull
...
 201 files changed, 1726 insertions(+), 373 deletions(-)
 create mode 100644 m4/locale-en.m4
cd /c/libidn2/gettext-0.22.5/libtextstyle
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# cat version.sh
# Version number and release date.
VERSION_NUMBER=0.22.5
RELEASE_DATE=2024-02-21      # in "date +%Y-%m-%d" format
/c/gnulib/build-aux, doc, examples, lib, m4, tests 폴더들을 
/c/libidn2/gettext-0.22.5/libtextstyle/로 복사

checking build system type... x86_64-w64-mingw32
checking host system type... x86_64-w64-mingw32
checking how to run the C preprocessor... /mingw64/bin/cpp
checking for egrep -e... /usr/bin/grep -E
checking for Minix Amsterdam compiler... no
checking for ar... ar
checking for ranlib... ranlib
checking whether ctype.h defines __header_inline... no
checking for fsync... no
checking for _set_invalid_parameter_handler... yes
checking whether the preprocessor supports include_next... yes
checking whether source code line length is unlimited... yes
checking for good max_align_t... yes
checking whether NULL can be used in arbitrary expressions... yes
checking for unreachable... no
checking whether nullptr_t needs <stddef.h>... no
checking for clean definition of __STDC_VERSION_STDDEF_H__... yes
checking for pid_t... yes
checking for mode_t... yes
checking for 64-bit off_t... no
checking for 64-bit st_size... no
checking for off64_t... yes
checking for C/C++ restrict keyword... __restrict__
checking for /mingw64/bin/gcc options needed to detect all undeclared functions... none needed
checking whether execvpe is declared... yes
checking for C compiler option to allow warnings... -Wno-error
checking for ssize_t... yes
checking for wchar_t... yes

./configure: line 9184: -L/c/libidn2/gettext-0.22.5/libtextstyle/lib: No such file or directory
=> configure 스크립트가 특정 라이브러리 경로를 찾지 못한다는 문제
LDFLAGS=
  $LDFLAGS \
  -L/c/libidn2/gettext-0.22.5/libtextstyle/lib \
  -L/mingw64/lib \
  -L/usr/lib \
  -Wl,-rpath,/mingw64/bin

nayou@kimnayooung MINGW64 ~
# ls -l /c/libidn2/gettext-0.22.5/libtextstyle/lib
합계 16367
configure.ac 수정
#export LDFLAGS="-L/c/libidn2/gettext-0.22.5/libtextstyle/lib -L/mingw64/lib -L/usr/lib -Wl,-rpath,/mingw64/bin"

~/.bashrc 수정
export LDFLAGS="-L/c/libidn2/gettext-0.22.5/libtextstyle/lib:-L/mingw64/lib:-L/usr/lib:-Wl,-rpath,/mingw64/bin"
#source ~/.bashrc

gnulib 모듈 확인: configure.ac 파일에서 GNULIB 모듈설정있는지 확인

aclocal 다시 실행
aclocal --force -I m4 -I gnulib-m4

autoconf 및 automake 다시 실행
autoconf --force
automake --add-missing --copy --force-missing

configure 스크립트에서 GNULIB_INIT 제거: 만약 GNULIB을 사용하지 않는다면, 
configure.ac에서 GNULIB_INIT과 관련된 부분을 제거

configure.ac 수정
AC_CONFIG_MACRO_DIRS([m4])

m4_pattern_allow([GNULIB_MODULES])
m4_pattern_allow([gl_CC_GNULIB_WARNINGS])
m4_include([m4/gnulib-common.m4]) #"C:\libidn2\gettext-0.22.5\libtextstyle\m4\gnulib-common.m4"
m4_include([m4/gnulib-tool.m4]) #"C:\libidn2\gettext-0.22.5\libtextstyle\m4\gnulib-tool.m4"
GNULIB_INIT

autoreconf -ivf 명령을 다시 실행하여 configure 스크립트를 업데이트
libtoolize와 aclocal 명령을 다시 실행하여 필요한 파일과 매크로를 업데이트
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# libtoolize --copy --force
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
libtoolize: copying file 'm4/libtool.m4'
libtoolize: copying file 'm4/ltoptions.m4'
libtoolize: copying file 'm4/ltsugar.m4'
libtoolize: copying file 'm4/ltversion.m4'
libtoolize: copying file 'm4/lt~obsolete.m4'

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# aclocal --force -I m4
autoconf 명령을 실행하여 configure 스크립트를 생성
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# autoconf
autoheader 명령을 실행하여 config.h.in 파일을 생성
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# autoheader
automake 명령을 실행하여 Makefile.am 파일을 기반으로 Makefile.in 파일을 생성
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# automake --add-missing
configure.ac:31: installing 'build-aux/missing'
adhoc-tests/Makefile.am: installing 'build-aux/depcomp'
./configure 명령을 실행하여 프로젝트의 빌드 환경을 설정하고, Makefile을 생성
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./configure
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./configure
configure: loading site script /etc/config.site
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a race-free mkdir -p... /usr/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking whether make supports the include directive... yes (GNU style)
checking for gcc... /mingw64/bin/gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.exe
checking for suffix of executables... .exe
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether the compiler supports GNU C... yes
checking whether /mingw64/bin/gcc accepts -g... yes
checking for /mingw64/bin/gcc option to enable C23 features... unsupported
checking for /mingw64/bin/gcc option to enable C11 features... none needed
checking whether the compiler is clang... no
checking for compiler option needed when checking for declarations... none
checking dependency style of /mingw64/bin/gcc... gcc3
checking for stdio.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for strings.h... yes
checking for sys/stat.h... yes
checking for sys/types.h... yes
checking for unistd.h... yes
checking for wchar.h... yes
checking for minix/config.h... no
checking whether it is safe to define __EXTENSIONS__... yes
checking whether _XOPEN_SOURCE should be defined... no
checking for gcc... (cached) /mingw64/bin/gcc
checking whether the compiler supports GNU C... (cached) yes
checking whether /mingw64/bin/gcc accepts -g... (cached) yes
checking for /mingw64/bin/gcc option to enable C23 features... (cached) unsupported
checking for /mingw64/bin/gcc option to enable C11 features... (cached) none needed
checking whether the compiler is clang... (cached) no
checking for compiler option needed when checking for declarations... (cached) none
checking dependency style of /mingw64/bin/gcc... (cached) gcc3
checking for stdio.h... (cached) yes
checking for stdlib.h... (cached) yes
checking for wchar.h... (cached) yes
checking for attributes.h... no
checking for getprogname... no
checking for printf... yes
checking for malloc... yes
./configure: line 6524: GNULIB_INIT: command not found
checking build system type... x86_64-w64-mingw32
checking host system type... x86_64-w64-mingw32
checking how to run the C preprocessor... /mingw64/bin/cpp
checking for egrep -e... /usr/bin/grep -E
checking for Minix Amsterdam compiler... no
checking for ar... ar
checking for ranlib... ranlib
checking whether ctype.h defines __header_inline... no
checking for fsync... no
checking for _set_invalid_parameter_handler... yes
checking whether the preprocessor supports include_next... yes
checking whether source code line length is unlimited... yes
checking for good max_align_t... yes
checking whether NULL can be used in arbitrary expressions... yes
checking for unreachable... no
checking whether nullptr_t needs <stddef.h>... no
checking for clean definition of __STDC_VERSION_STDDEF_H__... yes
checking for pid_t... yes
checking for mode_t... yes
checking for 64-bit off_t... no
checking for 64-bit st_size... no
checking for off64_t... yes
checking for C/C++ restrict keyword... __restrict__
checking for /mingw64/bin/gcc options needed to detect all undeclared functions... none needed
checking whether execvpe is declared... yes
checking for C compiler option to allow warnings... -Wno-error
checking for ssize_t... yes
checking for wchar_t... yes
checking how to run the C preprocessor... /mingw64/bin/cpp
configure.ac: Configured host OS: mingw32
WOE32DLL and WOE32 are enabled.
checking for textstyle/woe32dll.h... yes
checking how to print strings... printf
checking for a sed that does not truncate output... /usr/bin/sed
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for fgrep... /usr/bin/grep -F
checking for ld used by /mingw64/bin/gcc... C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe
checking if the linker (C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... /mingw64/bin/nm -B
checking the name lister (/mingw64/bin/nm -B) interface... BSD nm
checking whether ln -s works... no, using cp -pR
checking the maximum length of command line arguments... 8192
checking how to convert x86_64-w64-mingw32 file names to x86_64-w64-mingw32 format... func_convert_file_msys_to_w32
checking how to convert x86_64-w64-mingw32 file names to toolchain format... func_convert_file_msys_to_w32
checking for C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe option to reload object files... -r
checking for file... file
checking for objdump... objdump
checking how to recognize dependent libraries... file_magic ^x86 archive import|^x86 DLL
checking for dlltool... dlltool
checking how to associate runtime and link libraries... func_cygming_dll_for_implib
checking for archiver @FILE support... @
checking for strip... strip
checking for ranlib... (cached) ranlib
checking command to parse /mingw64/bin/nm -B output from /mingw64/bin/gcc object... failed
checking for sysroot... no
checking for a working dd... /usr/bin/dd
checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
checking for mt... no
checking if : is a manifest tool... no
checking for dlfcn.h... no
checking for as... as
checking for dlltool... (cached) dlltool
checking for objdump... (cached) objdump
checking for objdir... .libs
checking if /mingw64/bin/gcc supports -fno-rtti -fno-exceptions... no
checking for /mingw64/bin/gcc option to produce PIC... -DDLL_EXPORT -DPIC
checking if /mingw64/bin/gcc PIC flag -DDLL_EXPORT -DPIC works... yes
checking if /mingw64/bin/gcc static flag -static works... no
checking if /mingw64/bin/gcc supports -c -o file.o... yes
checking if /mingw64/bin/gcc supports -c -o file.o... (cached) yes
checking whether the /mingw64/bin/gcc linker (C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe) supports shared libraries... yes
checking whether -lc should be explicitly linked in... yes
checking dynamic linker characteristics... Win32 ld.exe
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking for windres... windres
checking for texi2dvi... /usr/bin/texi2dvi
checking for dvips... /c/libidn2/gettext-0.22.5/libtextstyle/build-aux/missing dvips
checking for perl... /usr/bin/perl
checking for gawk... (cached) gawk
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: creating doc/Makefile
config.status: creating lib/Makefile
config.status: creating lib/exported.sh
config.status: creating lib/textstyle/version.h
config.status: creating lib/textstyle/woe32dll.h
config.status: creating tests/Makefile
config.status: creating adhoc-tests/Makefile
config.status: creating config.h
config.status: config.h is unchanged
config.status: executing depfiles commands
config.status: executing libtool commands

<<GNULIB_INIT: command not found>>

nayou@kimnayooung MINGW64 /c
# grep -rn 'GNULIB_INIT' /c/libidn2/gettext-0.22.5/libtextstyle
/c/libidn2/gettext-0.22.5/libtextstyle/autom4te.cache/output.1:6524:GNULIB_INIT
/c/libidn2/gettext-0.22.5/libtextstyle/autom4te.cache/output.2:6524:GNULIB_INIT
/c/libidn2/gettext-0.22.5/libtextstyle/autom4te.cache/output.4:6524:GNULIB_INIT
/c/libidn2/gettext-0.22.5/libtextstyle/configure:6524:GNULIB_INIT
/c/libidn2/gettext-0.22.5/libtextstyle/configure.ac:58:GNULIB_INIT
/c/libidn2/gettext-0.22.5/libtextstyle/configure~:6524:GNULIB_INIT

GNULIB_INIT가 선언된곳이 없어서 재설치

# git clone https://git.savannah.gnu.org/git/gnulib.git
'gnulib'에 복제합니다...
remote: Counting objects: 308943, done.
remote: Compressing objects: 100% (35672/35672), done.
remote: Total 308943 (delta 273897), reused 307914 (delta 273159)
오브젝트를 받는 중: 100% (308943/308943), 80.62 MiB | 1.23 MiB/s, 완료.
델타를 알아내는 중: 100% (273897/273897), 완료.
Updating files: 100% (11852/11852), 완료.
nayou@kimnayooung MINGW64 /c/gnulib
# chmod +x /c/gnulib/gnulib-tool
(m4, lib 폴더를 백업한 후!!!!)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# gnulib-tool --update
checking how to run the C preprocessor... /mingw64/bin/cpp
configure.ac: Configured host OS: mingw32
WOE32DLL and WOE32 are enabled.
checking for textstyle/woe32dll.h... yes
checking how to print strings... printf
checking for a sed that does not truncate output... /usr/bin/sed
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for fgrep... /usr/bin/grep -F
checking for ld used by /mingw64/bin/gcc... C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe
checking if the linker (C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... /mingw64/bin/nm -B
checking the name lister (/mingw64/bin/nm -B) interface... BSD nm
checking whether ln -s works... no, using cp -pR
checking the maximum length of command line arguments... 8192
checking how to convert x86_64-w64-mingw32 file names to x86_64-w64-mingw32 format... func_convert_file_msys_to_w32
checking how to convert x86_64-w64-mingw32 file names to toolchain format... func_convert_file_msys_to_w32
checking for C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe option to reload object files... -r
checking for file... file
checking for objdump... objdump
checking how to recognize dependent libraries... file_magic ^x86 archive import|^x86 DLL
checking for dlltool... dlltool
checking how to associate runtime and link libraries... func_cygming_dll_for_implib
checking for archiver @FILE support... @
checking for strip... strip
checking for ranlib... (cached) ranlib
checking command to parse /mingw64/bin/nm -B output from /mingw64/bin/gcc object... failed
checking for sysroot... no
checking for a working dd... /usr/bin/dd
checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
checking for mt... no
checking if : is a manifest tool... no
checking for dlfcn.h... no
checking for as... as
checking for dlltool... (cached) dlltool
checking for objdump... (cached) objdump
checking for objdir... .libs
checking if /mingw64/bin/gcc supports -fno-rtti -fno-exceptions... no
checking for /mingw64/bin/gcc option to produce PIC... -DDLL_EXPORT -DPIC
checking if /mingw64/bin/gcc PIC flag -DDLL_EXPORT -DPIC works... yes
checking if /mingw64/bin/gcc static flag -static works... no
checking if /mingw64/bin/gcc supports -c -o file.o... yes
checking if /mingw64/bin/gcc supports -c -o file.o... (cached) yes
checking whether the /mingw64/bin/gcc linker (C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe) supports shared libraries... yes
checking whether -lc should be explicitly linked in... yes
checking dynamic linker characteristics... Win32 ld.exe
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking for windres... windres
checking for texi2dvi... /usr/bin/texi2dvi
checking for dvips... /c/libidn2/gettext-0.22.5/libtextstyle/build-aux/missing dvips
checking for perl... /usr/bin/perl
checking for gawk... (cached) gawk
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: creating doc/Makefile
config.status: creating lib/Makefile
config.status: creating lib/exported.sh
config.status: creating lib/textstyle/version.h
config.status: creating lib/textstyle/woe32dll.h
config.status: creating tests/Makefile
config.status: creating adhoc-tests/Makefile
config.status: creating config.h
config.status: executing depfiles commands
config.status: executing libtool commands

#make
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# make VERBOSE=1
make  all-recursive
make[1]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 들어감
Making all in lib
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/lib' 들어감
make  all-recursive
make[3]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/lib' 들어감
make[4]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/lib' 들어감
make[4]: 'all-am'을(를) 위해 할 일이 없습니다.
make[4]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/lib' 나감
make[3]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/lib' 나감
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/lib' 나감
Making all in tests
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/tests' 들어감
## ---------------------------------------------------- ##
## ------------------- Gnulib tests ------------------- ##
## You can ignore compiler warnings in this directory.  ##
## ---------------------------------------------------- ##
make  all-recursive
make[3]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/tests' 들어감
Making all in .
make[4]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/tests' 들어감
make[4]: 'all-am'을(를) 위해 할 일이 없습니다.
make[4]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/tests' 나감
make[3]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/tests' 나감
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/tests' 나감
Making all in adhoc-tests
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/adhoc-tests' 들어감
make[2]: 'all'을(를) 위해 할 일이 없습니다.
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/adhoc-tests' 나감
Making all in doc
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/doc' 들어감
make[2]: 'all'을(를) 위해 할 일이 없습니다.
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle/doc' 나감
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 들어감

>>> make[2]: *** 'lib/terminfo.lo'에서 필요한 'lib/terminfo.c' 타겟을 만들 규칙이 없습니다.  멈춤.
빌드 과정에서 lib/terminfo.lo와 lib/terminfo.c 관련 오류가 발생
소스 파일이 누락되었거나 Makefile 설정에 문제가 있을 때 발생
lib/terminfo.c 파일이 lib 디렉토리에 존재하는지 확인 => 없음
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# cd /c/gnulib
nayou@kimnayooung MINGW64 /c/gnulib
# git pull
이미 업데이트 상태입니다.
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'terminfo.c' .
...
./Makefile.am:38:       lib/terminfo.c \
...
Makefile.am 수정
libtextstyle_la_SOURCES = \
	lib/color.c \
	lib/gl_array_list.c \
	lib/term-ostream.c \
	lib/ostream.c \
	lib/concat-filename.c \
	lib/xsize.c \
	lib/error.c \
	lib/full-write.c \
	#lib/terminfo.c \ #존재하지않음
	lib/term-style-control.c \
	lib/fsync.c

make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감

>>> make[1]: *** [Makefile:965: all-recursive] 오류 1

make[1]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make: *** [Makefile:822: all] 오류 2

(오류)
./lib/concat-filename.h:45:extern char *xconcatenated_filename (const char *directory,
(수정)
# grep -rn 'xconcatenated_filename' .
./lib/concat-filename.h:45:extern char *xconcatenated_filename (const char *directory,
Makefile.am 수정
libtextstyle_la_SOURCES 에 lib/xconcat-filename.c 추가

(오류)
lib/xconcat-filename.c: In function 'xconcatenated_filename':
lib/xconcat-filename.c:39:5: error: implicit declaration of function 'xalloc_die' [-Wimplicit-function-declaration]
   39 |     xalloc_die ();
      |     ^~~~~~~~~~
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'xalloc_die' .
./lib/xalloc.h:54:_Noreturn void xalloc_die (void);

(오류)
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: 
lib/.libs/color.o:color.c:(.text+0x16fa): undefined reference to xstrdup'
(수정)
./lib/progreloc.c:63:# define xstrdup strdup
인클루드할수없어 파일에 정의하기로 함
lib/color.h 수정
#ifndef xstrdup
#define xstrdup strdup
#endif

(오류)
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: 
lib/.libs/color.o:color.c:(.text+0x16fa): undefined reference to `xstrdup'
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'xstrdup' ./lib
./lib/xstrdup.h:7:char *xstrdup(const char *s);
Makefile.am 파일에서 xstrdup.c가 컴파일 대상에 포함되어 있는지 확인
Makefile.am 수정
libtextstyle_la_SOURCES=lib/xstrdup.c 추가
폴더 권한 확인

정리후빌드
Remove configure and Makefile generated files:
make distclean
Clean up previous build files:
make clean
autoreconf -ivf && ./configure && make

(오류)
term-ostream.oo.c:1849:3: error: initialization of 'struct term_style_control_data * (*)(struct term_style_user_data *)' 
from incompatible pointer type 'struct term_style_control_data * (*)(struct any_ostream_representation *)' 
[-Wincompatible-pointer-types]


(수정)
struct term_style_user_data *를 인수로 받는 함수 포인터에
struct any_ostream_representation *를 인수로 받는 함수를 대입하려고 하면서 발생하는 유형 불일치 문제
함수 정의를 수정하여 함수가 struct term_style_user_data *를 인수로 받도록 변경
# grep -rn 'get_control_data' .
./lib/term-ostream.c:1052:get_control_data (term_ostream_t stream)
static struct term_style_control_data *
get_control_data (term_ostream_t stream)
{
  return &stream->control_data;
}
./lib/term-ostream.oo.c:1114:get_control_data (term_ostream_t stream)
static struct term_style_control_data *
get_control_data (term_ostream_t stream)
{
  return &stream->control_data;
}
./lib/term-style-control.h:81:  struct term_style_control_data * (*get_control_data) (struct term_style_user_data *);
struct term_style_control_data * (*get_control_data) (struct term_style_user_data *);
term-style-control.h에 선언된 함수 포인터가 struct term_style_user_data *를 인수로 받는다는 점에서 발생
#include "textstyle.h" /*추가*/
static struct term_style_control_data *
/*./lib/term-ostream.oo.c:1114:get_control_data (term_ostream_t stream)*/
struct term_style_control_data * (*get_control_data) (term_ostream_t);

(오류)
lib/term-style-control.h:45:3: error: redeclaration of enumerator 'TTYCTL_AUTO'
   45 |   TTYCTL_AUTO = 0,  /* Automatic best-possible choice.  */
      |   ^~~~~~~~~~~
(수정)
include한 textstyle.h에 정의되어있어 주석처리

(오류) #include "textstyle.h" 후 재선언 오류발생 모두 주석처리
term-ostream.oo.h:48:3: error: redeclaration of enumerator 'WEIGHT_NORMAL'
In file included from lib/term-style-control.h:19,
                 from term-ostream.oo.h:25:
lib/textstyle.h:236:3: note: previous definition of 'WEIGHT_NORMAL' with type 'enum <anonymous>'
  236 |   WEIGHT_NORMAL = 0,
      |   ^~~~~~~~~~~~~
term-ostream.oo.h:49:3: error: redeclaration of enumerator 'WEIGHT_BOLD'
lib/textstyle.h:237:3: note: previous definition of 'WEIGHT_BOLD' with type 'enum <anonymous>'
  237 |   WEIGHT_BOLD,
      |   ^~~~~~~~~~~
term-ostream.oo.h:50:3: error: redeclaration of enumerator 'WEIGHT_DEFAULT'
lib/textstyle.h:238:3: note: previous definition of 'WEIGHT_DEFAULT' with type 'enum <anonymous>'
  238 |   WEIGHT_DEFAULT = WEIGHT_NORMAL
      |   ^~~~~~~~~~~~~~
term-ostream.oo.h:51:3: error: conflicting types for 'term_weight_t'; have 'enum <anonymous>'
lib/textstyle.h:239:3: note: previous declaration of 'term_weight_t' with type 'term_weight_t'
  239 | } term_weight_t;
      |   ^~~~~~~~~~~~~
term-ostream.oo.h:55:3: error: redeclaration of enumerator 'POSTURE_NORMAL'
lib/textstyle.h:243:3: note: previous definition of 'POSTURE_NORMAL' with type 'enum <anonymous>'
  243 |   POSTURE_NORMAL = 0,
      |   ^~~~~~~~~~~~~~
term-ostream.oo.h:56:3: error: redeclaration of enumerator 'POSTURE_ITALIC'
lib/textstyle.h:244:3: note: previous definition of 'POSTURE_ITALIC' with type 'enum <anonymous>'
  244 |   POSTURE_ITALIC, /* same as oblique */
      |   ^~~~~~~~~~~~~~
term-ostream.oo.h:57:3: error: redeclaration of enumerator 'POSTURE_DEFAULT'
lib/textstyle.h:245:3: note: previous definition of 'POSTURE_DEFAULT' with type 'enum <anonymous>'
  245 |   POSTURE_DEFAULT = POSTURE_NORMAL
      |   ^~~~~~~~~~~~~~~
term-ostream.oo.h:58:3: error: conflicting types for 'term_posture_t'; have 'enum <anonymous>'
lib/textstyle.h:246:3: note: previous declaration of 'term_posture_t' with type 'term_posture_t'
  246 | } term_posture_t;
      |   ^~~~~~~~~~~~~~
term-ostream.oo.h:62:3: error: redeclaration of enumerator 'UNDERLINE_OFF'
lib/textstyle.h:250:3: note: previous definition of 'UNDERLINE_OFF' with type 'enum <anonymous>'
  250 |   UNDERLINE_OFF = 0,
      |   ^~~~~~~~~~~~~
term-ostream.oo.h:63:3: error: redeclaration of enumerator 'UNDERLINE_ON'
lib/textstyle.h:251:3: note: previous definition of 'UNDERLINE_ON' with type 'enum <anonymous>'
  251 |   UNDERLINE_ON,
      |   ^~~~~~~~~~~~
term-ostream.oo.h:64:3: error: redeclaration of enumerator 'UNDERLINE_DEFAULT'
lib/textstyle.h:252:3: note: previous definition of 'UNDERLINE_DEFAULT' with type 'enum <anonymous>'
  252 |   UNDERLINE_DEFAULT = UNDERLINE_OFF
      |   ^~~~~~~~~~~~~~~~~
term-ostream.oo.h:65:3: error: conflicting types for 'term_underline_t'; have 'enum <anonymous>'
lib/textstyle.h:253:3: note: previous declaration of 'term_underline_t' with type 'term_underline_t'
  253 | } term_underline_t;
      |   ^~~~~~~~~~~~~~~~

(수정)
lib/term-ostream.h, lib/term-ostream.oo.h 수정
// redeclaration by lib/textstyle.h
//enum
//{
//  COLOR_DEFAULT = -1  /* unknown */
//};


/* redeclaration by lib/textstyle.h
typedef enum
{
  WEIGHT_NORMAL = 0,
  WEIGHT_BOLD,
  WEIGHT_DEFAULT = WEIGHT_NORMAL
} term_weight_t;
*/

// redeclaration by lib/textstyle.h
//typedef enum
//{
//  POSTURE_NORMAL = 0,
//  POSTURE_ITALIC, /* same as oblique */
//  POSTURE_DEFAULT = POSTURE_NORMAL
//} term_posture_t;

/* redeclaration by lib/textstyle.h
typedef enum
{
  UNDERLINE_OFF = 0,
  UNDERLINE_ON,
  UNDERLINE_DEFAULT = UNDERLINE_OFF
} term_underline_t;
*/

(오류)
term-ostream.oo.c:1850:3: error: initialization of 'void (*)(struct term_style_user_data *)' 
from incompatible pointer type 'void (*)(struct any_ostream_representation *)' [-Wincompatible-pointer-types]
term-ostream.oo.c:1850:3: note: (near initialization for 'controller.restore')
term-ostream.oo.c:1851:3: error: initialization of 'void (*)(struct term_style_user_data *)' from incompatible pointer type 'void (*)(struct any_ostream_representation *)' [-Wincompatible-pointer-types]
term-ostream.oo.c:1851:3: note: (near initialization for 'controller.async_restore')
term-ostream.oo.c:1852:3: error: initialization of 'void (*)(struct term_style_user_data *)' from incompatible pointer type 'void (*)(struct any_ostream_representation *)' [-Wincompatible-pointer-types]
term-ostream.oo.c:1852:3: note: (near initialization for 'controller.async_set_attributes_from_default')

(수정)
void (*)(struct term_style_user_data *) 타입의 포인터를 
void (*)(struct any_ostream_representation *) 타입의 함수로 초기화하려고 하고 있어서 오류가 발생
static const struct term_style_controller controller =
{
  get_control_data,
  restore,
  async_restore,
  async_set_attributes_from_default
};

term_style_controller 정의 찾아 포함하기
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find . -name "*.h" | xargs grep 'struct term_style_controller'
./lib/term-style-control.h:struct term_style_controller
./lib/term-style-control.h:   1. You fill a 'struct term_style_controller' with function pointers.
./lib/term-style-control.h:       activate_term_style_controller (const struct term_style_controller *controller,
./lib/term-style-control.h:       activate_term_non_default_mode (const struct term_style_controller *controller,
./lib/term-style-control.h:       deactivate_term_non_default_mode (const struct term_style_controller *controller,
./lib/term-style-control.h:       deactivate_term_style_controller (const struct term_style_controller *controller,

lib/term-ostream.oo.h, lib/term-ostream.h
#include "term-style-control.h" 없다면 추가
있을경우
lib/term-style-control.h
struct term_style_controller
{
  /* This function returns a pointer to the embedded
     'struct term_style_control_data' contained in a
     'struct term_style_user_data'.  */
  /*struct term_style_control_data * (*get_control_data) (struct term_style_user_data *);*/
  /*./lib/term-ostream.oo.c:1114:get_control_data (term_ostream_t stream) 매개변수형식맞춰야함*/
  struct term_style_control_data * (*get_control_data) (term_ostream_t);

  /* This function brings the terminal's state back to the default state
     (no styling attributes set).  It is invoked when the process terminates
     through exit().  */
  void (*restore) (struct term_style_user_data *);

  /* This function brings the terminal's state back to the default state
     (no styling attributes set).  It is async-safe (see gnulib-common.m4 for
     the precise definition).  It is invoked when the process receives a fatal
     or stopping signal.  */
  _GL_ASYNC_SAFE void (*async_restore) (struct term_style_user_data *);

  /* This function brings the terminal's state, from the default state, back
     to the state where it has the desired attributes set.  It is async-safe
     (see gnulib-common.m4 for the precise definition).  It is invoked when
     the process receives a SIGCONT signal.  */
  _GL_ASYNC_SAFE void (*async_set_attributes_from_default) (struct term_style_user_data *);
};
=>get_control_data 함수 포인터가 term_ostream_t 타입을 받고, 
다른 함수들은 term_style_user_data *를 받는 데서 발생하는 시그니처 불일치

lib/term-ostream.oo.c
static const struct term_style_controller controller =
{
  get_control_data,
  restore,
  async_restore,
  async_set_attributes_from_default
};

static struct term_style_control_data *
get_control_data (term_ostream_t stream)

static void
restore (term_ostream_t stream)

static _GL_ASYNC_SAFE void
async_restore (term_ostream_t stream)

static _GL_ASYNC_SAFE void
async_set_attributes_from_default (term_ostream_t stream)

=> 전부 term_ostream_t 이걸로 받는데 정의가 struct term_style_user_data * 이것으로되있음
=> struct term_style_user_data * => term_ostream_t
=> term-style-control.h에 맞추기로함(매개변수 전부 struct term_style_user_data * 로 맞춤)

lib/term-style-control.h 수정
struct term_style_control_data * (*get_control_data) (struct term_style_user_data *);

lib/term-ostream.oo.c, lib/term-ostream.c 수정
static struct term_style_control_data *
get_control_data (struct term_style_user_data * stream)

static void
restore (struct term_style_user_data * stream)

static _GL_ASYNC_SAFE void
async_restore (struct term_style_user_data * stream)

static _GL_ASYNC_SAFE void
async_set_attributes_from_default (struct term_style_user_data * stream)
(오류)
term-ostream.oo.c:1849:3: error: initialization of 'struct term_style_control_data * (*)(struct term_style_user_data *)' from incompatible pointer type 'struct term_style_control_data * (*)(struct any_ostream_representation *)' [-Wincompatible-pointer-types]
term-ostream.oo.c:1849:3: note: (near initialization for 'controller.get_control_data')
term-ostream.oo.c:1850:3: error: initialization of 'void (*)(struct term_style_user_data *)' from incompatible pointer type 'void (*)(struct any_ostream_representation *)' [-Wincompatible-pointer-types]
term-ostream.oo.c:1850:3: note: (near initialization for 'controller.restore')
term-ostream.oo.c:1851:3: error: initialization of 'void (*)(struct term_style_user_data *)' from incompatible pointer type 'void (*)(struct any_ostream_representation *)' [-Wincompatible-pointer-types]
term-ostream.oo.c:1851:3: note: (near initialization for 'controller.async_restore')
term-ostream.oo.c:1852:3: error: initialization of 'void (*)(struct term_style_user_data *)' from incompatible pointer type 'void (*)(struct any_ostream_representation *)' [-Wincompatible-pointer-types]
term-ostream.oo.c:1852:3: note: (near initialization for 'controller.async_set_attributes_from_default')

(수정)
타입을 맞춰줬는데도 에러가남
lib/term-ostream.c
#if !IS_CPLUSPLUS
#define term_ostream_representation any_ostream_representation
#endif
 C++가 아닌 경우에 term_ostream_representation을 any_ostream_representation으로 정의
이로 인해 term-style-control.h와 term-ostream.oo.c에서의 매개변수 타입 불일치 문제가 발생
lib/term-styl-control.h 수정(term_style_user_data =>any_ostream_representation)
  struct term_style_control_data * (*get_control_data) (struct any_ostream_representation *);
  void (*restore) (struct any_ostream_representation *);
  _GL_ASYNC_SAFE void (*async_restore) (struct any_ostream_representation *);
  _GL_ASYNC_SAFE void (*async_set_attributes_from_default) (struct any_ostream_representation *);

lib/term-ostream.oo.c, lib/term-ostream.c 수정 (term_style_user_data => term_ostream_representation)
static struct term_style_control_data *
get_control_data (struct term_ostream_representation * stream)

static void
restore (struct term_ostream_representation * stream)

static _GL_ASYNC_SAFE void
async_restore (struct term_ostream_representation * stream)

static _GL_ASYNC_SAFE void
async_set_attributes_from_default (struct term_ostream_representation * stream)

(오류)
term-ostream.oo.c: In function 'activate_default_attr':
term-ostream.oo.c:1862:50: error: passing argument 2 of 'deactivate_term_non_default_mode' 
from incompatible pointer type [-Wincompatible-pointer-types]
(수정)
error (EXIT_FAILURE, error_code, _("error writing to %s"), stream->filename);
deactivate_term_non_default_mode 함수 호출 중 두 번째 인수가 예상된 타입과 호환되지 않는 포인터 타입이라는 경고가 발생
-Wincompatible-pointer-types 옵션에 의해 발생했으며, 이는 서로 다른 포인터 타입 간의 호환성 문제를 감지

static void
activate_default_attr (term_ostream_t stream)
{
  /* Switch back to the default attributes.  */
  out_attr_change (stream, stream->default_attr);

  >>> deactivate_term_non_default_mode (&controller, stream);
}

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find . -name "*.h" | xargs grep 'deactivate_term_non_default_mode'
./lib/term-style-control.h:       deactivate_term_non_default_mode (const struct term_style_controller *controller,

lib/term-style-control.h
extern void
       deactivate_term_non_default_mode (const struct term_style_controller *controller,
                                         struct term_style_user_data *user_data);

=> struct term_style_user_data *user_data로 선언되어있으나 term_ostream_t stream을 대입하였음
deactivate_term_non_default_mode (&controller, (struct term_style_user_data *)stream); 수정

make clean (가끔씩 갱신이안되는경우가있을때 사용)
autoreconf -ivf && ./configure && make

(오류)
lib/textstyle.h:625:6: error: redeclaration of 'enum color_option'
  625 | enum color_option { color_no, color_tty, color_yes, color_html };
      |      ^~~~~~~~~~~~
In file included from lib/color.c:24:
lib/color.h:39:6: note: originally defined here
   39 | enum color_option { color_no, color_tty, color_yes, color_html };
      |      ^~~~~~~~~~~~
(수정)
lib/color.h
//enum color_option { color_no, color_tty, color_yes, color_html };

(오류)
term-ostream.oo.c: In function 'activate_default_attr':
term-ostream.oo.c:1862:50: error: passing argument 2 of 'deactivate_term_non_default_mode' 
from incompatible pointer type [-Wincompatible-pointer-types]
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find . -name '*.h' | xargs grep 'deactivate_term_non_default_mode'
./lib/term-style-control.h:       deactivate_term_non_default_mode (const struct term_style_controller *controller,

lib/term-style-control.h
extern void deactivate_term_non_default_mode (const struct term_style_controller *controller,
                                              struct term_style_user_data *user_data);

lib/term-ostream.oo.c
deactivate_term_non_default_mode (&controller, stream);

stream은 term_ostream_t 타입인데, term_ostream_t가 struct term_style_user_data와 호환되지 않아서 에러가 발생
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -r "struct term_ostream_t" .
./lib/term-ostream.h:struct term_ostream_t
lib/term-ostream.h
#define term_style_user_data term_ostream_representation
#if IS_CPLUSPLUS
struct term_ostream_t
{
private:
  struct term_ostream_representation *_pointer;
public:
  term_ostream_t () : _pointer (NULL) {}
  term_ostream_t (struct term_ostream_representation *pointer) : _pointer (pointer) {}
  struct term_ostream_representation * operator -> () { return _pointer; }
  operator struct term_ostream_representation * () { return _pointer; }
  operator struct any_ostream_representation * () { return (struct any_ostream_representation *) _pointer; }
  operator void * () { return _pointer; }
  bool operator == (const void *p) { return _pointer == p; }
  bool operator != (const void *p) { return _pointer != p; }
  operator ostream_t () { return (ostream_t) (struct any_ostream_representation *) _pointer; }
  explicit term_ostream_t (ostream_t x) : _pointer ((struct term_ostream_representation *) (void *) x) {}
};
#else
typedef ostream_t term_ostream_t;
#endif


(오류)
lib/gl_list.h:652:1: warning: 'nodiscard' attribute directive ignored [-Wattributes]
  652 | {
      | ^
(수정)
nodiscard 속성은 함수의 반환값을 무시하지 말라는 의미로 사용

(오류)
term-ostream.h:77:37: error: 'any_ostream_representation' undeclared (first use in this function)
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'struct any_ostream_representation' .
./lib/ostream.h:53:struct any_ostream_representation; (구조체의 선언)
./lib/ostream.h:72:typedef struct any_ostream_representation * ostream_t; (타입 정의)
./lib/term-ostream.h:101:  operator struct any_ostream_representation * () 
{ return (struct any_ostream_representation *) _pointer; } (형 변환 연산자의 구현)

lib/term-ostream.h 수정
#include "ostream.h" //struct any_ostream_representation; 정의

any_ostream_representation 구조체와 관련된 형 변환 연산자를 구현하는 부분
term_ostream_representation을 any_ostream_representation으로 매핑
코드에서 term_ostream_representation이라고 작성된 부분은 any_ostream_representation으로 대체
코드에서 구조체 이름을 통일하여 사용하려는 경우 유용
#define term_ostream_representation any_ostream_representation
객체를 다른 타입으로 변환할 때 사용하는 메서드
클래스의 객체를 struct any_ostream_representation *로 변환할 수 있게 함
operator struct any_ostream_representation * () { return (struct any_ostream_representation *) _pointer; }
ostream_t 타입으로 변환하는 연산자를 구현
ostream_t는 struct any_ostream_representation *에 대한 typedef로 정의된 타입
operator ostream_t () { return (ostream_t) (struct any_ostream_representation *) _pointer; }

term-ostream.h에서 any_ostream_representation을 사용할 수 있도록 수정
헤더 파일에 선언 확인
lib/term-ostream.h
#include "ostream.h"  // any_ostream_representation의 선언을 포함
term_ostream_representation과 any_ostream_representation의 관계 확인
#define term_ostream_representation any_ostream_representation
(오류)
term-ostream.h:77:37: error: 'any_ostream_representation' undeclared (first use in this function)
lib/term-ostream.oo.h 수정
struct term_ostream_representation;
#define term_ostream_representation any_ostream_representation
#define term_style_user_data term_ostream_representation
lib/ostream.h에 any_ostream_representation 구조체는 전방 선언만 되어 있고, 실제 정의는 포함되어 있지 않음
lib/term-ostream.h, term-ostream.oo.h 수정
#define term_ostream_representation any_ostream_representation 이 정의 하나만 남기고 나머지 정의 제거

(오류)
term-ostream.oo.c: In function 'activate_default_attr':
term-ostream.oo.c:1862:3: error: conversion to non-scalar type requested
term-ostream.oo.c:1862:78: error: expected ')' before ';' token
term-ostream.oo.c:1862:79: error: expected ';' before '}' token
(수정)
lib/term-style-control.h
#ifdef __cplusplus
typedef struct term_ostream_representation term_style_user_data;
#else
//typedef struct term_style_user_data term_style_user_data;
typedef struct term_ostream_representation term_style_user_data;
#endif

//extern void
//      deactivate_term_non_default_mode (const struct term_style_controller *controller,
//                                         struct term_style_user_data *user_data);
extern void
    deactivate_term_non_default_mode(const struct term_style_controller *controller,
                                     term_style_user_data *user_data);

lib/term-ostream.oo.c, term-ostream.c 수정
#include "term-ostream.h"
#include "term-style-control.h" // // `term_style_user_data`와 `deactivate_term_non_default_mode` 선언 포함

deactivate_term_non_default_mode (&controller, (term_style_user_data *)stream);

(오류)
term-ostream.oo.c: In function 'activate_default_attr':
term-ostream.oo.c:1862:80: error: expected ')' before ';' token
term-ostream.oo.c:1862:81: error: expected ';' before '}' token
(수정)
lib/term-ostream.oo.c, lib/term-ostream.c 수정
/* Activate the default attributes.  */
static void
activate_default_attr (term_ostream_t stream)
{
  /* Switch back to the default attributes.  */
  out_attr_change (stream, stream->default_attr);

  deactivate_term_non_default_mode (&controller, (term_style_user_data *) stream);
}

(오류)
term-ostream.oo.c: In function 'output_buffer':
term-ostream.oo.c:1903:54: error: passing argument 2 of 'activate_term_non_default_mode' 
from incompatible pointer type [-Wincompatible-pointer-types]
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'activate_term_non_default_mode' .

extern void
activate_term_non_default_mode (const struct term_style_controller *controller,
                                struct term_style_user_data *user_data);

lib/term-ostream.oo.c, lib/term-ostream.c 수정
activate_term_non_default_mode의 두 번째 인수로 전달되는 stream 포인터의 타입이 호환되지 않음

if (!equal_attributes (*ap, stream->default_attr)){
	//activate_term_non_default_mode (&controller, stream);
	#if IS_CPLUSPLUS
		activate_term_non_default_mode(&controller, (term_style_user_data *) stream->_pointer);
	#else
		activate_term_non_default_mode(&controller, (term_style_user_data *) stream);
	#endif
}

(오류)
term-ostream.h:76:37: error: unknown type name 'any_ostream_representation'; did you mean 'term_ostream_representation'?
(수정)
lib/term-ostream.h, lib/term-ostream.oo.h 수정
#define term_ostream_representation any_ostream_representation

// C++의 스마트 포인터 클래스 정의
struct term_ostream_t
{
private:
  struct any_ostream_representation *_pointer;
public:
  term_ostream_t() : _pointer(NULL) {}
  term_ostream_t(struct any_ostream_representation *pointer) : _pointer(pointer) {}
  
  // 형변환 연산자
  struct any_ostream_representation * operator -> () { return _pointer; }
  operator struct any_ostream_representation * () { return _pointer; }
  operator void * () { return _pointer; }
  bool operator == (const void *p) { return _pointer == p; }
  bool operator != (const void *p) { return _pointer != p; }

  // 다른 형변환 연산자
  operator ostream_t () { return (ostream_t) _pointer; }
  explicit term_ostream_t(ostream_t x) : _pointer((struct any_ostream_representation *) x) {}
};

(오류)
term-ostream.h:76:37: error: unknown type name 'any_ostream_representation'; did you mean 'term_ostream_representation'?
term-ostream.oo.c:1872:55: note: in expansion of macro 'term_ostream_representation'
term-ostream.h 파일에서 any_ostream_representation이라는 타입 이름이 정의되지 않았다
term_ostream_representation이 올바른 타입 이름으로 보인다
(수정)
term-ostream.h 파일 수정

any_ostream_representation정의 및 구현을 꼭 찾아야함
findstr /s /i /n /c:"any_ostream_representation" c:\gnulib\*.* c:\libidn2\*.*

(오류)
term-ostream.oo.c:1863:81: error: 'struct any_ostream_representation' has no member named '_pointer'
(수정)
#if IS_CPLUSPLUS
  deactivate_term_non_default_mode(&controller, (term_style_user_data *) stream->_pointer);
#else
  deactivate_term_non_default_mode(&controller, (term_style_user_data *) stream);
#endif

(오류)
term-ostream.oo.c: In function 'output_buffer':
term-ostream.oo.c:1913:51: error: passing argument 2 of 'activate_term_non_default_mode' from incompatible pointer type [-Wincompatible-pointer-types]
In file included from term-ostream.oo.h:25,
                 from term-ostream.oo.c:21:
(수정)
#if IS_CPLUSPLUS
  activate_term_non_default_mode(&controller, (term_style_user_data *) stream->_pointer);
#else
  activate_term_non_default_mode(&controller, (term_style_user_data *) stream);
#endif
(오류)
term-ostream.oo.c:1913:51: error: passing argument 2 of 'activate_term_non_default_mode' from incompatible pointer type [-Wincompatible-pointer-types]
In file included from term-ostream.oo.h:25,
                 from term-ostream.oo.c:21:
(수정)
#if IS_CPLUSPLUS
  activate_term_non_default_mode(&controller, (term_style_user_data *) (void *) stream->_pointer);
#else
  activate_term_non_default_mode(&controller, (term_style_user_data *) (void *) stream);
#endif
(오류)
In file included from term-ostream.oo.h:25,
                 from term-ostream.oo.c:21:
(수정)
#include "ostream.h" // any_ostream_representation 선언

#define term_ostream_representation any_ostream_representation

// C++의 스마트 포인터 클래스 정의
struct term_ostream_t
{
private:
  struct any_ostream_representation *_pointer;
public:
  term_ostream_t() : _pointer(NULL) {}
  term_ostream_t(struct any_ostream_representation *pointer) : _pointer(pointer) {}
  
  // 형변환 연산자
  struct any_ostream_representation * operator -> () { return _pointer; }
  operator struct any_ostream_representation * () { return _pointer; }
  operator void * () { return _pointer; }
  bool operator == (const void *p) { return _pointer == p; }
  bool operator != (const void *p) { return _pointer != p; }

  // 다른 형변환 연산자
  operator ostream_t () { return (ostream_t) _pointer; }
  explicit term_ostream_t(ostream_t x) : _pointer((struct any_ostream_representation *) x) {}
};

(오류)
In file included from lib/color.c:32:
term-ostream.h:104:1: error: expected specifier-qualifier-list before 'private'
(수정)
#ifdef __cplusplus
// C++ 전용 코드
struct term_ostream_t
{
private:
  struct any_ostream_representation *_pointer;
public:
  term_ostream_t() : _pointer(NULL) {}
  term_ostream_t(struct any_ostream_representation *pointer) : _pointer(pointer) {}
  
  struct any_ostream_representation * operator -> () { return _pointer; }
  operator struct any_ostream_representation * () { return _pointer; }
  operator void * () { return _pointer; }
  bool operator == (const void *p) { return _pointer == p; }
  bool operator != (const void *p) { return _pointer != p; }
  
  operator ostream_t () { return (ostream_t) _pointer; }
  explicit term_ostream_t(ostream_t x) : _pointer((struct any_ostream_representation *) x) {}
};
#else
// C 전용 코드
typedef struct any_ostream_representation * term_ostream_t;
#endif

(오류)
any_ostream_representation 정의 와 구현을 찾을 수 없어 생성
(수정)
lib/ostream.h수정
struct any_ostream_representation {
    // 기본 멤버
    struct ostream_representation_header *vtable;  // 가상 테이블 포인터
    void *_pointer;  // 스트림 데이터 또는 관련 구조체에 대한 포인터
    int fd;          // 파일 디스크립터
    FILE *file;      // FILE 포인터
    char *buffer;    // 메모리 스트림 버퍼
    size_t size;     // 버퍼 크기
    size_t position; // 스트림 내 현재 위치

    // 속성 관련 멤버
    int no_color_video;
    int supports_weight;
    int supports_posture;
    int supports_underline;
    int supports_hyperlink;
    unsigned long hostname_hash;
    unsigned long start_time;
    unsigned long id_serial;
    char *filename;
    int colormodel; // 컬러 모델
    int is_windows_console; // Windows 콘솔 여부
    //void* current_console_attributes; // 현재 콘솔 속성

    // 색상 관련 멤버
    bool supports_foreground; // 전경색 지원 여부
    bool supports_background; // 배경색 지원 여부
    int curr_attr;            // 현재 속성
    int orig_pair;            // 원래 색상 쌍

    // 텍스트 속성 관련 멤버
    void (*set_a_foreground)(int color); // 전경색 설정 함수
    void (*set_foreground)(int color);   // 전경색 설정 함수
    void (*set_a_background)(int color); // 배경색 설정 함수
    void (*set_background)(int color);   // 배경색 설정 함수
    void (*enter_bold_mode)(void);       // 굵은 글씨 모드 진입 함수
    void (*enter_italics_mode)(void);    // 이탤릭 모드 진입 함수
    void (*exit_italics_mode)(void);     // 이탤릭 모드 종료 함수
    void (*enter_underline_mode)(void);  // 밑줄 모드 진입 함수
    void (*exit_underline_mode)(void);   // 밑줄 모드 종료 함수
    void (*exit_attribute_mode)(void);   // 속성 모드 종료 함수

    // 하이퍼링크 관련 멤버
    char **hyperlinks_array; // 하이퍼링크 배열
    int hyperlinks_count;    // 하이퍼링크 수

    // 복원 관련 멤버
    void (*restore_colors)(void); // 색상 복원 함수
    void (*restore_weight)(void); // 굵기 복원 함수
    void (*restore_posture)(void); // 기울기 복원 함수
    void (*restore_underline)(void); // 밑줄 복원 함수
    void (*restore_hyperlink)(void); // 하이퍼링크 복원 함수

    // 누락된 멤버들 추가
    char *attrbuffer;       // 속성 버퍼
    int buflen;            // 버퍼 길이
    int allocated;         // 할당된 메모리 크기
    int default_attr;      // 기본 속성
    int active_attr;       // 활성 속성
    int max_colors;        // 최대 색상 수
    int hyperlinks_allocated; // 하이퍼링크 배열의 할당된 크기
    int simp_attr;         // 단순화된 속성
    void *tty_control;     // TTY 제어 데이터
    void *control_data;    // 제어 데이터

	HANDLE handle; //or FILE* handle;
	int bgcolor;                       // 배경 색상
    int weight;                        // 글자 두께
    int posture;                       // 글자의 기울기
    int underline;                     // 밑줄 스타일
    hyperlink_t *hyperlink;            // 하이퍼링크 정보
    attributes_t default_console_attributes;  // 기본 콘솔 속성
    attributes_t current_console_attributes;  // 현재 콘솔 속성
    ttyctl_t ttyctl;                   // TTY 제어
};
(오류)
term-ostream.oo.c: In function 'out_color_change':
term-ostream.oo.c:1247:5: error: aggregate value used where an integer was expected
tparm 함수 또는 그와 관련된 호출에서 반환되는 값이 구조체와 같은 복합 자료형인데, 정수형 값이 기대되었다는 의미
tputs (tparm (stream->set_foreground, new_color),
                   1, async_safe ? out_char_unchecked : out_char);

(수정)
lib/term-ostream.c, lib/term-ostream.oo.c 수정

/*if (stream->set_a_foreground != NULL)
            tputs (tparm (stream->set_a_foreground, color_bgr (new_color)),
                   1, async_safe ? out_char_unchecked : out_char);
          else
            tputs (tparm (stream->set_foreground, new_color),
                   1, async_safe ? out_char_unchecked : out_char);*/

const char* color_change_cmd = NULL;

if (stream->set_a_foreground != NULL) {
    color_change_cmd = tparm(stream->set_a_foreground, (long)color_bgr(new_color));
} else if (stream->set_foreground != NULL) {
    color_change_cmd = tparm(stream->set_foreground, (long)new_color);
}

if (color_change_cmd != NULL) {
    tputs(color_change_cmd, 1, async_safe ? out_char_unchecked : out_char);
}


(오류)
term-ostream.oo.c: In function 'generate_hyperlink_id':
term-ostream.oo.c:1163:38: warning: right shift count >= width of type [-Wshift-count-overflow]
(수정)
lib/term-ostream.c, lib/term-ostream.oo.c 수정
/* Generate an id for a hyperlink.  */
/*static char *
generate_hyperlink_id (term_ostream_t stream)
{
  // A UUID would be optimal, but is overkill here.  An id of 128 bits
  //  (32 hexadecimal digits) should be sufficient. 
  static const char hexdigits[16] =
    {
      '0', '1', '2', '3', '4', '5', '6', '7',
      '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'
    };
  //char *id = (char *) xmalloc (128 / 4 + 1);
  char *id = (char *) malloc (128 / 4 + 1);
  uint32_t words[4] =
    {
      stream->hostname_hash,
      (uint32_t) (stream->start_time >> 32),
      (uint32_t) stream->start_time,
      stream->id_serial
    };
  char *p = id;
  unsigned int i;
  for (i = 0; i < 4; i++)
    {
      uint32_t word = words[i];
      unsigned int j;
      for (j = 0; j < 32 / 4; j++)
        *p++ = hexdigits[(word >> (32 - 4 * (j + 1))) & 0x0f];
    }
  *p = '\0';
  stream->id_serial++;
  return id;
}*/


/* Define constants */
#define HEX_DIGITS_PER_WORD 8  // Since each 32-bit word produces 8 hexadecimal digits

static char *
generate_hyperlink_id (term_ostream_t stream)
{
  static const char hexdigits[16] =
    {
      '0', '1', '2', '3', '4', '5', '6', '7',
      '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'
    };
  char *id = (char *) malloc (HEX_DIGITS_PER_WORD * 4 + 1);  // Allocate memory for 32 hex digits + null terminator
  uint32_t words[4] =
    {
      stream->hostname_hash,
      (uint32_t) (stream->start_time >> 32),
      (uint32_t) stream->start_time,
      stream->id_serial
    };
  char *p = id;
  unsigned int i;
  for (i = 0; i < 4; i++)
    {
      uint32_t word = words[i];
      unsigned int j;
      for (j = 0; j < HEX_DIGITS_PER_WORD; j++)
        *p++ = hexdigits[(word >> (4 * (HEX_DIGITS_PER_WORD - 1 - j))) & 0x0f];
    }
  *p = '\0';
  stream->id_serial++;
  return id;
}

(오류)
term-ostream.oo.c: In function 'generate_hyperlink_id':
term-ostream.oo.c:1197:38: warning: right shift count >= width of type [-Wshift-count-overflow]
term-ostream.oo.c: In function 'out_color_change':
term-ostream.oo.c:1281:5: error: aggregate value used where an integer was expected
term-ostream.oo.c:1304:7: error: 'color_change_cmd' undeclared (first use in this function)
term-ostream.oo.c:1304:7: note: each undeclared identifier is reported only once for each function it appears in
term-ostream.oo.c:1304:38: error: passing argument 1 of 'tparm' from incompatible pointer type [-Wincompatible-pointer-types]

(수정)
lib/term-ostream.c, lib/term-ostream.oo.c 수정

char buffer[1024]; // 충분히 큰 버퍼를 선언합니다
const char *color_change_cmd = NULL; // 변수 선언

if (stream->set_a_foreground != NULL)
{
color_change_cmd = tparm((const char *)stream->set_a_foreground, color_bgr(new_color));
if (color_change_cmd != NULL)
{
    snprintf(buffer, sizeof(buffer), "%s", color_change_cmd);
    tputs(buffer, 1, async_safe ? out_char_unchecked : out_char);
}
}
else if (stream->set_foreground != NULL)
{
color_change_cmd = tparm((const char *)stream->set_foreground, new_color);
if (color_change_cmd != NULL)
{
    snprintf(buffer, sizeof(buffer), "%s", color_change_cmd);
    tputs(buffer, 1, async_safe ? out_char_unchecked : out_char);
}
}

(오류)
term-ostream.oo.c: In function 'generate_hyperlink_id':
term-ostream.oo.c:1196:4: error: 'return' with no value, in function

(수정)
/* Define constants */
#define HEX_DIGITS_PER_WORD 8  // Since each 32-bit word produces 8 hexadecimal digits

static char *
generate_hyperlink_id (term_ostream_t stream)
{
  static const char hexdigits[16] =
    {
      '0', '1', '2', '3', '4', '5', '6', '7',
      '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'
    };
  char *id = (char *) malloc (HEX_DIGITS_PER_WORD * 4 + 1);  // Allocate memory for 32 hex digits + null terminator
	if (id == NULL) {
			// Handle memory allocation failure
			return NULL; <-- return 에서 return NULL로 수정
	}

	uint32_t words[4] = {
			stream->hostname_hash,
			(uint32_t) (stream->start_time >> 32),
			(uint32_t) stream->start_time,
			stream->id_serial
	};

	char *p = id;
	unsigned int i;
	for (i = 0; i < 4; i++) {
			uint32_t word = words[i];
			unsigned int j;
			for (j = 0; j < HEX_DIGITS_PER_WORD; j++) {
					*p++ = hexdigits[(word >> (4 * (HEX_DIGITS_PER_WORD - 1 - j))) & 0x0f];
			}
	}
  *p = '\0';
  stream->id_serial++;
  return id;
}

(오류)
term-ostream.oo.c: In function 'generate_hyperlink_id':
term-ostream.oo.c:1197:38: warning: right shift count >= width of type [-Wshift-count-overflow]
비트 시프트 연산의 오른쪽 수치가 타입의 비트 너비를 초과할 때 발생
(수정)
lib/term-ostream.c, lib/term-ostream.oo.c 수정
/*uint32_t words[4] = {
		stream->hostname_hash,
		(uint32_t) (stream->start_time >> 32),
		(uint32_t) stream->start_time,
		stream->id_serial
};*/

// start_time이 64비트임을 가정
uint64_t start_time = stream->start_time;

uint32_t words[4] = {
		stream->hostname_hash,
		(uint32_t)(start_time >> 32),  // 상위 32비트를 가져옴
		(uint32_t)start_time,          // 하위 32비트를 가져옴
		stream->id_serial
};

(오류)
term-ostream.oo.c: In function 'out_color_change':
term-ostream.oo.c:1288:13: error: aggregate value used where an integer was expected
주로 구조체나 복합 데이터 타입이 예상되는 곳에 정수가 아닌 다른 값이 전달될 때 발생
(수정)
lib/term-ostream.oo.h
typedef int term_color_t;
case cm_common8:
stream->current_console_attributes =
            (stream->current_console_attributes & ~(7 << 4))
            | (new_bgcolor << 4);
current_console_attributes나 new_bgcolor가 정수형 값이 아닌 복합 데이터형(예: 구조체)이라는 것을 의미할 수 있다.
비트 연산에서 두 값이 모두 정수형이어야 하는데, 하나 또는 두 값이 정수형이 아닐 경우 문제가 발생
new_bgcolor와 stream->current_console_attributes가 정수형(예: int, unsigned int, WORD)인지 확인

typedef int term_color_t;
term_color_t new_bgcolor
이고
#if IS_CPLUSPLUS
struct term_ostream_t
{
private:
  struct term_ostream_representation *_pointer;
public:
  term_ostream_t () : _pointer (NULL) {}
  term_ostream_t (struct term_ostream_representation *pointer) : _pointer (pointer) {}
  struct term_ostream_representation * operator -> () { return _pointer; }
  operator struct term_ostream_representation * () { return _pointer; }
  operator struct any_ostream_representation * () { return (struct any_ostream_representation *) _pointer; }
  operator void * () { return _pointer; }
  bool operator == (const void *p) { return _pointer == p; }
  bool operator != (const void *p) { return _pointer != p; }
  operator ostream_t () { return (ostream_t) (struct any_ostream_representation *) _pointer; }
  explicit term_ostream_t (ostream_t x) : _pointer ((struct term_ostream_representation *) (void *) x) {}
};
#else
typedef ostream_t term_ostream_t;
#endif
term_ostream_t stream
stream->current_console_attributes
정의에 current_console_attributes 없어서 추가
lib/term-ostream.h, lib/term-ostream.oo.h 수정
struct term_ostream_t에 	
int current_console_attributes; //term-ostream.c stream->current_console_attributes; 추가

(오류)
term-ostream.oo.c: In function 'out_color_change':
term-ostream.oo.c:1284:15: error: 'new_bgcolor' undeclared (first use in this function); did you mean 'new_color'?
(수정)
lib/term-ostream.oo.c, lib/term-ostream.c 수정
static _GL_ASYNC_SAFE void
out_color_change(term_ostream_t stream, term_color_t new_color, bool async_safe)
{
	term_color_t new_bgcolor = new_color; //선언추가
}

(오류)
C:/msys64/mingw64/include/wincon.h:252:80: note: expected 'WORD' {aka 'short unsigned int'} but argument is of type 'attributes_t'
  252 |   WINBASEAPI WINBOOL WINAPI SetConsoleTextAttribute(HANDLE hConsoleOutput,WORD wAttributes);
      |
               ~~~~~^~~~~~~~~~~
(수정)
lib/term-ostream.oo.c, lib/term-ostream.c 수정
SetConsoleTextAttribute 함수가 두 번째 인자로 WORD 타입(16비트 부호 없는 정수)을 기대하는데, 
현재 stream->current_console_attributes가 int 타입이기 때문에 발생
//SetConsoleTextAttribute (stream->handle, stream->current_console_attributes);
SetConsoleTextAttribute(stream->handle, (WORD)stream->current_console_attributes);

(오류)
term-ostream.oo.c: In function 'out_color_change':
term-ostream.oo.c:1296:49: error: invalid operands to binary & (have 'attributes_t' and 'int')
(수정)
lib/term-ostream.oo.c, lib/term-ostream.c 수정
WORD current_attributes = (WORD)stream->current_console_attributes;
current_attributes = (current_attributes & ~(7 << 4)) | (new_bgcolor << 4);
stream->current_console_attributes = (int)current_attributes;
SetConsoleTextAttribute(stream->handle, current_attributes);

(오류)
term-ostream.oo.c: In function 'out_color_change':
term-ostream.oo.c:1290:38: error: incompatible types when initializing type 'int' using type 'attributes_t'
term-ostream.oo.c:1301:50: error: incompatible types when assigning to type 'attributes_t' from type 'int'
(수정)
lib/ostream.h 수정
struct any_ostream_representation {
WORD current_console_attributes;  // 현재 콘솔 속성
}
lib/term-ostream.oo.c, lib/term-ostream.c 수정
case cm_common8:
assert (new_bgcolor >= 0 && new_bgcolor < 8);
#if HAVE_WINDOWS_CONSOLES
if (stream->is_windows_console)
{
  /* SetConsoleTextAttribute
     <https://docs.microsoft.com/en-us/windows/console/setconsoletextattribute>
     <https://docs.microsoft.com/en-us/windows/console/console-screen-buffers>  */
  /* Assign to stream->current_console_attributes *before* calling
     SetConsoleTextAttribute, otherwise async_set_attributes_from_default
     will not do its job correctly.  */

				// 현재 콘솔 속성을 WORD 타입으로 가져옵니다.
    WORD current_attributes = stream->current_console_attributes;
    // 색상 비트를 제거하기 위한 마스크를 정의합니다.
    WORD mask = ~(7 << 4);  // 4비트 색상 마스크
    // 새 색상 값을 4비트 왼쪽으로 이동합니다.
    WORD new_color_value = new_color << 4;

    // 비트 연산을 통해 업데이트된 속성 계산
    WORD updated_attributes = (current_attributes & mask) | new_color_value;

    // SetConsoleTextAttribute 호출
    SetConsoleTextAttribute(stream->handle, updated_attributes);

    // 업데이트된 속성을 stream에 저장
    stream->current_console_attributes = updated_attributes;


  //stream->current_console_attributes =
  //  (stream->current_console_attributes & ~(7 << 4))
  //  | (new_bgcolor << 4);
  //SetConsoleTextAttribute (stream->handle, stream->current_console_attributes);
}

(오류)
term-ostream.oo.c: In function 'out_color_change':
term-ostream.oo.c:1322:33: error: passing argument 1 of 'tparm' from incompatible pointer type [-Wincompatible-pointer-types]
(수정)
tparm 함수에 전달되어 터미널에서 배경색을 설정
lib/ostream.h 수정
struct any_ostream_representation {
//void (*set_a_background)(int color); // 배경색 설정 함수
//void (*set_background)(int color);   // 배경색 설정 함수
char *set_a_background;
char *set_background;
}

(오류)
term-ostream.oo.c: In function 'out_weight_change':
term-ostream.oo.c:1600:16: error: passing argument 1 of 'tputs' from incompatible pointer type [-Wincompatible-pointer-types]
In file included from term-ostream.oo.h:25,
                 from term-ostream.oo.c:21:
lib/terminfo.h:112:32: note: expected 'const char *' but argument is of type 'void (*)(void)'
  112 | extern void tputs (const char *cp, int affcnt, int (*outcharfun) (int));
      |                    ~~~~~~~~~~~~^~

(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'void tputs' .
./lib/termcap.h:113:extern void tputs (const char *cp, int affcnt, int (*outcharfun) (int));
./lib/terminfo.h:112:extern void tputs (const char *cp, int affcnt, int (*outcharfun) (int));
./lib/tputs.c:25:void tputs (const char *cp, int affcnt, int (*outcharfun) (int));

lib/ostream.h
struct any_ostream_representation {
//void (*enter_bold_mode)(void);       // 굵은 글씨 모드 진입 함수
const char *enter_bold_mode;
}

lib/term_ostream.oo.c, lib/term_ostream.c
tputs (stream->enter_bold_mode,
         1, async_safe ? out_char_unchecked : out_char);

(오류)
term-ostream.oo.c: In function 'out_posture_change':
term-ostream.oo.c:1613:16: error: passing argument 1 of 'tputs' from incompatible pointer type [-Wincompatible-pointer-types]
(수정)
lib/ostream.h
struct any_ostream_representation {
     // 텍스트 속성 관련 멤버
    //void (*set_a_foreground)(int color); // 전경색 설정 함수
    //void (*set_foreground)(int color);   // 전경색 설정 함수
    //void (*set_a_background)(int color); // 배경색 설정 함수
    //void (*set_background)(int color);   // 배경색 설정 함수
    //void (*enter_bold_mode)(void);       // 굵은 글씨 모드 진입 함수
    //void (*enter_italics_mode)(void);    // 이탤릭 모드 진입 함수
    //void (*exit_italics_mode)(void);     // 이탤릭 모드 종료 함수
    //void (*enter_underline_mode)(void);  // 밑줄 모드 진입 함수
    //void (*exit_underline_mode)(void);   // 밑줄 모드 종료 함수
    //void (*exit_attribute_mode)(void);   // 속성 모드 종료 함수

    const char *set_a_foreground; // 전경색 설정 함수
    const char *set_foreground;   // 전경색 설정 함수
    const char *set_a_background; // 배경색 설정 함수
    const char *set_background;   // 배경색 설정 함수
    const char *enter_bold_mode;       // 굵은 글씨 모드 진입 함수
    const char *enter_italics_mode;    // 이탤릭 모드 진입 함수
    const char *exit_italics_mode;     // 이탤릭 모드 종료 함수
    const char *enter_underline_mode;  // 밑줄 모드 진입 함수
    const char *exit_underline_mode;   // 밑줄 모드 종료 함수
    const char *exit_attribute_mode;   // 속성 모드 종료 함수
}

(오류)
term-ostream.oo.c: In function 'out_attr_change':
term-ostream.oo.c:1672:27: error: invalid initializer
term-ostream.oo.c:1677:25: error: incompatible types when assigning to type 'int' from type 'attributes_t'
term-ostream.oo.c:1678:11: error: 'struct any_ostream_representation' has no member named 'active_attr_color'; did you mean 'active_attr'?
term-ostream.oo.c:1679:9: error: 'struct any_ostream_representation' has no member named 'active_attr_bgcolor'
term-ostream.oo.c:1680:9: error: 'struct any_ostream_representation' has no member named 'active_attr_hyperlink'
term-ostream.oo.c:1718:24: error: passing argument 1 of 'tputs' makes pointer from integer without a cast [-Wint-conversion]
term-ostream.oo.c:1695:49: error: invalid operands to binary & (have 'attributes_t' and 'int')
term-ostream.oo.c:1698:49: error: invalid operands to binary & (have 'attributes_t' and 'int')
(수정)
struct any_ostream_representation {
const char * orig_pair;            // 원래 색상 쌍
int active_attr;       // 활성 속성
int active_attr_color;
int active_attr_bgcolor;
hyperlink_t active_att_hyperlink;
WORD default_console_attributes;  // 기본 콘솔 속성
}

(오류)
term-ostream.oo.c: In function 'restore':
term-ostream.oo.c:1829:18: error: assignment to 'term_ostream_t' from incompatible pointer type 'struct term_ostream_representation *' [-Wincompatible-pointer-types]
(수정)
lib/ostream.h 수정
struct any_ostream_representation {
// 복원 관련 멤버
//void (*restore_colors)(void); // 색상 복원 함수
//void (*restore_weight)(void); // 굵기 복원 함수
//void (*restore_posture)(void); // 기울기 복원 함수
//void (*restore_underline)(void); // 밑줄 복원 함수
//void (*restore_hyperlink)(void); // 하이퍼링크 복원 함수
int restore_colors;
int restore_weight;
int restore_posture;
int restore_underline;
int restore_hyperlink;
}

(오류)
term-ostream.oo.c: In function 'restore':
term-ostream.oo.c:1829:18: error: assignment to 'term_ostream_t' from 
incompatible pointer type 'struct term_ostream_representation *' [-Wincompatible-pointer-types]
(수정)
lib/term-style-control.h
typedef struct term_style_user_data {
    term_style_control_data *control_data;
    // 다른 필요한 멤버들 정의
} term_style_user_data;
./gnulib-local/lib/term-ostream.oo.h:65:#define term_style_user_data term_ostream_representation
lib/term-ostream.h
#if IS_CPLUSPLUS
struct term_ostream_t
{
private:
  struct term_ostream_representation *_pointer;
public:
  term_ostream_t () : _pointer (NULL) {}
  term_ostream_t (struct term_ostream_representation *pointer) : _pointer (pointer) {}
  struct term_ostream_representation * operator -> () { return _pointer; }
  operator struct term_ostream_representation * () { return _pointer; }
  operator struct any_ostream_representation * () { return (struct any_ostream_representation *) _pointer; }
  operator void * () { return _pointer; }
  bool operator == (const void *p) { return _pointer == p; }
  bool operator != (const void *p) { return _pointer != p; }
  operator ostream_t () { return (ostream_t) (struct any_ostream_representation *) _pointer; }
  explicit term_ostream_t (ostream_t x) : _pointer ((struct term_ostream_representation *) (void *) x) {}
  int current_console_attributes; //term-ostream.c stream->current_console_attributes;
};
#else
typedef ostream_t term_ostream_t;
#endif
static term_ostream_t volatile out_stream;
struct any_ostream_representation { }

static void
restore (struct term_ostream_representation * stream)
{
   out_stream = stream; //term_style_user_data = any_ostream_representation
}

lib/term-ostream.oo.h, lib/term-ostream.h 수정
#if IS_CPLUSPLUS
struct term_ostream_t
{};
#else
//typedef ostream_t term_ostream_t;
typedef struct any_ostream_representation * term_ostream_t;
#endif

lib/term-ostream.c, lib/term-ostream.oo.c 수정
//out_stream = stream;
out_stream = (term_ostream_t)stream;

(오류)
term-ostream.oo.c: In function 'async_restore':
term-ostream.oo.c:1861:18: error: assignment to 'term_ostream_t' from incompatible pointer type 'struct term_ostream_representation *' [-Wincompatible-pointer-types]
term-ostream.oo.c: In function 'async_set_attributes_from_default':
term-ostream.oo.c:1900:18: error: assignment to 'term_ostream_t' from incompatible pointer type 'struct term_ostream_representation *' [-Wincompatible-pointer-types]

(수정)
lib/term-ostream.oo.h, lib/term-ostream.h 수정
static _GL_ASYNC_SAFE void
async_restore (struct term_ostream_representation * stream)
{
  //out_stream = stream;
  out_stream = (term_ostream_t)stream;
}

static _GL_ASYNC_SAFE void
async_set_attributes_from_default (struct term_ostream_representation * stream)
{
  //out_stream = stream;
  out_stream = (term_ostream_t)stream;
}

static void
out_attr_change (term_ostream_t stream, attributes_t new_attr)
{
  //out_stream = stream;
  out_stream = (term_ostream_t)stream;
}

(오류)
term-ostream.oo.c: In function 'async_set_attributes_from_default':
term-ostream.oo.c:1907:27: error: passing argument 1 of 'out_color_change' from incompatible pointer type [-Wincompatible-pointer-types]
(수정)
typedef int term_color_t;

static _GL_ASYNC_SAFE void
out_color_change(term_ostream_t stream, term_color_t new_color, bool async_safe)
{
  attributes_t new_attr = stream->active_attr; //attributes_t active_attr;
}

if (new_attr.color != COLOR_DEFAULT)
        out_color_change (stream, new_attr.color, true);

lib/otream.h 추가
struct any_ostream_representation {
  term_color_t color;
}

(오류)
term-ostream.oo.c: In function 'async_set_attributes_from_default':
term-ostream.oo.c:1907:27: error: passing argument 1 of 'out_color_change' from incompatible pointer type [-Wincompatible-pointer-types]
(수정)
lib/term-style-control.h
typedef struct term_style_user_data {
    term_style_control_data *control_data;
    // 다른 필요한 멤버들 정의
} term_style_user_data;

lib/term-ostream.h
#define term_style_user_data term_ostream_representation

lib/ostream.h
struct any_ostream_representation {
  attributes_t active_attr;
  int active_attr_color;
}

typedef struct {
    BITFIELD_TYPE(term_color_t, signed int) color : 25;
    BITFIELD_TYPE(term_color_t, signed int) bgcolor : 25;
    BITFIELD_TYPE(term_weight_t, unsigned int) weight : 1;
    BITFIELD_TYPE(term_posture_t, unsigned int) posture : 1;
    BITFIELD_TYPE(term_underline_t, unsigned int) underline : 1;
    // 기타 필요한 멤버
    hyperlink_t *hyperlink;
} attributes_t;

lib/term-ostream.c
static _GL_ASYNC_SAFE void
out_color_change(term_ostream_t stream, term_color_t new_color, bool async_safe)

lib/term-ostream.c, lib/term-ostream.oo.c 수정
static _GL_ASYNC_SAFE void
async_set_attributes_from_default (struct term_ostream_representation * stream)
{
  attributes_t new_attr = stream->active_attr; //attributes_t = attributes_t
  new_attr.color = stream->active_attr_color; //signed int = int

  //수정
  if (new_attr.color != COLOR_DEFAULT)
    //out_color_change (stream, new_attr.color, true); //term_ostream_t(any_ostream_representation) , term_color_t(signed int), bool(bool)
    out_color_change ((term_ostream_t)stream, (term_color_t)new_attr.color, true);
}

(오류)
term-ostream.oo.c: In function 'async_set_attributes_from_default':
term-ostream.oo.c:1911:29: error: passing argument 1 of 'out_bgcolor_change' from incompatible pointer type [-Wincompatible-pointer-types]
term-ostream.oo.c:1442:36: note: expected 'term_ostream_t' but argument is of type
struct term_ostream_representation *'
term-ostream.oo.c:1913:28: error: passing argument 1 of 'out_weight_change' from incompatible pointer type [-Wincompatible-pointer-types]
term-ostream.oo.c:1593:35: note: expected 'term_ostream_t' but argument is of type
struct term_ostream_representation *'
term-ostream.oo.c:1915:29: error: passing argument 1 of 'out_posture_change' from incompatible pointer type [-Wincompatible-pointer-types]
term-ostream.oo.c:1606:36: note: expected 'term_ostream_t' but argument is of type
struct term_ostream_representation *'
term-ostream.oo.c:1917:31: error: passing argument 1 of 'out_underline_change' from incompatible pointer type [-Wincompatible-pointer-types]
term-ostream.oo.c:1619:38: note: expected 'term_ostream_t' but argument is of type
struct term_ostream_representation *'
term-ostream.oo.c:1919:31: error: passing argument 1 of 'out_hyperlink_change' from incompatible pointer type [-Wincompatible-pointer-types]
term-ostream.oo.c:1649:38: note: expected 'term_ostream_t' but argument is of type
struct term_ostream_representation *'
(수정)
lib/term-ostream.c, lib/term-ostream.oo.c 수정
if (new_attr.color != COLOR_DEFAULT){
//out_color_change (stream, new_attr.color, true);
    out_color_change ((term_ostream_t)stream, (term_color_t)new_attr.color, true);
  }
if (new_attr.bgcolor != COLOR_DEFAULT){
//out_bgcolor_change (stream, new_attr.bgcolor, true);
    out_color_change ((term_ostream_t)stream, (term_color_t)new_attr.bgcolor, true);
  }
  if (new_attr.weight != WEIGHT_DEFAULT){
//out_weight_change (stream, new_attr.weight, true);
    out_color_change ((term_ostream_t)stream, (term_color_t)new_attr.weight, true);
  }
  if (new_attr.posture != POSTURE_DEFAULT){
//out_posture_change (stream, new_attr.posture, true);
    out_color_change ((term_ostream_t)stream, (term_color_t)new_attr.posture, true);
  }
  if (new_attr.underline != UNDERLINE_DEFAULT){
//out_underline_change (stream, new_attr.underline, true);
    out_color_change ((term_ostream_t)stream, (term_color_t)new_attr.underline, true);
  }
  if (new_attr.hyperlink != NULL){
//out_hyperlink_change (stream, new_attr.hyperlink, true);
    out_color_change ((term_ostream_t)stream, (term_color_t)new_attr.hyperlink, true);
  }

(오류)
term-ostream.oo.c:1935:3: error: initialization of 'struct term_style_control_data * (*)(struct any_ostream_representation *)' 
from incompatible pointer type 'struct term_style_control_data * (*)(struct term_ostream_representation *)' 
[-Wincompatible-pointer-types]
term-ostream.oo.c:1935:3: note: (near initialization for 'controller.get_control_data')

(수정)
lib/term-style-control.h
typedef struct {
    int volatile fd;
    ttyctl_t volatile tty_control;
    #if HAVE_TCGETATTR
    bool volatile same_as_stderr;
    #endif
    bool non_default_active;
} term_style_control_data;

/*추가*/
typedef struct term_style_user_data {
    term_style_control_data *control_data;
    // 다른 필요한 멤버들 정의
} term_style_user_data;

=> lib/otream.h로 이동
/*추가*/
typedef struct {
    int volatile fd;
    ttyctl_t volatile tty_control;
    #if HAVE_TCGETATTR
    bool volatile same_as_stderr;
    #endif
    bool non_default_active;
} term_style_control_data;

/*추가*/
typedef struct term_style_user_data {
    term_style_control_data *control_data;
    // 다른 필요한 멤버들 정의
} term_style_user_data;

lib/ostream.h 수정
struct any_ostream_representation {
  //void *control_data;    // 제어 데이터
  term_style_control_data control_data;
}

lib/term-ostream.c, lib/term-ostream.oo.c
static struct term_style_control_data *
get_control_data (struct term_ostream_representation * stream)
{
  return &stream->control_data; //term_style_control_data control_data;
}

(오류)
term-ostream.oo.c: In function 'get_control_data':
term-ostream.oo.c:1113:3: error: cannot convert to a pointer type
term-ostream.oo.c: In function 'async_set_attributes_from_default':
term-ostream.oo.c:1929:48: warning: cast from pointer to integer of different size
-Wpointer-to-int-cast]
term-ostream.oo.c: At top level:
term-ostream.oo.c:1936:3: error: initialization of 'struct term_style_control_data * (*)(struct any_ostream_representation *)' from incompatible pointer type 'struct term_style_control_data * (*)(struct term_ostream_representation *)' [-Wincompatible-pointer-types]
term-ostream.oo.c:1936:3: note: (near initialization for 'controller.get_control_data')

(수정)
lib/term-ostream.c, lib/term-ostream.oo.c 수정
static struct term_style_control_data *
get_control_data (struct term_ostream_representation * stream)
{
  //return stream->control_data;
  return &stream->control_data;
}

(오류)
term-ostream.oo.c: In function 'async_set_attributes_from_default':
term-ostream.oo.c:1929:48: warning: cast from pointer to integer of different size
-Wpointer-to-int-cast]
term-ostream.oo.c: At top level:
(수정)
static _GL_ASYNC_SAFE void
async_set_attributes_from_default (struct term_ostream_representation * stream)
{
  #if HAVE_WINDOWS_CONSOLES
  if (stream->is_windows_console)
    {
      /* SetConsoleTextAttribute
         <https://docs.microsoft.com/en-us/windows/console/setconsoletextattribute>
         <https://docs.microsoft.com/en-us/windows/console/console-screen-buffers>  */
      SetConsoleTextAttribute (stream->handle, stream->current_console_attributes);
    }
  else
  #endif
    {
      attributes_t new_attr = stream->active_attr;
      /* Since stream->active_attr is not guaranteed to be loaded atomically,
         new_attr.color and new_attr.bgcolor may have invalid values.
         Use the atomically loadable values instead.  */
      new_attr.color = stream->active_attr_color;
      new_attr.bgcolor = stream->active_attr_bgcolor;
      new_attr.hyperlink = stream->active_attr_hyperlink;

      /* For out_char_unchecked to work.  */
      //out_stream = stream;
	  out_stream = (term_ostream_t)stream;
      out_fd = stream->fd;

      if (new_attr.color != COLOR_DEFAULT){
        //out_color_change (stream, new_attr.color, true);
	    out_color_change ((term_ostream_t)stream, (term_color_t)new_attr.color, true);
	  }
      if (new_attr.bgcolor != COLOR_DEFAULT){
        //out_bgcolor_change (stream, new_attr.bgcolor, true);
	    out_color_change ((term_ostream_t)stream, (term_color_t)new_attr.bgcolor, true);
	  }
	  if (new_attr.weight != WEIGHT_DEFAULT){
        //out_weight_change (stream, new_attr.weight, true);
	    out_color_change ((term_ostream_t)stream, (term_weight_t)new_attr.weight, true);
	  }
	  if (new_attr.posture != POSTURE_DEFAULT){
        //out_posture_change (stream, new_attr.posture, true);
	    out_color_change ((term_ostream_t)stream, (term_posture_t)new_attr.posture, true);
	  }
	  if (new_attr.underline != UNDERLINE_DEFAULT){
        //out_underline_change (stream, new_attr.underline, true);
	    out_color_change ((term_ostream_t)stream, (term_underline_t)new_attr.underline, true);
	  }
	  if (new_attr.hyperlink != NULL){
        //out_hyperlink_change (stream, new_attr.hyperlink, true);
	    out_color_change ((term_ostream_t)stream, (term_hyperlink_t)new_attr.hyperlink, true);
	  }
    }
}

lib/ostream.h 수정
typedef struct {
    BITFIELD_TYPE(term_color_t, signed int) color : 25;
    BITFIELD_TYPE(term_color_t, signed int) bgcolor : 25;
    BITFIELD_TYPE(term_weight_t, unsigned int) weight : 1;
    BITFIELD_TYPE(term_posture_t, unsigned int) posture : 1;
    BITFIELD_TYPE(term_underlink_t, unsigned int) underlink : 1;
    // 기타 필요한 멤버
    hyperlink_t *hyperlink;
} attributes_t;

(오류)
term-ostream.oo.c: In function 'equal_attributes':
term-ostream.oo.c:982:20: error: 'attributes_t' has no member named 'underline'; did you mean 'underlink'?
term-ostream.oo.c:982:39: error: 'attributes_t' has no member named 'underline'; did you mean 'underlink'?
term-ostream.oo.c: In function 'simplify_attributes':
term-ostream.oo.c:1128:14: error: 'attributes_t' has no member named 'underline'; did you mean 'underlink'?
term-ostream.oo.c:1142:10: error: 'attributes_t' has no member named 'underline'; did you mean 'underlink'?
term-ostream.oo.c: In function 'out_attr_change':
term-ostream.oo.c:1701:21: error: 'attributes_t' has no member named 'underline'; did you mean 'underlink'?
term-ostream.oo.c:1755:20: error: 'attributes_t' has no member named 'underline'; did you mean 'underlink'?
term-ostream.oo.c:1756:23: error: 'attributes_t' has no member named 'underline'; did you mean 'underlink'?
term-ostream.oo.c:1760:20: error: 'attributes_t' has no member named 'underline'; did you mean 'underlink'?
term-ostream.oo.c:1768:24: error: 'attributes_t' has no member named 'underline'; did you mean 'underlink'?
term-ostream.oo.c:1769:27: error: 'attributes_t' has no member named 'underline'; did you mean 'underlink'?
term-ostream.oo.c:1779:22: error: 'attributes_t' has no member named 'underline'; did you mean 'underlink'?
term-ostream.oo.c:1804:20: error: 'attributes_t' has no member named 'underline'; did you mean 'underlink'?
term-ostream.oo.c:1804:42: error: 'attributes_t' has no member named 'underline'; did you mean 'underlink'?
term-ostream.oo.c:1805:46: error: 'attributes_t' has no member named 'underline'; did you mean 'underlink'?
term-ostream.oo.c:1807:50: error: 'attributes_t' has no member named 'underline'; did you mean 'underlink'?
term-ostream.oo.c: In function 'async_set_attributes_from_default':
term-ostream.oo.c:1923:17: error: 'attributes_t' has no member named 'underline'; did you mean 'underlink'?
term-ostream.oo.c:1925:75: error: 'attributes_t' has no member named 'underline'; did you mean 'underlink'?
term-ostream.oo.c:1929:49: error: 'term_hyperlink_t' undeclared (first use in this function); did you mean 'term_underline_t'?
(수정)
lib/ostream.h 수정
typedef struct {
    BITFIELD_TYPE(term_color_t, signed int) color : 25;
    BITFIELD_TYPE(term_color_t, signed int) bgcolor : 25;
    BITFIELD_TYPE(term_weight_t, unsigned int) weight : 1;
    BITFIELD_TYPE(term_posture_t, unsigned int) posture : 1;
    BITFIELD_TYPE(term_underlink_t, unsigned int) underlink : 1;
    BITFIELD_TYPE(term_underline_t, unsigned int) underline : 1; //추가
	// 기타 필요한 멤버
    hyperlink_t *hyperlink;
} attributes_t;

(오류)
term-ostream.oo.c: In function 'async_set_attributes_from_default':
term-ostream.oo.c:1929:49: error: 'term_hyperlink_t' undeclared (first use in this function); 
did you mean 'term_underline_t'?

(수정)
lib/term-ostream.oo.c
static _GL_ASYNC_SAFE void
out_hyperlink_change (term_ostream_t stream, hyperlink_t *new_hyperlink,
                      bool async_safe)

static _GL_ASYNC_SAFE void
async_set_attributes_from_default (struct term_ostream_representation * stream)
{
if (new_attr.color != COLOR_DEFAULT){
//out_color_change (stream, new_attr.color, true);
    out_color_change ((term_ostream_t)stream, (term_color_t)new_attr.color, true);
  }
if (new_attr.bgcolor != COLOR_DEFAULT){
//out_bgcolor_change (stream, new_attr.bgcolor, true);
    out_bgcolor_change ((term_ostream_t)stream, (term_color_t)new_attr.bgcolor, true);
  }
  if (new_attr.weight != WEIGHT_DEFAULT){
//out_weight_change (stream, new_attr.weight, true);
    out_weight_change ((term_ostream_t)stream, (term_weight_t)new_attr.weight, true);
  }
  if (new_attr.posture != POSTURE_DEFAULT){
//out_posture_change (stream, new_attr.posture, true);
    out_posture_change ((term_ostream_t)stream, (term_posture_t)new_attr.posture, true);
  }
  if (new_attr.underline != UNDERLINE_DEFAULT){
//out_underline_change (stream, new_attr.underline, true);
    out_underline_change ((term_ostream_t)stream, (term_underline_t)new_attr.underline, true);
  }
  if (new_attr.hyperlink != NULL){
//out_hyperlink_change (stream, new_attr.hyperlink, true);
    out_hyperlink_change ((term_ostream_t)stream, (hyperlink_t *)new_attr.hyperlink, true); //수정
  }
}

lib/ostream.h 수정
/* Attributes that can be set on a character.  */
typedef struct {
    BITFIELD_TYPE(term_color_t, signed int) color : 25;
    BITFIELD_TYPE(term_color_t, signed int) bgcolor : 25;
    BITFIELD_TYPE(term_weight_t, unsigned int) weight : 1;
    BITFIELD_TYPE(term_posture_t, unsigned int) posture : 1;
    //BITFIELD_TYPE(term_underlink_t, unsigned int) underlink : 1; //주석처리
    BITFIELD_TYPE(term_underline_t, unsigned int) underline : 1;
	// 기타 필요한 멤버
    hyperlink_t *hyperlink; 
} attributes_t;

(오류)
term-ostream.oo.c:1936:3: error: initialization of 'struct term_style_control_data * (*)(struct any_ostream_representation *)' from incompatible pointer type 'struct term_style_control_data * (*)(struct term_ostream_representation *)' [-Wincompatible-pointer-types]
term-ostream.oo.c:1936:3: note: (near initialization for 'controller.get_control_data')

(수정)
헤더 파일에서의 정의
lib/term-ostream.h 수정
#define term_style_user_data term_ostream_representation
함수 포인터 선언
lib/term-style-control.h 수정
typedef struct term_style_control_data * (*get_control_data_func)(struct term_style_user_data *);
함수 정의
lib/term-ostream.c, lib/term-ostream.oo.c
struct term_style_control_data * get_control_data(struct term_ostream_representation *stream)
포인터 사용
lib/term-ostream.c, lib/term-ostream.oo.c
struct term_ostream_representation{} 존재해서 ostream.h에 추가했던 struct any_ostream_representation{} 제거 후
lib/term-ostream.h 에 #include "term_ostream.priv.h" 추가
#define term_ostream_representation any_ostream_representation 주석 제거

(오류)
lib/term_ostream.priv.h:37:3: error: expected specifier-qualifier-list before 'colormodel_t'
   37 |   colormodel_t volatile colormodel;
      |   ^~~~~~~~~~~~
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'colormodel_t' .
./gnulib-local/lib/term-ostream.oo.c:267:} colormodel_t;
./gnulib-local/lib/term-ostream.oo.c:1065:  colormodel_t volatile colormodel;
./lib/term-ostream.c:271:} colormodel_t;
./lib/term-ostream.oo.c:282:} colormodel_t;
./lib/term-ostream.oo.c:1056:  colormodel_t volatile colormodel;
./lib/term-ostream.oo.c-백업:282:} colormodel_t;
./lib/term-ostream.oo.c-백업:1056:  colormodel_t volatile colormodel;
./lib/term_ostream.priv.h:37:  colormodel_t volatile colormodel;

lib/term-ostream.oo.c, lib/term-ostream.c
/* ============================= Color models ============================= */
// lib/term_ostream.priv.h 로 이동
/* The color model used by the terminal.  */
// typedef enum
// {
//   cm_monochrome,        /* No colors.  */
//   cm_common8,           /* Usual terminal with at least 8 colors.  */
//   cm_xterm8,            /* TERM=xterm, with 8 colors.  */
//   cm_xterm16,           /* TERM=xterm-16color, with 16 colors.  */
//   cm_xterm88,           /* TERM=xterm-88color, with 88 colors.  */
//   cm_xterm256,          /* TERM=xterm-256color, with 256 colors.  */
//   cm_xtermrgb           /* TERM=xterm-direct, with 256*256*256 colors.  */
// } colormodel_t;

lib/term_ostream.priv.h 수정
/* ============================= Color models ============================= */
// lib/term-ostream.oo.c, lib/term-ostream.c 가져옴
/* The color model used by the terminal.  */
typedef enum
 {
   cm_monochrome,        /* No colors.  */
   cm_common8,           /* Usual terminal with at least 8 colors.  */
   cm_xterm8,            /* TERM=xterm, with 8 colors.  */
   cm_xterm16,           /* TERM=xterm-16color, with 16 colors.  */
   cm_xterm88,           /* TERM=xterm-88color, with 88 colors.  */
   cm_xterm256,          /* TERM=xterm-256color, with 256 colors.  */
   cm_xtermrgb           /* TERM=xterm-direct, with 256*256*256 colors.  */
 } colormodel_t;

(오류)
lib/term_ostream.priv.h:65:3: error: unknown type name 'uint32_t'
   65 |   uint32_t hostname_hash;
      |   ^~~~~~~~
lib/term_ostream.priv.h:6:1: note: 'uint32_t' is defined in header '<stdint.h>'; this is probably fixable by adding '#include <stdint.h>'
    5 | #include "ostream.priv.h"
  +++ |+#include <stdint.h>
    6 |
lib/term_ostream.priv.h:66:3: error: unknown type name 'uint64_t'
   66 |   uint64_t start_time;
      |   ^~~~~~~~
lib/term_ostream.priv.h:66:3: note: 'uint64_t' is defined in header '<stdint.h>'; this is probably fixable by adding '#include <stdint.h>'
lib/term_ostream.priv.h:67:3: error: unknown type name 'uint32_t'
   67 |   uint32_t id_serial;
      |   ^~~~~~~~
lib/term_ostream.priv.h:67:3: note: 'uint32_t' is defined in header '<stdint.h>'; this is probably fixable by adding '#include <stdint.h>'

(수정)
uint32_t와 uint64_t는 <stdint.h> 헤더 파일에서 정의된 타입
lib/term_ostream.priv 수정
#include <stdint.h>

(오류)
lib/gl_list.h:651:1: warning: 'nodiscard' attribute directive ignored [-Wattributes]
  651 | {
      | ^
(수정)
configure.ac 수정
# Set C++ standard to C++17
CXXFLAGS="$CXXFLAGS -std=c++17"
AC_SUBST(CXXFLAGS)

AC_MSG_CHECKING([whether the compiler supports __attribute__((nodiscard))])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[__attribute__((nodiscard)) int x;]])],
  [AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_NODISCARD], [__attribute__((nodiscard))], [Define for attribute nodiscard])],
  [AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_NODISCARD], [], [Define for attribute nodiscard])]
)
AC_MSG_RESULT([done])

(오류)
lib/ostream.priv.h:5:8: error: redefinition of 'struct ostream_representation'
    5 | struct ostream_representation
      |        ^~~~~~~~~~~~~~~~~~~~~~
(수정)
lib/ostream.priv.h 수정
#ifndef OSTREAM_PRIV_H
#define OSTREAM_PRIV_H
...
#endif // OSTREAM_PRIV_H

(오류)
lib/term_ostream.priv.h:13:4: error: redeclaration of enumerator 'cm_monochrome'
   13 |    cm_monochrome,        /* No colors.  */
      |    ^~~~~~~~~~~~~
(수정)
/gnulib-local/lib/term-ostream.oo.c 수정
/* The color model used by the terminal.  */
//typedef enum
//{
//  cm_monochrome,        /* No colors.  */
//  cm_common8,           /* Usual terminal with at least 8 colors.  */
//  cm_xterm8,            /* TERM=xterm, with 8 colors.  */
//  cm_xterm16,           /* TERM=xterm-16color, with 16 colors.  */
//  cm_xterm88,           /* TERM=xterm-88color, with 88 colors.  */
//  cm_xterm256,          /* TERM=xterm-256color, with 256 colors.  */
//  cm_xtermrgb           /* TERM=xterm-direct, with 256*256*256 colors.  */
//} colormodel_t;

(오류)
In file included from term-ostream.c:1039:
lib/term_ostream.priv.h:13:4: error: redeclaration of enumerator 'cm_monochrome'
   13 |    cm_monochrome,        /* No colors.  */
      |    ^~~~~~~~~~~~~
In file included from term-ostream.oo.h:29,
                 from term-ostream.oo.c:21:
lib/term_ostream.priv.h:13:4: note: previous definition of 'cm_monochrome' with type 'enum <anonymous>'
   13 |    cm_monochrome,        /* No colors.  */
      |    ^~~~~~~~~~~~~
lib/term_ostream.priv.h:14:4: error: redeclaration of enumerator 'cm_common8'
   14 |    cm_common8,           /* Usual terminal with at least 8 colors.  */
      |    ^~~~~~~~~~
lib/term_ostream.priv.h:14:4: note: previous definition of 'cm_common8' with type 'enum <anonymous>'
   14 |    cm_common8,           /* Usual terminal with at least 8 colors.  */
      |    ^~~~~~~~~~
lib/term_ostream.priv.h:15:4: error: redeclaration of enumerator 'cm_xterm8'
   15 |    cm_xterm8,            /* TERM=xterm, with 8 colors.  */
      |    ^~~~~~~~~
lib/term_ostream.priv.h:15:4: note: previous definition of 'cm_xterm8' with type 'enum <anonymous>'
   15 |    cm_xterm8,            /* TERM=xterm, with 8 colors.  */
      |    ^~~~~~~~~
lib/term_ostream.priv.h:16:4: error: redeclaration of enumerator 'cm_xterm16'
   16 |    cm_xterm16,           /* TERM=xterm-16color, with 16 colors.  */
      |    ^~~~~~~~~~
lib/term_ostream.priv.h:16:4: note: previous definition of 'cm_xterm16' with type 'enum <anonymous>'
   16 |    cm_xterm16,           /* TERM=xterm-16color, with 16 colors.  */
      |    ^~~~~~~~~~
lib/term_ostream.priv.h:17:4: error: redeclaration of enumerator 'cm_xterm88'
   17 |    cm_xterm88,           /* TERM=xterm-88color, with 88 colors.  */
      |    ^~~~~~~~~~
lib/term_ostream.priv.h:17:4: note: previous definition of 'cm_xterm88' with type 'enum <anonymous>'
   17 |    cm_xterm88,           /* TERM=xterm-88color, with 88 colors.  */
      |    ^~~~~~~~~~
lib/term_ostream.priv.h:18:4: error: redeclaration of enumerator 'cm_xterm256'
   18 |    cm_xterm256,          /* TERM=xterm-256color, with 256 colors.  */
      |    ^~~~~~~~~~~
lib/term_ostream.priv.h:18:4: note: previous definition of 'cm_xterm256' with type 'enum <anonymous>'
   18 |    cm_xterm256,          /* TERM=xterm-256color, with 256 colors.  */
      |    ^~~~~~~~~~~
lib/term_ostream.priv.h:19:4: error: redeclaration of enumerator 'cm_xtermrgb'
   19 |    cm_xtermrgb           /* TERM=xterm-direct, with 256*256*256 colors.  */
      |    ^~~~~~~~~~~
lib/term_ostream.priv.h:19:4: note: previous definition of 'cm_xtermrgb' with type 'enum <anonymous>'
   19 |    cm_xtermrgb           /* TERM=xterm-direct, with 256*256*256 colors.  */
      |    ^~~~~~~~~~~
lib/term_ostream.priv.h:20:4: error: conflicting types for 'colormodel_t'; have 'enum <anonymous>'
   20 |  } colormodel_t;
      |    ^~~~~~~~~~~~
lib/term_ostream.priv.h:20:4: note: previous declaration of 'colormodel_t' with type 'colormodel_t'
   20 |  } colormodel_t;
      |    ^~~~~~~~~~~~
lib/term_ostream.priv.h:92:37: error: unknown type name 'any_ostream_representation'; did you mean 'term_ostream_representation'?
   92 | #define term_ostream_representation any_ostream_representation
      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'cm_monochrome,' .
./lib/term_ostream.priv.h:13:   cm_monochrome,        /* No colors.  */

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'colormodel_t;' .
./lib/term_ostream.priv.h:20: } colormodel_t;

# aclocal && autoconf && autoheader && automake --add-missing && libtoolize && autoreconf -ivf && ./configure && make clean && make
aclocal: aclocal.m4 파일을 생성하거나 업데이트하여, configure.ac에서 사용하는 매크로를 준비합니다.
autoconf: configure 스크립트를 생성합니다. configure.ac 파일에 기반하여 configure 스크립트를 자동으로 생성합니다.
autoheader: config.h.in 파일을 생성합니다. 이 파일은 configure 스크립트가 config.h를 생성하는 데 사용됩니다.
automake --add-missing: Makefile.am에 정의된 파일을 기반으로 Makefile.in을 생성하고, 필요한 missing 파일을 추가합니다.
libtoolize: libtool 관련 파일을 추가하거나 업데이트합니다. libtool을 사용하는 프로젝트에 필요합니다.
autoreconf -ivf: 위의 모든 도구를 호출하여 configure 스크립트와 관련된 파일들을 업데이트합니다. 
-i는 누락된 파일을 설치하고, -v는 상세 출력을 제공하며, -f는 강제로 재생성합니다.
./configure: configure 스크립트를 실행하여 프로젝트의 빌드 환경을 설정합니다. 이 단계에서 사용자 시스템에 맞는 설정을 검사하고, Makefile을 생성합니다.
make clean: 이전 빌드의 결과물들을 제거합니다. Makefile에 정의된 클린 작업을 수행하여 깨끗한 상태에서 빌드를 시작합니다.
make: 소스 코드를 컴파일하고, 지정된 빌드 작업을 수행합니다. 이 명령어는 Makefile을 기반으로 빌드를 진행합니다.

중복선언확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn '#include "term_ostream.priv.h"' .
./lib/term-ostream.c:1016:#include "term_ostream.priv.h" => 주석처리
./lib/term-ostream.h:33:#include "term_ostream.priv.h"

lib/term-ostream.h 수정
#include <windows.h> /*추가 HANDLE*/
#include <stdbool.h>
#include "term_ostream.priv.h" //위치이동
#include "error.h" /*추가*/
#include "full-write.h" /*추가*/
#include "terminfo.h" /*추가*/
#include "term-style-control.h" /*추가*/
#include "fsync.h" /*추가*/
#include "ostream.h"  

(오류)
In file included from term-ostream.oo.h:23,
                 from lib/color.c:32:
lib/term_ostream.priv.h:33:3: error: unknown type name 'ttyctl_t'
   33 |   ttyctl_t tty_control;
      |   ^~~~~~~~
lib/term_ostream.priv.h:64:34: error: field 'control_data' has incomplete type
   64 |   struct term_style_control_data control_data;
      |                                  ^~~~~~~~~~~~
lib/term_ostream.priv.h:70:3: error: unknown type name 'hyperlink_t'
   70 |   hyperlink_t **hyperlinks_array;
      |   ^~~~~~~~~~~
lib/term_ostream.priv.h:78:3: error: unknown type name 'attributes_t'; did you mean '__attribute__'?
   78 |   attributes_t default_attr;
      |   ^~~~~~~~~~~~
      |   __attribute__
lib/term_ostream.priv.h:79:3: error: expected specifier-qualifier-list before 'attributes_t'
   79 |   attributes_t volatile active_attr;
      |   ^~~~~~~~~~~~
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'ttyctl_t;' .                                                                 
./lib/term-style-control.h:79://} ttyctl_t;
./lib/textstyle.h:284:} ttyctl_t;
./lib/textstyle.in.h:354:} ttyctl_t;

lib/term_ostream.priv.h 수정
#include "textstyle.h" //ttyctl_t
#include "ostream.h" //attributes_t, hyperlink_t,  term_style_control_data => 제거 후 가져옴

(오류)
lib/term_ostream.priv.h:58:5: error: expected specifier-qualifier-list before 'colormodel_t'
   58 |     colormodel_t volatile colormodel;
      |     ^~~~~~~~~~~~

(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'colormodel_t;' .

./gnulib-local/lib/term-ostream.oo.c:267://} colormodel_t;
./lib/term-ostream.c:271:// } colormodel_t;
./lib/term-ostream.oo.c:282:// } colormodel_t;
./lib/term-ostream.oo.c-백업:282:} colormodel_t;

lib/term_ostream.priv.h 수정
/* ============================= Color models ============================= */
/* The color model used by the terminal.  */
/* term-ostream.oo.c 에서 가져옴*/
 typedef enum
 {
   cm_monochrome,        /* No colors.  */
   cm_common8,           /* Usual terminal with at least 8 colors.  */
   cm_xterm8,            /* TERM=xterm, with 8 colors.  */
   cm_xterm16,           /* TERM=xterm-16color, with 16 colors.  */
   cm_xterm88,           /* TERM=xterm-88color, with 88 colors.  */
   cm_xterm256,          /* TERM=xterm-256color, with 256 colors.  */
   cm_xtermrgb           /* TERM=xterm-direct, with 256*256*256 colors.  */
 } colormodel_t;


(오류)
In file included from lib/color.c:32:
term-ostream.h:79:44: error: conflicting types for 'term_ostream_t'; have 'struct any_ostream_representation'
In file included from lib/term_ostream.priv.h:6,
                 from term-ostream.oo.h:23:
lib/textstyle.h:287:19: note: previous declaration of 'term_ostream_t' with type 'term_ostream_t' {aka 'struct any_ostream_representation *'}
  287 | typedef ostream_t term_ostream_t;
      |                   ^~~~~~~~~~~~~~

(수정)
lib/term_ostream.priv.h
#define term_ostream_representation any_ostream_representation

term_ostream_t는 struct any_ostream_representation *로 정의되어야 함
term_ostream_representation은 any_ostream_representation으로 매크로 정의되어 있기 때문에, 두 구조체는 동일하다는 의미
term_ostream_t가 struct any_ostream_representation *로 정의되도록 코드를 조정

lib/term-ostream.oo.h, lib/term-ostream.h 수정
typedef struct term_ostream_representation term_ostream_t;
#if IS_CPLUSPLUS
// C++에서의 term_ostream_t 정의
struct term_ostream_t
{
private:
    struct term_ostream_representation *_pointer;
public:
    term_ostream_t () : _pointer (NULL) {}
    term_ostream_t (struct term_ostream_representation *pointer) : _pointer (pointer) {}
    struct term_ostream_representation * operator -> () { return _pointer; }
    operator struct term_ostream_representation * () { return _pointer; }
    operator struct any_ostream_representation * () { return (struct any_ostream_representation *) _pointer; }
    operator void * () { return _pointer; }
    bool operator == (const void *p) { return _pointer == p; }
    bool operator != (const void *p) { return _pointer != p; }
    operator ostream_t () { return (ostream_t) (struct any_ostream_representation *) _pointer; }
    explicit term_ostream_t (ostream_t x) : _pointer ((struct term_ostream_representation *) (void *) x) {}
    int current_console_attributes;
};
#else
// C에서의 term_ostream_t 정의
typedef struct any_ostream_representation * term_ostream_t;  // C에서는 포인터 타입으로 정의
#endif

(오류)
error: invalid use of undefined type 'struct any_ostream_resentation'
(수정)
lib/term_ostream.priv.h
struct term_ostream_representation { ]
#define term_ostream_representation any_ostream_representation
term_ostream_representation을 any_ostream_representation으로 정의하고, 
term_ostream_representation이라는 별칭으로 사용
=> any_ostream_representation에 대한 정의가 없어서 문제
최상단,최하단의 
#ifndef TERM_OSTREAM_PRIV_H
#define TERM_OSTREAM_PRIV_H
#endif // TERM_OSTREAM_PRIV_H 제거

(오류)
lib/term_ostream.priv.h:14:5: error: redeclaration of enumerator 'cm_monochrome'
   14 |     cm_monochrome,        /* No colors.  */
      |     ^~~~~~~~~~~~~
In file included from term-ostream.oo.h:23:
lib/term_ostream.priv.h:14:5: note: previous definition of 'cm_monochrome' with type 'enum <anonymous>'
   14 |     cm_monochrome,        /* No colors.  */
      |     ^~~~~~~~~~~~~
lib/term_ostream.priv.h:15:5: error: redeclaration of enumerator 'cm_common8'
   15 |     cm_common8,           /* Usual terminal with at least 8 colors.  */
      |     ^~~~~~~~~~
lib/term_ostream.priv.h:15:5: note: previous definition of 'cm_common8' with type 'enum <anonymous>'
   15 |     cm_common8,           /* Usual terminal with at least 8 colors.  */
      |     ^~~~~~~~~~
lib/term_ostream.priv.h:16:5: error: redeclaration of enumerator 'cm_xterm8'
   16 |     cm_xterm8,            /* TERM=xterm, with 8 colors.  */
      |     ^~~~~~~~~
lib/term_ostream.priv.h:16:5: note: previous definition of 'cm_xterm8' with type 'enum <anonymous>'
   16 |     cm_xterm8,            /* TERM=xterm, with 8 colors.  */
      |     ^~~~~~~~~
lib/term_ostream.priv.h:17:5: error: redeclaration of enumerator 'cm_xterm16'
   17 |     cm_xterm16,           /* TERM=xterm-16color, with 16 colors.  */
      |     ^~~~~~~~~~
lib/term_ostream.priv.h:17:5: note: previous definition of 'cm_xterm16' with type 'enum <anonymous>'
   17 |     cm_xterm16,           /* TERM=xterm-16color, with 16 colors.  */
      |     ^~~~~~~~~~
lib/term_ostream.priv.h:18:5: error: redeclaration of enumerator 'cm_xterm88'
   18 |     cm_xterm88,           /* TERM=xterm-88color, with 88 colors.  */
      |     ^~~~~~~~~~
lib/term_ostream.priv.h:18:5: note: previous definition of 'cm_xterm88' with type 'enum <anonymous>'
   18 |     cm_xterm88,           /* TERM=xterm-88color, with 88 colors.  */
      |     ^~~~~~~~~~
lib/term_ostream.priv.h:19:5: error: redeclaration of enumerator 'cm_xterm256'
   19 |     cm_xterm256,          /* TERM=xterm-256color, with 256 colors.  */
      |     ^~~~~~~~~~~
lib/term_ostream.priv.h:19:5: note: previous definition of 'cm_xterm256' with type
enum <anonymous>'
   19 |     cm_xterm256,          /* TERM=xterm-256color, with 256 colors.  */
      |     ^~~~~~~~~~~
lib/term_ostream.priv.h:20:5: error: redeclaration of enumerator 'cm_xtermrgb'
   20 |     cm_xtermrgb           /* TERM=xterm-direct, with 256*256*256 colors.  */
      |     ^~~~~~~~~~~
lib/term_ostream.priv.h:20:5: note: previous definition of 'cm_xtermrgb' with type
enum <anonymous>'
   20 |     cm_xtermrgb           /* TERM=xterm-direct, with 256*256*256 colors.  */
      |     ^~~~~~~~~~~
lib/term_ostream.priv.h:21:3: error: conflicting types for 'colormodel_t'; have 'enum <anonymous>'
   21 | } colormodel_t;
      |   ^~~~~~~~~~~~
lib/term_ostream.priv.h:21:3: note: previous declaration of 'colormodel_t' with type 'colormodel_t'
   21 | } colormodel_t;
      |   ^~~~~~~~~~~~
lib/term_ostream.priv.h:30:3: error: conflicting types for 'term_style_control_data'; have 'struct <anonymous>'
   30 | } term_style_control_data;
      |   ^~~~~~~~~~~~~~~~~~~~~~~
lib/term_ostream.priv.h:30:3: note: previous declaration of 'term_style_control_dat
' with type 'term_style_control_data'
   30 | } term_style_control_data;
      |   ^~~~~~~~~~~~~~~~~~~~~~~
lib/term_ostream.priv.h:32:44: error: conflicting types for 'any_ostream_representation'; have 'struct any_ostream_representation'
   32 | typedef struct term_ostream_representation any_ostream_representation;
      |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
lib/term_ostream.priv.h:32:44: note: previous declaration of 'any_ostream_representation' with type 'any_ostream_representation' {aka 'struct term_ostream_representation'}
   32 | typedef struct term_ostream_representation any_ostream_representation;
      |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
lib/term_ostream.priv.h:40:3: error: conflicting types for 'hyperlink_t'; have 'struct <anonymous>'
   40 | } hyperlink_t;
      |   ^~~~~~~~~~~
lib/term_ostream.priv.h:40:3: note: previous declaration of 'hyperlink_t' with type 'hyperlink_t'
   40 | } hyperlink_t;
      |   ^~~~~~~~~~~
lib/term_ostream.priv.h:49:3: error: conflicting types for 'attributes_t'; have 'struct <anonymous>'
   49 | } attributes_t;
      |   ^~~~~~~~~~~~
lib/term_ostream.priv.h:49:3: note: previous declaration of 'attributes_t' with type 'attributes_t'
   49 | } attributes_t;
      |   ^~~~~~~~~~~~

(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'cm_monochrome,' .                                                       
./gnulib-local/lib/term-ostream.oo.c:260://  cm_monochrome,        /* No colors.  */
./lib/term-ostream.c:264://   cm_monochrome,        /* No colors.  */
./lib/term-ostream.oo.c:275://   cm_monochrome,        /* No colors.  */
./lib/term-ostream.oo.c-백업:275:  cm_monochrome,        /* No colors.  */
./lib/term_ostream.priv.h:14:    cm_monochrome,        /* No colors.  */
./백업/lib/term-ostream.c:266:  cm_monochrome,        /* No colors.  */
./백업/lib/term-ostream.oo.c:262:  cm_monochrome,        /* No colors.  */
lib/ostream.priv.h 수정
#ifndef OSTREAM_PRIV_H
#define OSTREAM_PRIV_H
#include "config.h"
/* DO NOT EDIT! GENERATED AUTOMATICALLY! */

/* Define the ostream_representation structure */
struct ostream_representation
{
  const void *vtable;
};

/* Define any_ostream_representation as an alias for ostream_representation */
typedef struct ostream_representation any_ostream_representation;

#endif // OSTREAM_PRIV_H

lib/term_ostream.priv.h 수정
#ifndef TERM_OSTREAM_PRIV_H
#define TERM_OSTREAM_PRIV_H

#include "ostream.priv.h"  // Include the header where any_ostream_representation is defined
#include <pthread.h>       // Mutex
#include "textstyle.h"    // ttyctl_t 정의가 포함된 헤더

#ifndef COLORMODEL_H
#define COLORMODEL_H

/* ============================= Color models ============================= */
/* The color model used by the terminal.  */
typedef enum
{
    cm_monochrome,        /* No colors.  */
    cm_common8,           /* Usual terminal with at least 8 colors.  */
    cm_xterm8,            /* TERM=xterm, with 8 colors.  */
    cm_xterm16,           /* TERM=xterm-16color, with 16 colors.  */
    cm_xterm88,           /* TERM=xterm-88color, with 88 colors.  */
    cm_xterm256,          /* TERM=xterm-256color, with 256 colors.  */
    cm_xtermrgb           /* TERM=xterm-direct, with 256*256*256 colors.  */
} colormodel_t;

#endif // COLORMODEL_H

#ifndef TERM_STYLE_CONTROL_DATA_H
#define TERM_STYLE_CONTROL_DATA_H

typedef struct {
    int volatile fd;
    ttyctl_t volatile tty_control;
    #if HAVE_TCGETATTR
    bool volatile same_as_stderr;
    #endif
    bool non_default_active;
} term_style_control_data;

#endif // TERM_STYLE_CONTROL_DATA_H

#ifndef HYPERLINK_T_H
#define HYPERLINK_T_H

typedef struct {
    char *url;
    char *ref;
    char *id;
    char *real_id;
} hyperlink_t;

#endif // HYPERLINK_T_H

#ifndef ATTRIBUTES_T_H
#define ATTRIBUTES_T_H

typedef struct {
    BITFIELD_TYPE(term_color_t, signed int) color : 25;
    BITFIELD_TYPE(term_color_t, signed int) bgcolor : 25;
    BITFIELD_TYPE(term_weight_t, unsigned int) weight : 1;
    BITFIELD_TYPE(term_posture_t, unsigned int) posture : 1;
    BITFIELD_TYPE(term_underline_t, unsigned int) underline : 1;
    hyperlink_t *hyperlink;
} attributes_t;

#endif // ATTRIBUTES_T_H

/* Define the term_ostream_representation structure */
struct term_ostream_representation {
    any_ostream_representation base; // Use the alias here
    int fd;
    #if HAVE_WINDOWS_CONSOLES
    HANDLE handle;
    bool is_windows_console;
    #endif
    char *filename;
    ttyctl_t tty_control;
    int max_colors;
    int no_color_video;
    char *set_a_foreground;
    char *set_foreground;
    char *set_a_background;
    char *set_background;
    char *orig_pair;
    char *enter_bold_mode;
    char *enter_italics_mode;
    char *exit_italics_mode;
    char *enter_underline_mode;
    char *exit_underline_mode;
    char *exit_attribute_mode;
    bool supports_foreground;
    bool supports_background;
    colormodel_t colormodel;
    bool supports_weight;
    bool supports_posture;
    bool supports_underline;
    bool supports_hyperlink;
    const char *restore_colors;
    const char *restore_weight;
    const char *restore_posture;
    const char *restore_underline;
    const char *restore_hyperlink;
    term_style_control_data control_data;
    uint32_t hostname_hash;
    uint64_t start_time;
    uint32_t id_serial;
    hyperlink_t **hyperlinks_array;
    size_t hyperlinks_count;
    size_t hyperlinks_allocated;
    #if HAVE_WINDOWS_CONSOLES
    WORD default_console_attributes;
    WORD current_console_attributes;
    #endif
    attributes_t default_attr;
    attributes_t active_attr;
    term_color_t active_attr_color;
    term_color_t active_attr_bgcolor;
    hyperlink_t *active_attr_hyperlink;
    char *buffer;
    attributes_t *attrbuffer;
    size_t buflen;
    size_t allocated;
    attributes_t curr_attr;
    attributes_t simp_attr;
    pthread_mutex_t mutex; // Mutex for thread safety
};

#endif // TERM_OSTREAM_PRIV_H


(오류)
lib/term_ostream.priv.h:102:5: error: unknown type name 'uint32_t'
  102 |     uint32_t hostname_hash;
      |     ^~~~~~~~
(수정)
lib/term_ostream.priv.h수정
#include <stdint.h>		   // uint32_t, uint64_t 

(오류)
 error: invalid use of undefined type 'struct any_ostream_representation'
(수정)
lib/ostream.priv.h 수정
#ifndef OSTREAM_PRIV_H
#define OSTREAM_PRIV_H
struct ostream_representation
{
  const void *vtable;
};
#endif // OSTREAM_PRIV_H
lib/term_ostream.priv.h 수정
#include <pthread.h>       // Mutex
#include <stdint.h>        // uint32_t, uint64_t
#include "textstyle.h"    // ttyctl_t 정의가 포함된 헤더
#include "ostream.priv.h"  // Include the header where any_ostream_representation is defined


#ifndef COLORMODEL_H
#define COLORMODEL_H

/* ============================= Color models ============================= */
/* The color model used by the terminal.  */
typedef enum
{
    cm_monochrome,        /* No colors.  */
    cm_common8,           /* Usual terminal with at least 8 colors.  */
    cm_xterm8,            /* TERM=xterm, with 8 colors.  */
    cm_xterm16,           /* TERM=xterm-16color, with 16 colors.  */
    cm_xterm88,           /* TERM=xterm-88color, with 88 colors.  */
    cm_xterm256,          /* TERM=xterm-256color, with 256 colors.  */
    cm_xtermrgb           /* TERM=xterm-direct, with 256*256*256 colors.  */
} colormodel_t;

#endif // COLORMODEL_H

#ifndef TERM_STYLE_CONTROL_DATA_H
#define TERM_STYLE_CONTROL_DATA_H

typedef struct {
    int volatile fd;
    ttyctl_t volatile tty_control;
    #if HAVE_TCGETATTR
    bool volatile same_as_stderr;
    #endif
    bool non_default_active;
} term_style_control_data;

#endif // TERM_STYLE_CONTROL_DATA_H

#ifndef HYPERLINK_T_H
#define HYPERLINK_T_H

typedef struct {
    char *url;
    char *ref;
    char *id;
    char *real_id;
} hyperlink_t;

#endif // HYPERLINK_T_H

#ifndef ATTRIBUTES_T_H
#define ATTRIBUTES_T_H

typedef struct {
    BITFIELD_TYPE(term_color_t, signed int) color : 25;
    BITFIELD_TYPE(term_color_t, signed int) bgcolor : 25;
    BITFIELD_TYPE(term_weight_t, unsigned int) weight : 1;
    BITFIELD_TYPE(term_posture_t, unsigned int) posture : 1;
    BITFIELD_TYPE(term_underline_t, unsigned int) underline : 1;
    hyperlink_t *hyperlink;
} attributes_t;

#endif // ATTRIBUTES_T_H

#ifndef TERM_OSTREAM_PRIV_H
#define TERM_OSTREAM_PRIV_H

/* Define the term_ostream_representation structure */
//struct term_ostream_representation {
struct any_ostream_representation { 
    struct ostream_representation base;
    int fd;
    #if HAVE_WINDOWS_CONSOLES
    HANDLE handle;
    bool is_windows_console;
    #endif
    char *filename;
    ttyctl_t tty_control;
    int max_colors;
    int no_color_video;
    char *set_a_foreground;
    char *set_foreground;
    char *set_a_background;
    char *set_background;
    char *orig_pair;
    char *enter_bold_mode;
    char *enter_italics_mode;
    char *exit_italics_mode;
    char *enter_underline_mode;
    char *exit_underline_mode;
    char *exit_attribute_mode;
    bool supports_foreground;
    bool supports_background;
    colormodel_t colormodel;
    bool supports_weight;
    bool supports_posture;
    bool supports_underline;
    bool supports_hyperlink;
    const char *restore_colors;
    const char *restore_weight;
    const char *restore_posture;
    const char *restore_underline;
    const char *restore_hyperlink;
    term_style_control_data control_data;
    uint32_t hostname_hash;
    uint64_t start_time;
    uint32_t id_serial;
    hyperlink_t **hyperlinks_array;
    size_t hyperlinks_count;
    size_t hyperlinks_allocated;
    #if HAVE_WINDOWS_CONSOLES
    WORD default_console_attributes;
    WORD current_console_attributes;
    #endif
    attributes_t default_attr;
    attributes_t active_attr;
    term_color_t active_attr_color;
    term_color_t active_attr_bgcolor;
    hyperlink_t *active_attr_hyperlink;
    char *buffer;
    attributes_t *attrbuffer;
    size_t buflen;
    size_t allocated;
    attributes_t curr_attr;
    attributes_t simp_attr;
    pthread_mutex_t mutex; // Mutex for thread safety
};

// Define any_ostream_representation as term_ostream_representation
//#define term_ostream_representation any_ostream_representation

#endif /* TERM_OSTREAM_PRIV_H */

(오류)
'is_windows_console'
term-ostream.oo.c:1298:45: error: 'struct any_ostream_representation' has no member named 'current_console_attributes'
term-ostream.oo.c:1308:43: error: 'struct any_ostream_representation' has no member named 'handle'
term-ostream.oo.c:1696:20: error: 'struct any_ostream_representation' has no member named 'default_console_attributes'
term-ostream.oo.c:1308:43: error: 'struct any_ostream_representation' has no member named 'handle'

(수정)
lib/term-ostream.priv.h 수정
struct any_ostream_representation {
    int is_windows_console;               // 윈도우 콘솔 여부를 나타내는 플래그
    int current_console_attributes;       // 현재 콘솔 속성 (색상, 스타일 등)
    int default_console_attributes;       // 기본 콘솔 속성
    HANDLE handle;                        // 콘솔 핸들 (윈도우에서 사용)
}

(오류)
term-ostream.oo.c: In function 'get_control_data':
term-ostream.oo.c:1113:10: error: returning 'term_style_control_data *' from a function with incompatible return type 'struct term_style_control_data *' [-Wincompatible-pointer-types]
term-ostream.oo.c: At top level:
term-ostream.oo.c:72:37: error: unknown type name 'any_ostream_representation'; did you mean 'term_ostream_representation'?
term-ostream.oo.c:1959:55: note: in expansion of macro 'term_ostream_representation'
term-ostream.oo.c: In function 'output_buffer':
term-ostream.oo.c:2006:50: error: implicit declaration of function 'convert_to_term_style_user_data' [-Wimplicit-function-declaration]
term-ostream.oo.c:2006:50: error: passing argument 2 of 'activate_term_non_default_mode' makes pointer from integer without a cast [-Wint-conversion]
(수정)


(오류)
lib/term-style-control.h:37:74: warning: 'struct term_style_user_data' declared inside parameter list will not be visible outside of this definition or declaration
   37 | typedef struct term_style_control_data * (*get_control_data_func)(struct term_style_user_data *user_data);
      |                                                                          ^~~~~~~~~~~~~~~~~~~~
ostream.oo.h:33:16: error: redefinition of 'struct term_style_user_data'
lib/term-style-control.h:99:16: note: originally defined here
   99 | typedef struct term_style_user_data {
      |                ^~~~~~~~~~~~~~~~~~~~
ostream.oo.h:36:3: error: conflicting types for 'term_style_user_data'; have 'struct term_style_user_data'
lib/term-style-control.h:101:3: note: previous declaration of 'term_style_user_data' with type 'term_style_user_data'
  101 | } term_style_user_data;
      |   ^~~~~~~~~~~~~~~~~~~~
(수정)
lib/ostream.h, lib/ostream.oo.h 수정
//typedef struct term_style_user_data {
//    term_style_control_data *control_data;
//    // 다른 필요한 멤버들 정의
//} term_style_user_data;

(오류)
lib/term-style-control.h:36:74: warning: 'struct term_style_user_data' declared inside parameter list will not be visible outside of this definition or declaration
   36 | typedef struct term_style_control_data * (*get_control_data_func)(struct term_style_user_data *);
      |                                                                          ^~~~~~~~~~~~~~~~~~~~

(수정)
struct term_style_user_data를 사용하는 함수 포인터 선언에서 경고가 발생
lib/term-style-control.h 수정
typedef struct term_style_control_data {
    int volatile fd;
    ttyctl_t volatile tty_control;     /* 신호 처리 및 tty 제어 */
    #if HAVE_TCGETATTR
    bool volatile same_as_stderr;
    #endif
    bool non_default_active;           /* activate_term_non_default_mode() 가 활성화된 경우 */
} term_style_control_data;

typedef struct term_style_user_data {
    // 터미널 스타일 제어에 필요한 데이터
    term_style_control_data *control_data;

    // 추가적인 터미널 설정 정보
    int some_terminal_setting;

    // 스타일 설정을 위한 함수 포인터
    void (*custom_style_function)(void);

    // 상태 플래그
    bool is_active;

    // 기타 필요한 데이터
    // ...
} term_style_user_data;

/*수정*/
typedef struct term_style_control_data * (*get_control_data_func)(struct term_style_user_data *);

(오류)
term-ostream.oo.c:72:37: error: unknown type name 'any_ostream_representation'; did you mean 'term_ostream_representation'?
term-ostream.oo.c:1960:55: note: in expansion of macro 'term_ostream_representation'
(수정)
lib/term-ostream.oo.c, lib/term-ostream.c 수정
//#define term_ostream_representation any_ostream_representation

(오류)
term-ostream.oo.c:62:36: warning: 'struct term_ostream_representatio
' declared inside parameter list will not be visible outside of this definition or declaration
(수정)

(오류)
lib/color.c:147:22: error: passing argument 1 of 'ostream_write_str' from incompatible pointer type [-Wincompatible-pointer-types]
  147 |   ostream_write_str (stream, "\n");
      |                      ^~~~~~
      |                      |
      |                      term_ostream_t
(수정)
lib/color.c
#include "ostream.h"
term_ostream_t stream;
ostream_write_str (stream, "Colors (foreground/background):\n");

lib/ostream.h, lib/ostream.oo.h
//extern void ostream_write_str(ostream_t stream, const char *string);
extern void ostream_write_str(term_ostream_t stream, const char *string);

static inline void
//ostream_write_str(ostream_t stream, const char *string)
ostream_write_str(term_ostream_t stream, const char *string)
{
  ostream_write_mem(stream, string, strlen(string));
}

#ifdef __cplusplus
extern "C" {
#endif
//extern void ostream_write_mem(ostream_t first_arg, const void *data, size_t len);
//extern void ostream_flush(ostream_t first_arg, ostream_flush_scope_t scope);
//extern void ostream_free(ostream_t first_arg);
extern void ostream_write_mem(term_ostream_t first_arg, const void *data, size_t len);
extern void ostream_flush(term_ostream_t first_arg, ostream_flush_scope_t scope);
extern void ostream_free(term_ostream_t first_arg);
#ifdef __cplusplus
}
#endif

static inline void
//ostream_write_mem(ostream_t first_arg, const void *data, size_t len)
ostream_write_mem(term_ostream_t first_arg, const void *data, size_t len)
{
  const struct ostream_implementation *vtable =
    ((struct ostream_representation_header *) (struct term_ostream_representation *) first_arg)->vtable;
  vtable->write_mem(first_arg, data, len);
}

(오류)
lib/ostream.h:18:3: error: redeclaration of enumerator 'FLUSH_THIS_STREAM'
   18 |   FLUSH_THIS_STREAM = 0,   /* Flushes buffers in this ostream_t. */
      |   ^~~~~~~~~~~~~~~~~

(수정)
/* Describes the scope of a flush operation.  */
// textstyle.h에 있음
// typedef enum
// {
//   FLUSH_THIS_STREAM = 0,   /* Flushes buffers in this ostream_t. */
//   FLUSH_THIS_PROCESS = 1,  /* Flushes all buffers in the current process. */
//   FLUSH_ALL = 2            /* Flushes buffers in the current process and attempts to flush the buffers in the kernel. */
// } ostream_flush_scope_t;

(오류)
lib/ostream.h:50:45: error: conflicting types for 'ostream_t'; have
struct term_ostream_representation *'
   50 | typedef struct term_ostream_representation *ostream_t;
      |                                             ^~~~~~~~~
In file included from lib/term_ostream.priv.h:6:
lib/textstyle.h:66:45: note: previous declaration of 'ostream_t' with type 'ostream_t' {aka 'struct any_ostream_representation *'}
   66 | typedef struct any_ostream_representation * ostream_t;
      |                                             ^~~~~~~~~
(수정)
lib/textstyle.h 수정
#include "ostream.h"
typedef ostream_t ostream_t;


(오류)
In file included from ../lib/term-style-control.h:4,
                 from ../lib/term_ostream.priv.h:105,
                 from ../lib/textstyle.h:32,
                 from hello.c:21:
../lib/ostream.h:129:31: error: unknown type name 'term_ostream_t'; d
  129 | extern void ostream_write_str(term_ostream_t stream, const ch
      |                               ^~~~~~~~~~~~~~
      |                               ostream_t
In file included from ../lib/error.h:41,
                 from term-ostream.oo.h:24,
                 from ../lib/term_ostream.priv.h:108:
../lib/unreachable.h:17:9: warning: "unreachable" redefined
   17 | #define unreachable() abort()  // Define the unreachable macr
      |         ^~~~~~~~~~~
In file included from ../lib/textstyle.h:24:
../lib/stddef.h:208:11: note: this is the location of the previous de
  208 | #  define unreachable() __builtin_unreachable ()
      |           ^~~~~~~~~~~
(수정)
lib/textstyle.h 수정
#include "term_ostream.priv.h" //ttlctl_t, BITFIELD_TYPE

lib/term_ostream.priv.h 수정
#include "term-ostream.h" //term_ostream_t

lib/stddef.h 수정
/* ISO C 23 § 7.21.1 The unreachable macro  */
/* Check if unreachable() is already defined to avoid redefinition */
#ifndef unreachable
# if _GL_HAS_BUILTIN_UNREACHABLE
#  define unreachable() __builtin_unreachable()
# elif 1200 <= _MSC_VER
#  define unreachable() __assume (0)
# else
extern
#  if defined __cplusplus
"C"
#  endif
_Noreturn
void abort (void)
#  if defined __cplusplus && (__GLIBC__ >= 2)
_GL_ATTRIBUTE_NOTHROW
#  endif
;
#  define unreachable() abort()
# endif
#endif /* unreachable */

lib/unrechable.h 수정
#ifndef UNREACHABLE_H
#define UNREACHABLE_H

#if defined(__cplusplus)
extern "C" {
#endif

#include <stdlib.h>  // For abort()

_Noreturn void abort(void);  // Ensure abort() is declared

#if defined(__cplusplus)
}
#endif

// Check if unreachable() is already defined to avoid redefinition
#ifndef unreachable
#define unreachable() abort()  // Define the unreachable macro to call abort()
#endif

#endif /* UNREACHABLE_H */



(오류)
In file included from ../lib/term-style-control.h:4,
                 from ../lib/term_ostream.priv.h:105,
                 from ../lib/textstyle.h:32,
                 from hello.c:21:
../lib/ostream.h: In function 'is_instance_of_term_ostream':
../lib/ostream.h:48:45: error: storage class specified for parameter 'ostream_t'
   48 | typedef struct term_ostream_representation *ostream_t;  // term_ostream_representation?
  ^~~~~~~~~
../lib/ostream.h:62:31: error: expected declaration specifiers or '...' before 'ostream_t'
   62 | extern void ostream_write_mem(ostream_t first_arg, const void *data, size_t len);
      |                               ^~~~~~~~~
../lib/ostream.h:63:27: error: expected declaration specifiers or '...' before 'ostream_t'
   63 | extern void ostream_flush(ostream_t first_arg, ostream_flush_scope_t scope);
      |                           ^~~~~~~~~
../lib/ostream.h:64:26: error: expected declaration specifiers or '...' before 'ostream_t'
   64 | extern void ostream_free(ostream_t first_arg);
      |                          ^~~~~~~~~
../lib/ostream.h:75:18: error: expected declaration specifiers or '...' before 'ostream_t'
   75 | #define THIS_ARG ostream_t first_arg
      |                  ^~~~~~~~~
../lib/ostream.vt.h:5:27: note: in expansion of macro 'THIS_ARG'
    5 |        void (*write_mem) (THIS_ARG, const void *data, size_t len);
      |                           ^~~~~~~~
../lib/ostream.h:75:18: error: expected declaration specifiers or '...' before 'ostream_t'
   75 | #define THIS_ARG ostream_t first_arg
      |                  ^~~~~~~~~

(수정)
typedef는 파일의 시작 부분에서 정의되어야 하며, 함수 정의나 코드 블록 내에 정의되어서는 안 됩니다
typedef 선언을 통해 새로운 타입 이름을 정의할 수 있지만, 
함수 내부나 파라미터 위치에서 typedef를 사용하게 되면 오류가 발생
typedef 선언이 함수나 매크로 내에서가 아닌, 전역 스코프에서 올바르게 정의되어야 함
typedef struct term_ostream_representation *ostream_t;가 함수의 매개변수 목록에 잘못 위치해 있다는 점
lib/textstyle.h, lib/textstyle.in.h 수정
#define any_ostream_representation term_ostream_representation
typedef struct term_ostream_representation * ostream_t;

(오류)
../lib/ostream.h:47:31: error: unknown type name 'ostream_t'; did you mean 'IStream'?
   47 | extern void ostream_write_mem(ostream_t first_arg, const void *data, size_t len);
      |                               ^~~~~~~~~
      |                               IStream

(수정)
lib/ostream.h, lib/ostream.oo.h 수정
typedef struct term_ostream_representation* ostream_t;
#if IS_CPLUSPLUS
#else
typedef struct term_ostream_representation* ostream_t;
#endif

(오류)
../lib/term_ostream.priv.h: In function 'is_instance_of_term_ostream':
../lib/term_ostream.priv.h:161:1: warning: empty declaration
  161 | struct term_ostream_representation {
      | ^~~~~~
../lib/term_ostream.priv.h:220:44: error: storage class specified for parameter 'any_ostream_representation'
  220 | typedef struct term_ostream_representation any_ostream_representation;
      |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
../lib/textstyle.h:41:16: error: storage class specified for parameter 'ostream_t'
   41 | typedef FILE * ostream_t;
      |                ^~~~~~~~~
../lib/textstyle.h:46:45: error: storage class specified for parameter 'term_ostream_t'
   46 | typedef struct any_ostream_representation * term_ostream_t;
      |                                             ^~~~~~~~~~~~~~
(수정)
lib/term_ostream.priv.h 수정
//#include "term-style-control.h" // term_style_control_data
//#include "term-ostream.h" //term_ostream_t
typedef struct term_ostream_representation any_ostream_representation;
// typedef struct term_ostream_representation* ostream_t;
// #if IS_CPLUSPLUS
// typedef ostream_t term_ostream_t;
// #else
// typedef struct any_ostream_representation * term_ostream_t;
// #endif 
// typedef term_ostream_t styled_ostream_t;
// typedef styled_ostream_t html_styled_ostream_t;
// typedef styled_ostream_t noop_styled_ostream_t;
lib/textstyle.h, lib/textstyle.in.h 수정
//#include "term-ostream.h" //#include "term-ostream.priv.h"
//#include "term-ostream.h" //term_weight_t
#include "term_ostream.priv.h" //ttlctl_t, BITFIELD_TYPE
typedef FILE * ostream_t;
//typedef struct term_ostream_representation* ostream_t;
#if IS_CPLUSPLUS
typedef ostream_t term_ostream_t;
#else
typedef struct any_ostream_representation * term_ostream_t;
#endif 
typedef term_ostream_t styled_ostream_t;
typedef styled_ostream_t html_styled_ostream_t;
typedef styled_ostream_t noop_styled_ostream_t;

#define term_ostream_write_mem ostream_write_mem
#define term_ostream_flush ostream_flush
#define term_ostream_free ostream_free

(오류)
../lib/textstyle.h:52:32: error: conflicting types for 'ostream_write_mem';
have 'void(struct any_ostream_representation *, const void *, size_t)'
{aka 'void(struct any_ostream_representation *, const void *, long long unsigned int)'}
   52 | #define term_ostream_write_mem ostream_write_mem
      |                                ^~~~~~~~~~~~~~~~~
(수정)
#define term_ostream_write_mem ostream_write_mem
extern void term_ostream_write_mem (term_ostream_t first_arg, const void *data, size_t len);
extern void ostream_write_mem (ostream_t first_arg, const void *data, size_t len);

lib/textstyle.h (두번정의되어있었음) 수정, lib/textstyle.in.h(한번정의되어있었음)
/* styled_ostream_t is a subtype of ostream_t.  */
typedef ostream_t styled_ostream_t;
#define styled_ostream_write_mem ostream_write_mem
#define styled_ostream_flush ostream_flush
#define styled_ostream_free ostream_free

(오류)
../lib/textstyle.h:132:19: error: conflicting types for 'styled_ostream_t';
have 'ostream_t' {aka 'struct _iobuf *'}
  132 | typedef ostream_t styled_ostream_t;
      |                   ^~~~~~~~~~~~~~~~
(수정)
lib/textstyle.h, lib/textstyle.in.h 수정
typedef FILE * ostream_t;
//typedef struct term_ostream_representation* ostream_t;
#if IS_CPLUSPLUS
typedef ostream_t term_ostream_t;
#else
typedef struct any_ostream_representation * term_ostream_t;
#endif 
//typedef term_ostream_t styled_ostream_t;
typedef styled_ostream_t html_styled_ostream_t;
typedef styled_ostream_t noop_styled_ostream_t;

/* styled_ostream_t is a subtype of ostream_t.  */
typedef ostream_t styled_ostream_t;

(오류)
../lib/textstyle.h:49:9: error: unknown type name 'styled_ostream_t'; did you mean 'term_ostream_t'?
   49 | typedef styled_ostream_t html_styled_ostream_t;
      |         ^~~~~~~~~~~~~~~~
      |         term_ostream_t
(수정)
lib/textstyle.h, lib/textstyle.in.h 수정
typedef FILE * ostream_t;
//typedef struct term_ostream_representation* ostream_t;
#if IS_CPLUSPLUS
typedef ostream_t term_ostream_t;
#else
typedef struct any_ostream_representation * term_ostream_t;
#endif 
//typedef term_ostream_t styled_ostream_t;
//typedef styled_ostream_t html_styled_ostream_t;
//typedef styled_ostream_t noop_styled_ostream_t;

/* html_styled_ostream_t is a subtype of styled_ostream_t.  */
typedef styled_ostream_t html_styled_ostream_t;

/* noop_styled_ostream_t is a subtype of styled_ostream_t.  */
typedef styled_ostream_t noop_styled_ostream_t;

(오류)
lib/ostream.h:33:45: error: conflicting types for 'ostream_t'; 
have 'struct term_ostream_representation *'
   33 | typedef struct term_ostream_representation* ostream_t;
      |                                             ^~~~~~~~~
(수정)
lib/ostream.h, lib/ostream.oo.h 수정
//#include "textstyle.h"         // ostream_flush_scope_t
//#include "term-ostream.h"      // term_ostream_t

(오류)
In file included from lib/xalloc.h:33,
                 from lib/color.c:33:
lib/idx.h: In function 'is_instance_of_term_ostream':
lib/idx.h:126:19: error: storage class specified for parameter 'idx_t'
  126 | typedef ptrdiff_t idx_t;
      |                   ^~~~~
(수정)
typedef는 새로운 타입을 정의하는 것이지, 변수나 함수의 저장 클래스 지정자가 아니라는 것을 의미
저장 클래스 지정자가 포함되지 않도록 수정
함수 매개변수에 저장 클래스(storage class)를 지정하려고 했기 때문에 발생
typedef가 함수의 매개변수로 잘못 사용된 경우
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'typedef .* idx_t' .
./lib/fnmatch.c:110:typedef ptrdiff_t idx_t;
./lib/idx.h:126:typedef ptrdiff_t idx_t;

lib/fnmatch.c 수정
/*idx.h 중복정의*/
// #ifdef _LIBC
// typedef ptrdiff_t idx_t;
// #else
// # include "idx.h"
// #endif
 # include "idx.h"

(오류)
In file included from lib/color.c:1:
./config.h:480:21: error: expected declaration specifiers before '__attribute__'
  480 | #  define _Noreturn __attribute__ ((__noreturn__))
      |                     ^~~~~~~~~~~~~

(수정)
configure.ac 수정

# Set C++ standard to C++17
CXXFLAGS="$CXXFLAGS -std=c++17"
AC_SUBST(CXXFLAGS)

# C99->C11
AC_PROG_CC
AC_LANG([C])
AC_COMPILE_IFELSE(
  [AC_LANG_PROGRAM([], [[#if __STDC_VERSION__ >= 201112L
                         #else
                         # error "C11 not supported"
                         #endif]])],
  [
    AC_DEFINE([HAVE_C11], [1], [Define if the C compiler supports C11.])
    CFLAGS="$CFLAGS -std=c11 -fno-inline -UNDEFINED_MACRO"
  ],
  [AC_MSG_ERROR([C11 support is required but not available.])]
)

AC_MSG_CHECKING([whether the compiler supports __attribute__((noreturn))])
AC_COMPILE_IFELSE(
  [AC_LANG_PROGRAM([[]], [[__attribute__((noreturn)) void x();]])],
  [AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_NORETURN], [__attribute__((noreturn))], [Define for attribute noreturn])],
  [AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_NORETURN], [], [Define for attribute noreturn])]
)
AC_MSG_RESULT([done])

(오류)
lib/xalloc.h:54:16: warning: parameter 'xalloc_die' declared '_Noreturn'
   54 | _Noreturn void xalloc_die (void);
      |                ^~~~~~~~~~

(수정)
lib/xalloc.h 수정
_Noreturn void xalloc_die (void);
_Noreturn은 함수의 반환되지 않음을 나타내는 속성이며, 매개변수에 적용될 수 없음
void xalloc_die (void) __attribute__((noreturn));

(오류)
lib/xalloc.h:65:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
   65 |   _GL_ATTRIBUTE_ALLOC_SIZE ((1)) _GL_ATTRIBUTE_RETURNS_NONNULL;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~
(수정)
#if GNULIB_XALLOC
void *xmalloc (size_t s)
  _GL_ATTRIBUTE_MALLOC _GL_ATTRIBUTE_DEALLOC_FREE
  _GL_ATTRIBUTE_ALLOC_SIZE ((1)) _GL_ATTRIBUTE_RETURNS_NONNULL;
#endif /* GNULIB_XALLOC */

_GL_ATTRIBUTE_ALLOC_SIZE와 _GL_ATTRIBUTE_RETURNS_NONNULL가 함수 선언에 올바르게 적용되지 않았기 때문
이 속성들은 함수의 매개변수 및 반환 값과 관련된 속성들로, 함수 선언에만 적용되어야 함.
lib/xalloc.h 수정
#if GNULIB_XALLOC
void *xmalloc(size_t s)
  _GL_ATTRIBUTE_MALLOC
  _GL_ATTRIBUTE_DEALLOC_FREE
  _GL_ATTRIBUTE_ALLOC_SIZE(1) //수정
  _GL_ATTRIBUTE_RETURNS_NONNULL;
#endif /* GNULIB_XALLOC */

configure.ac 수정
# _GL_ATTRIBUTE_ALLOC_SIZE
# Check if the compiler supports the __attribute__((__alloc_size__)) attribute
AC_MSG_CHECKING([whether the compiler supports __attribute__((__alloc_size__))])
AC_COMPILE_IFELSE(
  [AC_LANG_PROGRAM([[]], [[
    void* xmalloc(size_t) __attribute__((__alloc_size__(1)));
  ]])],
  [AC_DEFINE([_GL_HAS_ATTRIBUTE_ALLOC_SIZE], [1], [Define if compiler supports __attribute__((__alloc_size__))])],
  [AC_DEFINE([_GL_HAS_ATTRIBUTE_ALLOC_SIZE], [0], [Define if compiler does not support __attribute__((__alloc_size__))])]
)
AC_MSG_RESULT([done])

config.h 자동생성부분 확인
/* Applies to: functions, pointer to functions, function types.  */
#ifndef _GL_ATTRIBUTE_ALLOC_SIZE
# if _GL_HAS_ATTRIBUTE (alloc_size)
#  define _GL_ATTRIBUTE_ALLOC_SIZE(args) __attribute__ ((__alloc_size__ args))
# else
#  define _GL_ATTRIBUTE_ALLOC_SIZE(args)
# endif
#endif

(오류)
lib/xalloc.h:70:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
   70 |   _GL_ATTRIBUTE_RETURNS_NONNULL;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(수정)
_GL_ATTRIBUTE_RETURNS_NONNULL 속성이 함수 외부에서 잘못 사용되었기 때문
이 속성은 함수에 적용되어야 하는데, 현재 매크로로 정의
lib/xalloc.h 수정
//void *ximalloc (idx_t s)
//  _GL_ATTRIBUTE_MALLOC _GL_ATTRIBUTE_DEALLOC_FREE
//  _GL_ATTRIBUTE_ALLOC_SIZE ((1)) _GL_ATTRIBUTE_RETURNS_NONNULL;
void *ximalloc (idx_t s)
  __attribute__ ((malloc, alloc_size(1), returns_nonnull, dealloc(free)));

configure.ac 수정
#AC_DEFINE([_GL_ATTRIBUTE_RETURNS_NONNULL], [], [Define to enable returns nonnull attributes])
# _GL_ATTRIBUTE_RETURNS_NONNULL
# Check if the compiler supports the __attribute__((returns_nonnull)) attribute
AC_MSG_CHECKING([whether the compiler supports __attribute__((returns_nonnull))])
AC_COMPILE_IFELSE(
  [AC_LANG_PROGRAM([[]], [[
    void* test_returns_nonnull(void) __attribute__((returns_nonnull));
  ]])],
  [AC_DEFINE([_GL_HAS_ATTRIBUTE_RETURNS_NONNULL], [1], [Define if compiler supports __attribute__((returns_nonnull))])],
  [AC_DEFINE([_GL_HAS_ATTRIBUTE_RETURNS_NONNULL], [0], [Define if compiler does not support __attribute__((returns_nonnull))])]
)
AC_MSG_RESULT([done])

config.h 생성확인
/* _GL_ATTRIBUTE_RETURNS_NONNULL declares that the function's return value is
   a non-NULL pointer.  */
/* Applies to: functions.  */
#ifndef _GL_ATTRIBUTE_RETURNS_NONNULL
# if _GL_HAS_ATTRIBUTE (returns_nonnull)
#  define _GL_ATTRIBUTE_RETURNS_NONNULL __attribute__ ((__returns_nonnull__))
# else
#  define _GL_ATTRIBUTE_RETURNS_NONNULL
# endif
#endif

(오류)
lib/xalloc.h:68:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
   68 |   _GL_ATTRIBUTE_ALLOC_SIZE ((1)) _GL_ATTRIBUTE_RETURNS_NONNULL;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~
lib/xalloc.h:68:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
lib/xalloc.h:133:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
  133 |   __attribute__ ((malloc, alloc_size(1), returns_nonnull));
      |   ^~~~~~~~~~~~~

lib/xalloc.h:133:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
  133 |   __attribute__ ((malloc, dealloc(free), alloc_size(1), returns_nonnull));
      |   ^~~~~~~~~~~~~
lib/xalloc.h:133:3: warning: 'dealloc' attribute directive ignored
-Wattributes]
lib/xalloc.h:70:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
   70 |   _GL_ATTRIBUTE_RETURNS_NONNULL;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(수정)
malloc과 dealloc 속성이 올바르게 적용되지 않아서 무시된다는 의미
dealloc(free) 속성은 GCC 표준이 아니므로 지원되지 않아 경고가 발생할 수 있
dealloc(free) 속성을 제거하고, malloc 속성만 남

/* Function declarations without attributes */
void *xmalloc (size_t s);
void *ximalloc (idx_t s);
void *xinmalloc (idx_t n, idx_t s);
void *xzalloc (size_t s);
void *xizalloc (idx_t s);
void *xcalloc (size_t n, size_t s);
void *xicalloc (idx_t n, idx_t s);
void *xrealloc (void *p, size_t s);
void *xirealloc (void *p, idx_t s);
void *xreallocarray (void *p, size_t n, size_t s);
void *xireallocarray (void *p, idx_t n, idx_t s);
void *x2realloc (void *p, size_t *ps); /* superseded by xpalloc */
void *x2nrealloc (void *p, size_t *pn, size_t s); /* superseded by xpalloc */
void *xpalloc (void *pa, idx_t *pn, idx_t n_incr_min, ptrdiff_t n_max, idx_t s);
void *xmemdup (void const *p, size_t s);
void *ximemdup (void const *p, idx_t s);
char *ximemdup0 (void const *p, idx_t s);
char *xstrdup (char const *str);

/* Function Definitions with corrected attributes */
void *xmalloc (size_t s)
  __attribute__ ((alloc_size(1), returns_nonnull));

void *ximalloc (idx_t s)
  __attribute__ ((alloc_size(1), returns_nonnull));

void *xinmalloc (idx_t n, idx_t s)
  __attribute__ ((alloc_size(1, 2), returns_nonnull));

void *xzalloc (size_t s)
  __attribute__ ((alloc_size(1), returns_nonnull));

void *xizalloc (idx_t s)
  __attribute__ ((alloc_size(1), returns_nonnull));

void *xcalloc (size_t n, size_t s)
  __attribute__ ((alloc_size(1, 2), returns_nonnull));

void *xicalloc (idx_t n, idx_t s)
  __attribute__ ((alloc_size(1, 2), returns_nonnull));

void *xrealloc (void *p, size_t s)
  __attribute__ ((alloc_size(2)));

void *xirealloc (void *p, idx_t s)
  __attribute__ ((alloc_size(2), returns_nonnull));

void *xreallocarray (void *p, size_t n, size_t s)
  __attribute__ ((alloc_size(2, 3)));

void *xireallocarray (void *p, idx_t n, idx_t s)
  __attribute__ ((alloc_size(2, 3), returns_nonnull));

void *x2realloc (void *p, size_t *ps)
  __attribute__ ((returns_nonnull));

void *x2nrealloc (void *p, size_t *pn, size_t s)
  __attribute__ ((returns_nonnull));

void *xpalloc (void *pa, idx_t *pn, idx_t n_incr_min, ptrdiff_t n_max, idx_t s)
  __attribute__ ((returns_nonnull));

void *xmemdup (void const *p, size_t s)
  __attribute__ ((alloc_size(2), returns_nonnull));

void *ximemdup (void const *p, idx_t s)
  __attribute__ ((alloc_size(2), returns_nonnull));

char *ximemdup0 (void const *p, idx_t s)
  __attribute__ ((returns_nonnull));

char *xstrdup (char const *str)
  __attribute__ ((returns_nonnull));

(오류)
lib/xalloc.h:62:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
   62 |   _GL_ATTRIBUTE_MALLOC _GL_ATTRIBUTE_ALLOC_SIZE((1)) _GL_ATTRIBUTE_RETURNS_NONNULL;
      |   ^~~~~~~~~~~~~~~~~~~~
lib/xalloc.h:71:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
   71 |   _GL_ATTRIBUTE_MALLOC _GL_ATTRIBUTE_ALLOC_SIZE((1)) _GL_ATTRIBUTE_RETURNS_NONNULL;
      |   ^~~~~~~~~~~~~~~~~~~~
lib/xalloc.h:77:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
   77 |   _GL_ATTRIBUTE_MALLOC _GL_ATTRIBUTE_ALLOC_SIZE((1, 2)) _GL_ATTRIBUTE_RETURNS_NONNULL;
      |   ^~~~~~~~~~~~~~~~~~~~
lib/xalloc.h:104:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
  104 |   _GL_ATTRIBUTE_MALLOC _GL_ATTRIBUTE_ALLOC_SIZE((2)) _GL_ATTRIBUTE_RETURNS_NONNULL;
      |   ^~~~~~~~~~~~~~~~~~~~
lib/xalloc.h:113:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
  113 |   _GL_ATTRIBUTE_MALLOC _GL_ATTRIBUTE_RETURNS_NONNULL;
      |   ^~~~~~~~~~~~~~~~~~~~
lib/xalloc.h:117:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
  117 |   _GL_ATTRIBUTE_ALLOC_SIZE((1, 2)) _GL_ATTRIBUTE_RETURNS_NONNULL;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~
lib/xalloc.h:117:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
lib/xalloc.h:120:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
  120 | {
      | ^
lib/xalloc.h:126:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
  126 |   _GL_ATTRIBUTE_ALLOC_SIZE((1)) _GL_ATTRIBUTE_RETURNS_NONNULL;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~
lib/xalloc.h:126:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]

(수정)
void *xmalloc(size_t s)
  _GL_ATTRIBUTE_MALLOC _GL_ATTRIBUTE_ALLOC_SIZE((1)) _GL_ATTRIBUTE_RETURNS_NONNULL;
lib/xalloc.h:61:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
   61 |   _GL_ATTRIBUTE_MALLOC _GL_ATTRIBUTE_ALLOC_SIZE((1)) _GL_ATTRIBUTE_RETURNS_NONNULL;
      |   ^~~~~~~~~~~~~~~~~~~~
'malloc' 속성이 함수가 아닌 다른 위치에서 사용되고 있다는 것을 의미
'malloc' 속성은 함수에만 유효, 함수가 아닌 위치에서 사용되고 있기 때문에 무시되고 있다.
_GL_ATTRIBUTE_MALLOC을 제거함

/* Function declarations without attributes */
//void *xmalloc(size_t s);
void *ximalloc(idx_t s);
void *xinmalloc(idx_t n, idx_t s);
//void *xzalloc(size_t s);
void *xizalloc(idx_t s);
//void *xcalloc(size_t n, size_t s);
void *xicalloc(idx_t n, idx_t s);
//void *xrealloc(void *p, size_t s);
void *xirealloc(void *p, idx_t s);
//void *xreallocarray(void *p, size_t n, size_t s);
void *xireallocarray(void *p, idx_t n, idx_t s);
//void *x2realloc(void *p, size_t *ps); /* superseded by xpalloc */
//void *x2nrealloc(void *p, size_t *pn, size_t s); /* superseded by xpalloc */
void *xpalloc(void *pa, idx_t *pn, idx_t n_incr_min, ptrdiff_t n_max, idx_t s);
//void *xmemdup(const void *p, size_t s);
void *ximemdup(const void *p, idx_t s);
char *ximemdup0(const void *p, idx_t s);
//char *xstrdup(const char *str);

/* Function definitions with attributes */
void *xmalloc(size_t s)
  _GL_ATTRIBUTE_ALLOC_SIZE((1)) _GL_ATTRIBUTE_RETURNS_NONNULL;

void *ximalloc(idx_t s)
  _GL_ATTRIBUTE_ALLOC_SIZE((1)) _GL_ATTRIBUTE_RETURNS_NONNULL;

void *xinmalloc(idx_t n, idx_t s)
  _GL_ATTRIBUTE_ALLOC_SIZE((1, 2)) _GL_ATTRIBUTE_RETURNS_NONNULL;

void *xzalloc(size_t s)
  _GL_ATTRIBUTE_ALLOC_SIZE((1)) _GL_ATTRIBUTE_RETURNS_NONNULL;

void *xizalloc(idx_t s)
  _GL_ATTRIBUTE_ALLOC_SIZE((1)) _GL_ATTRIBUTE_RETURNS_NONNULL;

void *xcalloc(size_t n, size_t s)
  _GL_ATTRIBUTE_ALLOC_SIZE((1, 2)) _GL_ATTRIBUTE_RETURNS_NONNULL;

void *xicalloc(idx_t n, idx_t s)
  _GL_ATTRIBUTE_ALLOC_SIZE((1, 2)) _GL_ATTRIBUTE_RETURNS_NONNULL;

void *xrealloc(void *p, size_t s)
  _GL_ATTRIBUTE_ALLOC_SIZE((2));

void *xirealloc(void *p, idx_t s)
  _GL_ATTRIBUTE_ALLOC_SIZE((2)) _GL_ATTRIBUTE_RETURNS_NONNULL;

void *xreallocarray(void *p, size_t n, size_t s)
  _GL_ATTRIBUTE_ALLOC_SIZE((2, 3));

void *xireallocarray(void *p, idx_t n, idx_t s)
  _GL_ATTRIBUTE_ALLOC_SIZE((2, 3)) _GL_ATTRIBUTE_RETURNS_NONNULL;

void *x2realloc(void *p, size_t *ps) /* superseded by xpalloc */
  _GL_ATTRIBUTE_RETURNS_NONNULL;

void *x2nrealloc(void *p, size_t *pn, size_t s) /* superseded by xpalloc */
  _GL_ATTRIBUTE_RETURNS_NONNULL;

void *xpalloc(void *pa, idx_t *pn, idx_t n_incr_min, ptrdiff_t n_max, idx_t s)
  _GL_ATTRIBUTE_RETURNS_NONNULL;

void *xmemdup(const void *p, size_t s)
  _GL_ATTRIBUTE_ALLOC_SIZE((2)) _GL_ATTRIBUTE_RETURNS_NONNULL;

void *ximemdup(const void *p, idx_t s)
  _GL_ATTRIBUTE_ALLOC_SIZE((2)) _GL_ATTRIBUTE_RETURNS_NONNULL;

char *ximemdup0(const void *p, idx_t s)
  _GL_ATTRIBUTE_RETURNS_NONNULL;

char *xstrdup(const char *str)
  _GL_ATTRIBUTE_RETURNS_NONNULL;

(오류)
lib/concat-filename.h:39:14: error: storage class specified for parameter 'concatenated_filename'
   39 | extern char *concatenated_filename (const char *directory,
      |              ^~~~~~~~~~~~~~~~~~~~~
lib/concat-filename.h:41:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
   41 |   _GL_ATTRIBUTE_MALLOC _GL_ATTRIBUTE_DEALLOC_FREE;
      |   ^~~~~~~~~~~~~~~~~~~~
lib/concat-filename.h:41:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
lib/concat-filename.h:45:14: error: storage class specified for parameter 'xconcatenated_filename'
   45 | extern char *xconcatenated_filename (const char *directory,
      |              ^~~~~~~~~~~~~~~~~~~~~~
lib/concat-filename.h:48:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
   48 |   _GL_ATTRIBUTE_RETURNS_NONNULL;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/concat-filename.h:48:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
lib/concat-filename.h:42:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
   42 |   _GL_ATTRIBUTE_DEALLOC_FREE;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~
lib/concat-filename.h:46:14: error: storage class specified for parameter 'xconcatenated_filename'
   46 | extern char *xconcatenated_filename (const char *directory,
      |              ^~~~~~~~~~~~~~~~~~~~~~
lib/concat-filename.h:51:3: warning: 'malloc' attribute ignored; valid only for functions [-Wattributes]
   51 |   ;
      |   ^

(수정)
lib/concat-filename.h, lib/concat-filename.h~ 수정
extern char *concatenated_filename (const char *directory,
                                    const char *filename, const char *suffix);
  //_GL_ATTRIBUTE_MALLOC
  //_GL_ATTRIBUTE_DEALLOC_FREE
  //;

/* Concatenate a directory filename, a relative filename and an optional
   suffix.  Return a freshly allocated filename.  */
extern char *xconcatenated_filename (const char *directory,
                                     const char *filename, const char *suffix);
  //_GL_ATTRIBUTE_MALLOC 
  //_GL_ATTRIBUTE_DEALLOC_FREE
  //_GL_ATTRIBUTE_RETURNS_NONNULL
  //;

(오류)
lib/string.h:700:19: error: storage class specified for parameter 'rpl_free'
  700 | _GL_EXTERN_C void rpl_free (void *);
      |                   ^~~~~~~~

(수정)
extern 또는 _GL_EXTERN_C와 같은 스토리지 클래스 지정자가 잘못된 위치에 사용되었을 때 발생
rpl_free 함수의 선언에서 스토리지 클래스 지정자가 매개변수에 적용된 것처럼 해석되기 때문에 발생
_GL_EXTERN_C가 정확하게 함수 선언의 앞부분에 위치해야 함

configure.ac
AC_CONFIG_COMMANDS([post-config-h], [
  echo "/* Define extern linkage */" >> config.h
  echo "#ifdef __cplusplus" >> config.h
  echo "# define _GL_EXTERN_C extern \"C\"" >> config.h
  echo "#else" >> config.h
  echo "# define _GL_EXTERN_C extern" >> config.h
  echo "#endif" >> config.h
])

config.h
/* Define as a signed type of the same size as size_t. */
/* #undef ssize_t */
/* Define extern linkage */
#ifdef __cplusplus
# define _GL_EXTERN_C extern "C"
#else
# define _GL_EXTERN_C extern
#endif

lib/string.h, lib/string.in.h 수정
/* Define to extern for C */
//#define _GL_EXTERN_C extern
#ifdef __cplusplus
extern "C" {
#endif
void rpl_free(void *);
#ifdef __cplusplus
}
#endif

(오류)
lib/string.h:1040:19: error: expected declaration specifiers before '__attribute__'
 1040 |                   _GL_ARG_NONNULL ((1, 2)));
      |                   ^~~~~~~~~~~~~~~
lib/string.h:1203:19: error: expected declaration specifiers before '__attribute__'
 1203 |                   _GL_ARG_NONNULL ((1))
      |                   ^~~~~~~~~~~~~~~
lib/string.h:1302:19: error: expected declaration specifiers before '__attribute__'
 1302 |                   _GL_ARG_NONNULL ((1))
      |                   ^~~~~~~~~~~~~~~
(수정)
_GL_FUNCDECL_SYS (stpcpy, char *,
  (char *restrict __dst, char const *restrict __src),
  //_GL_ARG_NONNULL ((1, 2))
		  _GL_ARG_NONNULL_1_2
		  );

_GL_FUNCDECL_SYS (strdup, char *,
                  (char const *__s)
                  //_GL_ARG_NONNULL ((1))
				  _GL__ARG_NONNULL_1
                  _GL_ATTRIBUTE_MALLOC _GL_ATTRIBUTE_DEALLOC_FREE);

_GL_FUNCDECL_SYS (strdup, char *,
                  (char const *__s)
                  //_GL_ARG_NONNULL ((1))
				  _GL_ARG_NONNULL_1
                  _GL_ATTRIBUTE_MALLOC _GL_ATTRIBUTE_DEALLOC_FREE);

(오류)
./config.h:394:28: error: expected declaration specifiers before '__attribute__'
  394 | #define _GL_ATTRIBUTE_PURE __attribute__((pure))
      |                            ^~~~~~~~~~~~~
./config.h:346:29: error: expected declaration specifiers before '__attribute__'
  346 | #define _GL_ARG_NONNULL_1_2 __attribute__((nonnull(1,2)))
      |                             ^~~~~~~~~~~~~
./config.h:343:27: error: expected declaration specifiers before '__attribute__'
  343 | #define _GL_ARG_NONNULL_1 __attribute__((nonnull(1)))
      |                           ^~~~~~~~~~~~~
./config.h:343:27: error: expected declaration specifiers before '__attribute__'
  343 | #define _GL_ARG_NONNULL_1 __attribute__((nonnull(1)))
      |                           ^~~~~~~~~~~~~

(수정)
# Define a macro to check for attribute support
AC_DEFUN([_GL_HAS_ATTRIBUTE],
  [AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
    [[#ifndef __has_attribute
      # define __has_attribute(x) 0
    #endif]],  # <-- 첫 번째 코드 블록의 끝
    [[int foo __attribute__ (($1));]])],  # <-- 두 번째 코드 블록의 끝
    [AC_DEFINE([_GL_HAS_ATTRIBUTE_$1], [1],
      [Define if the compiler supports __attribute__((($1)))])],  # <-- 성공 시
    [AC_DEFINE([_GL_HAS_ATTRIBUTE_$1], [0],
      [Define if the compiler does not support __attribute__((($1)))])])  # <-- 실패 시
  ])

# Check for 'pure' attribute support
_GL_HAS_ATTRIBUTE([pure])

(오류)

./config.h:346:29: error: expected declaration specifiers before '__attribute__'
  346 | #define _GL_ARG_NONNULL_1_2 __attribute__((nonnull(1,2)))
      |                             ^~~~~~~~~~~~~
./config.h:343:27: error: expected declaration specifiers before '__attribute__'
  343 | #define _GL_ARG_NONNULL_1 __attribute__((nonnull(1)))
      |                           ^~~~~~~~~~~~~
./config.h:343:27: error: expected declaration specifiers before '__attribute__'
  343 | #define _GL_ARG_NONNULL_1 __attribute__((nonnull(1)))
      |                           ^~~~~~~~~~~~~
./config.h:1164:30: error: expected declaration specifiers before '__attribute__'
 1164 | #  define _GL_ATTRIBUTE_PURE __attribute__ ((__pure__))
      |                              ^~~~~~~~~~~~~
./config.h:988:32: error: expected declaration specifiers before '__attribute__'
  988 | #  define _GL_ATTRIBUTE_MALLOC __attribute__ ((__malloc__))
      |                                ^~~~~~~~~~~~~
./config.h:869:39: error: expected declaration specifiers before '__attribute__'
  869 | #  define _GL_ATTRIBUTE_DEALLOC(f, i) __attribute__ ((__malloc__ (f, i)))
      | 

./string.h:1205:40: error: expected ')' before ',' token
 1205 |                   _GL_ATTRIBUTE_MALLOC _GL_ATTRIBUTE_DEALLOC_FREE);
      |                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./string.h:1305:40: error: expected ')' before ',' token
 1305 |                   _GL_ATTRIBUTE_MALLOC _GL_ATTRIBUTE_DEALLOC_FREE);
      |                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
^~~~~~~~~~~~~
#ifndef _GL_ATTRIBUTE_DEALLOC
# if _GL_GNUC_PREREQ (11, 0)
#  define _GL_ATTRIBUTE_DEALLOC(f, i) __attribute__ ((__malloc__ (f, i)))
# else
#  define _GL_ATTRIBUTE_DEALLOC(f, i)
# endif
#endif

/* Define as empty if __attribute__((dealloc)) is not supported */
#define _GL_ATTRIBUTE_DEALLOC /**/

/* Define as empty if __attribute__((dealloc)) is not supported */
#define _GL_ATTRIBUTE_DEALLOC_FREE /**/
(수정)
__attribute__가 적용되기 전에 함수나 변수의 선언이 필요하다는 의미
해당 속성을 적용할 대상(함수나 변수)이 먼저 선언되어야 함
__attribute__를 정의할 때 AC_DEFINE_UNQUOTED를 사용하면 
매크로가 정의될 때 자동으로 문자열로 감싸지지 않고 직접 적용
#define _GL_ARG_NONNULL_1_2 __attribute__((nonnull(1,2)))

configure.ac 수정
# __attribute__((__pure__)) 지원 여부 확인
AC_MSG_CHECKING([for __attribute__((__pure__)) support])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
void __attribute__((__pure__)) test_function(int* ptr) {
    (void)ptr;
}
int main() {
    int a = 0;
    test_function(&a);
    return 0;
}
]])],
[AC_MSG_RESULT([yes])
 AC_DEFINE([HAVE_ATTRIBUTE_PURE], [1], [Define if compiler supports __attribute__((__pure__))])
],
[AC_MSG_RESULT([no])
 AC_DEFINE([HAVE_ATTRIBUTE_PURE], [0], [Define if compiler does not support __attribute__((__pure__))])
])

# _GL_ARG_NONNULL 매크로 정의
if test "$HAVE_ATTRIBUTE_PURE" = 1; then
    AC_DEFINE([_GL_ATTRIBUTE_PURE], [__attribute__((__pure__))], [Define to use __attribute__((__pure__))])
else
    AC_DEFINE([_GL_ATTRIBUTE_PURE], [], [Define as empty if __attribute__((__pure__)) is not supported])
fi



# __attribute__((nonnull)) 지원 여부 확인
AC_MSG_CHECKING([for __attribute__((nonnull)) support])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
void __attribute__((nonnull(1))) test_function(int* ptr) {
    (void)ptr;
}

int main() {
    int a = 0;
    test_function(&a);
    return 0;
}
]])],
[AC_MSG_RESULT([yes])
 AC_DEFINE([HAVE_ATTRIBUTE_NONNULL], [1], [Define if compiler supports __attribute__((nonnull))])
],
[AC_MSG_RESULT([no])
 AC_DEFINE([HAVE_ATTRIBUTE_NONNULL], [0], [Define if compiler does not support __attribute__((nonnull))])
])

# _GL_ARG_NONNULL 매크로 정의
if test "$HAVE_ATTRIBUTE_NONNULL" = 1; then
    AC_DEFINE([_GL_ARG_NONNULL_1_2], [__attribute__((nonnull(1,2)))], [Define to use __attribute__((nonnull(1,2)))])
	AC_DEFINE([_GL_ARG_NONNULL_1], [__attribute__((nonnull(1)))], [Define to use __attribute__((nonnull(1)))])
	AC_DEFINE([_GL_ARG_NONNULL_1_3], [__attribute__((nonnull(1,3)))], [Define to use __attribute__((nonnull(1,3)))])
	AC_DEFINE([_GL_ARG_NONNULL_3], [__attribute__((nonnull(3)))], [Define to use __attribute__((nonnull(3)))])
else
    AC_DEFINE([_GL_ARG_NONNULL_1_2], [], [Define as empty if __attribute__((nonnull(1,2))) is not supported])
	AC_DEFINE([_GL_ARG_NONNULL_1], [], [Define as empty if __attribute__((nonnull(1))) is not supported])
	AC_DEFINE([_GL_ARG_NONNULL_1_3], [], [Define as empty if __attribute__((nonnull(1,3))) is not supported])
	AC_DEFINE([_GL_ARG_NONNULL_3], [], [Define as empty if __attribute__((nonnull(3))) is not supported])
fi


# __attribute__((__malloc__)) 지원 여부 확인
AC_MSG_CHECKING([for __attribute__((__malloc__)) support])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
void __attribute__((__malloc__)) test_function(int* ptr) {
    (void)ptr;
}
int main() {
    int a = 0;
    test_function(&a);
    return 0;
}
]])],
[AC_MSG_RESULT([yes])
 AC_DEFINE([HAVE_ATTRIBUTE_MALLOC], [1], [Define if compiler supports __attribute__((__malloc__))])
],
[AC_MSG_RESULT([no])
 AC_DEFINE([HAVE_ATTRIBUTE_MALLOC], [0], [Define if compiler does not support __attribute__((__malloc__))])
])

# _GL_ARG_NONNULL 매크로 정의
if test "$HAVE_ATTRIBUTE_MALLOC" = 1; then
    AC_DEFINE([_GL_ATTRIBUTE_MALLOC], [__attribute__((__malloc__))], [Define to use __attribute__((__malloc__))])
else
    AC_DEFINE([_GL_ATTRIBUTE_MALLOC], [], [Define as empty if __attribute__((__malloc__)) is not supported])
fi

# _GL_ARG_NONNULL 매크로 정의
if test "$HAVE_ATTRIBUTE_MALLOC" = 1; then
    AC_DEFINE([_GL_ATTRIBUTE_MALLOC], [__attribute__((__malloc__))], [Define to use __attribute__((__malloc__))])
else
    AC_DEFINE([_GL_ATTRIBUTE_MALLOC], [], [Define as empty if __attribute__((__malloc__)) is not supported])
fi


if test "$HAVE_ATTRIBUTE_DEALLOC" = 1; then
    AC_DEFINE([_GL_ATTRIBUTE_DEALLOC(f, i)], [__attribute__((__malloc__ (f, i)))], [Define to use __attribute__((__malloc__ (f, i)))])
else
    AC_DEFINE([_GL_ATTRIBUTE_DEALLOC(f, i)], [], [Define as empty if __attribute__((__malloc__ (f, i))) is not supported])
fi

config.h 생성결과

/* Define as empty if __attribute__((__pure__)) is not supported */
#define _GL_ATTRIBUTE_PURE /**/

/* Define as empty if __attribute__((nonnull(1))) is not supported */
#define _GL_ARG_NONNULL_1 /**/

/* Define as empty if __attribute__((nonnull(1,2))) is not supported */
#define _GL_ARG_NONNULL_1_2 /**/

/* Define as empty if __attribute__((nonnull(1,3))) is not supported */
#define _GL_ARG_NONNULL_1_3 /**/

/* Define as empty if __attribute__((nonnull(3))) is not supported */
#define _GL_ARG_NONNULL_3 /**/

/* Define as empty if __attribute__((__malloc__)) is not supported */
#define _GL_ATTRIBUTE_MALLOC /**/

#ifndef _GL_ATTRIBUTE_DEALLOC
# if _GL_GNUC_PREREQ (11, 0)
#  define _GL_ATTRIBUTE_DEALLOC(f, i) /**/
# else
#  define _GL_ATTRIBUTE_DEALLOC(f, i) /**/
# endif
#endif

(오류)
lib/color.h:50:39: error: storage class specified for parameter 'color_test_mode'
   50 | extern LIBTEXTSTYLE_DLL_VARIABLE bool color_test_mode;
      |                                       ^~~~~~~~~~~~~~~
lib/color.h:51:52: error: storage class specified for parameter 'color_mode'
   51 | extern LIBTEXTSTYLE_DLL_VARIABLE enum color_option color_mode;
      |                                                    ^~~~~~~~~~
lib/color.h:52:46: error: storage class specified for parameter 'style_file_name'
   52 | extern LIBTEXTSTYLE_DLL_VARIABLE const char *style_file_name;
      |                                              ^~~~~~~~~~~~~~~
(수정)
textstyle/woe32dll.h 수정
//#ifdef IN_LIBTEXTSTYLE
/* All code is collected in a single library,  */
//# define LIBTEXTSTYLE_DLL_VARIABLE
//#else
/* References from outside of libtextstyle.  */
//# define LIBTEXTSTYLE_DLL_VARIABLE 
//#endif

#ifdef _WIN32
    #ifdef IN_LIBTEXTSTYLE
        /* Building the library */
        #define LIBTEXTSTYLE_DLL_VARIABLE __declspec(dllexport)
    #else
        /* Using the library */
        #define LIBTEXTSTYLE_DLL_VARIABLE __declspec(dllimport)
    #endif
#else
    /* Not Windows or other platforms */
    #define LIBTEXTSTYLE_DLL_VARIABLE
#endif

lib/color.h 수정
#include "textstyle/woe32dll.h" //LIBTEXTSTYLE_DLL_VARIABLE


(오류)
lib/color.c:28:32: error: variable 'color_test_mode' definition is marked dllimport
   28 | LIBTEXTSTYLE_DLL_VARIABLE bool color_test_mode = false;
      |                                ^~~~~~~~~~~~~~~
lib/color.c:28:32: warning: 'color_test_mode' redeclared without dllimport attribute: previous dllimport ignored [-Wattributes]
lib/color.c:28:6: warning: 'color_test_mode' redeclared without dllimport attribute: previous dllimport ignored [-Wattributes]
   28 | bool color_test_mode = false;
      |      ^~~~~~~~~~~~~~~
lib/color.c:32:19: warning: 'color_mode' redeclared without dllimport attribute: previous dllimport ignored [-Wattributes]
   32 | enum color_option color_mode = color_tty;
      |                   ^~~~~~~~~~
lib/color.c:36:13: warning: 'style_file_name' redeclared without dllimport attribute: previous dllimport ignored [-Wattributes]
   36 | const char *style_file_name = NULL;
      |             ^~~~~~~~~~~~~~~
(수정)
lib/color.h 수정
#ifndef COLOR_H
#define COLOR_H

#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>

//#include "term-ostream.h"

enum color_option {
    color_no,
    color_tty,
    color_yes,
    color_html
};

#ifdef _WIN32
  #define BUILDING_DLL
  #ifdef BUILDING_DLL
    #define DLLIMPORT __declspec(dllexport)
  #else
    #define DLLIMPORT __declspec(dllimport)
  #endif
#else
  #define DLLIMPORT
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern DLLIMPORT bool color_test_mode;
extern DLLIMPORT enum color_option color_mode;
extern DLLIMPORT const char *style_file_name;

extern bool handle_color_option(const char *option);
extern void handle_style_option(const char *option);
extern void print_color_test(void);
extern void style_file_prepare(const char *style_file_envvar, const char *default_style_file_name);

#ifdef __cplusplus
}
#endif

#endif /* COLOR_H */

lib/color.c 수정
bool color_test_mode = false;
enum color_option color_mode = color_tty;
const char *style_file_name = NULL;
bool
handle_color_option (const char *option)
{}
void
handle_style_option (const char *option)
{}
void
print_color_test ()
{}
static const char *
style_file_lookup (const char *file_name, const char *stylesdir_after_install)
{}
void
style_file_prepare (const char *style_file_envvar,
                    const char *stylesdir_envvar,
                    const char *stylesdir_after_install,
                    const char *default_style_file)
{}

(오류)
lib/color.c: In function 'print_color_test':
lib/color.c:78:37: error: unknown type name 'term_color_t'
   78 |   static struct { const char *name; term_color_t c; int r; int g; int b; }
      |                                     ^~~~~~~~~~~~

(수정)



(오류)
CDPATH="${ZSH_VERSION+.}:" && cd . && /bin/sh '/c/libidn2/gettext-0.22.5/libtextstyle/build-aux/missing' aclocal-1.16 -I m4 -I gnulib-m4
 cd . && /bin/sh /c/libidn2/gettext-0.22.5/libtextstyle/build-aux/missing automake-1.16 --gnu
configure.ac:25: error: required file './ABOUT-NLS' not found
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
echo > ABOUT-NLS
configure.ac 수정
AC_USE_SYSTEM_EXTENSIONS
AM_GNU_GETTEXT([external]) # configure.ac: not using Gettext

#AC_PREREQ([2.64])  # Autoconf minimum version
#AC_INIT([libtextstyle], [0.1], [bug-libtextstyle@example.com])
#AM_INIT_AUTOMAKE([1.13 silent-rules])
AC_PREREQ([2.69])  # Autoconf 최소 요구 사항
AC_INIT([Your Program], [1.0], [bug@example.com])  # 프로그램 이름, 버전 및 버그 보고 이메일
AM_INIT_AUTOMAKE([-Wall -Werror foreign])  # Automake 초기화
AC_PROG_CC

(오류)
lib/color.c:41:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
   41 | {
      | ^
lib/color.c:69:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
   69 | {
      | ^
lib/color.c:76:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
   76 | {
      | ^
lib/color.c:382:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
  382 | {
      | ^
lib/color.c:414:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
  414 | {
      | ^
(수정)
lib/color.h 파일에서  #include "term-ostream.h" 를 넣으면 위와같은 에러가 계속 발생
lib/term-ostream.h, lib/term-ostream.oo.h 수정
385 line  extern bool is_instance_of_term_ostream (term_ostream_t stream); <-세미콜론누락

(오류)
lib/color.c: In function 'print_color_test':
lib/color.c:84:18: error: storage size of 'stream' isn't known
   84 |   term_ostream_t stream;
      |                  ^~~~~~

(수정)
lib/term_ostream.priv.h 수정
typedef struct => struct term_ostream_representation 로 수정

(오류)
lib/color.c: In function 'print_color_test':
lib/color.c:91:22: error: incompatible type for argument 1 of 'ostream_write_str'
   91 |   ostream_write_str (stream, "Colors (foreground/background):\n");
      |                      ^~~~~~
      |                      |
      |                      term_ostream_t {aka struct term_ostream_representation}
In file included from term-ostream.oo.h:30,
                 from lib/color.h:30,
                 from lib/color.c:18:
lib/ostream.h:128:41: note: expected 'ostream_t' {aka 'struct term_ostream_representation *'} but argument is of type 'term_ostream_t' {aka 'struct term_ostream_representation'}
  128 | extern void ostream_write_str(ostream_t stream, const char *string);
      |                               ~~~~~~~~~~^~~~~~
(수정)
lib/term-ostream.h 수정
//typedef struct term_ostream_representation term_ostream_t;
typedef struct term_ostream_representation * term_ostream_t;

(오류)
lib/color.c: In function 'style_file_lookup':
lib/color.c:374:8: error: implicit declaration of function 'IS_FILE_NAME_WITH_DIR' [-Wimplicit-function-declaration]
  374 |   if (!IS_FILE_NAME_WITH_DIR (file_name))
      |        ^~~~~~~~~~~~~~~~~~~~~
lib/color.c:384:13: error: implicit declaration of function 'xconcatenated_filename' [-Wimplicit-function-declaration]
  384 |             xconcatenated_filename (stylesdir_after_install, file_name, NULL);
      |             ^~~~~~~~~~~~~~~~~~~~~~
lib/color.c:384:13: error: initialization of 'char *' from 'int' makes pointer from integer without a cast [-Wint-conversion]
lib/color.c: In function 'style_file_prepare':
lib/color.c:424:27: error: assignment to 'const char *' from 'int' makes pointer from integer without a cast [-Wint-conversion]
  424 |           style_file_name =
      |                           ^

(수정)
lib/color.h 수정
#include "filename.h"

(오류)
lib/color.c: In function 'style_file_lookup':
lib/color.c:384:13: error: implicit declaration of function 'xconcatenated_filename' [-Wimplicit-function-declaration]
  384 |             xconcatenated_filename (stylesdir_after_install, file_name, NULL);
      |             ^~~~~~~~~~~~~~~~~~~~~~
lib/color.c:384:13: error: initialization of 'char *' from 'int' makes pointer from integer without a cast [-Wint-conversion]
lib/color.c: In function 'style_file_prepare':
lib/color.c:424:27: error: assignment to 'const char *' from 'int' makes pointer from integer without a cast [-Wint-conversion]
  424 |           style_file_name =
      |                           ^

(수정)
lib/color.h 수정
#include "concat-filename.h" 

(오류)
term-ostream.oo.c:1113:26: warning: 'struct any_ostream_representation' declared inside parameter list will not be visible outside of this definition or declaration
term-ostream.oo.c: In function 'get_control_data':
term-ostream.oo.c:1114:17: error: invalid use of undefined type 'struct any_ostream_representation'
term-ostream.oo.c: In function 'out_color_change':
term-ostream.oo.c:1289:17: error: 'struct term_ostream_representation' has no member named 'is_windows_console'
term-ostream.oo.c:1299:45: error: 'struct term_ostream_representation' has no member named 'current_console_attributes'
term-ostream.oo.c:1309:43: error: 'struct term_ostream_representation' has no member named 'handle'
term-ostream.oo.c:1312:19: error: 'struct term_ostream_representation' has no member named 'current_console_attributes'
(수정)
HAVE_WINDOWS_CONSOLES가 config.h에 없어서 문제가 발생
configure.ac 수정
# 윈도우 콘솔 관련 라이브러리 또는 헤더 파일 체크
AC_CHECK_HEADERS([windows.h], 
    [AC_DEFINE([HAVE_WINDOWS_CONSOLES], [1], [Define to 1 if Windows consoles are available.])],
    [AC_DEFINE([HAVE_WINDOWS_CONSOLES], [0], [Define to 0 if Windows consoles are not available.])]
)

config.h 생성
/* Define to 0 if Windows consoles are not available. */
#define HAVE_WINDOWS_CONSOLES 1

(오류)
In file included from ../lib/textstyle.h:36,
                 from hello.c:21:
../lib/term_ostream.priv.h:163:5: error: unknown type name 'HANDLE'
  163 |     HANDLE handle;
      |     ^~~~~~
../lib/term_ostream.priv.h:201:5: error: unknown type name 'WORD'
  201 |     WORD default_console_attributes;
      |     ^~~~
../lib/term_ostream.priv.h:202:5: error: unknown type name 'WORD'
  202 |     WORD current_console_attributes;
      |     ^~~~
(수정)
lib/term_ostream.priv.h 수정
#include "config.h"
#ifdef HAVE_WINDOWS_CONSOLES  // _WIN32
#include <windows.h>	      // HANDLE, WORD
#endif

(오류)

(수정)
configure.ac 수정
# 플랫폼별 시스템 헤더 설정
AC_DEFUN([CHECK_WINDOWS_CONSOLES], [
  AC_MSG_CHECKING([for Windows consoles])
  if test -f /mingw64/include/windows.h; then
    AC_DEFINE([HAVE_WINDOWS_CONSOLES], [1], [Define to 1 if you have Windows consoles.])
    AC_MSG_RESULT([yes])
  else
    AC_MSG_RESULT([no])
  fi
])

# 호출
CHECK_WINDOWS_CONSOLES

config.h 생성됨
/* Define to 1 if you have Windows consoles. */
#define HAVE_WINDOWS_CONSOLES 1

lib/term-ostream.c, lib/term-ostream.oo.c 수정
#include "config.h"
#ifdef HAVE_WINDOWS_CONSOLES  
#include <windows.h>	      // HANDLE, WORD
#endif

(오류)
term-ostream.oo.c:1939:3: error: initialization of 'term_style_control_data * (*)(term_style_user_data *)' from incompatible pointer type 'struct term_style_control_data * (*)(struct term_ostream_representation *)' [-Wincompatible-pointer-types]
term-ostream.oo.c:1939:3: note: (near initialization for 'controller.get_control_data')
term-ostream.oo.c:1940:3: error: initialization of 'void (*)(term_style_user_data *)' from incompatible pointer type 'void (*)(struct term_ostream_representation *)' [-Wincompatible-pointer-types]
(수정)
lib/term-style-control.h
struct term_style_controller {
(정의) term_style_control_data *(*get_control_data)(term_style_user_data *);  /* Function to get control data */
    void (*restore)(term_style_user_data *);  /* Restore terminal to default state */
    _GL_ASYNC_SAFE void (*async_restore)(term_style_user_data *);  /* Async-safe restore function */
    _GL_ASYNC_SAFE void (*async_set_attributes_from_default)(term_style_user_data *);  /* Set attributes from default */
};
lib/term-ostream.c, lib/term-ostream.oo.c 수정
매개변수타입일치시킴
//get_control_data (struct term_ostream_representation  * stream)
//get_control_data (struct any_ostream_representation * stream)
struct term_style_control_data *
get_control_data (struct term_style_user_data  * stream)
{
  return  &stream->control_data; //term_style_control_data control_data;
}

(오류)
term-ostream.oo.c: In function 'get_control_data':
term-ostream.oo.c:1115:11: error: returning 'term_style_control_data **' from a function with incompatible return type 'struct term_style_control_data *' [-Wincompatible-pointer-types]

(수정)
&stream->control_data는 term_style_control_data ** 타입을 반환
term_style_control_data * 타입을 반환하도록 수정
struct term_style_control_data *
get_control_data (struct term_ostream_representation *stream)
{
  return stream->control_data; // control_data 자체를 반환
}

(오류)
term-ostream.oo.c:1940:3: error: initialization of 'void (*)(term_style_user_data *)' from incompatible pointer type 'void (*)(struct term_ostream_representation *
' [-Wincompatible-pointer-types]
term-ostream.oo.c:1940:3: note: (near initialization for 'controller.restore')
term-ostream.oo.c:1941:3: error: initialization of 'void (*)(term_style_user_data *)' from incompatible pointer type 'void (*)(struct term_ostream_representation *
' [-Wincompatible-pointer-types]
term-ostream.oo.c:1941:3: note: (near initialization for 'controller.async_restor
')
(수정)
lib/term-style-control.h 정의확인
struct term_style_controller {
    term_style_control_data *(*get_control_data)(term_style_user_data *);  /* Function to get control data */
    void (*restore)(term_style_user_data *);  /* Restore terminal to default state */
    _GL_ASYNC_SAFE void (*async_restore)(term_style_user_data *);  /* Async-safe restore function */
    _GL_ASYNC_SAFE void (*async_set_attributes_from_default)(term_style_user_data *);  /* Set attributes from default */
};
lib/term-ostream.c, lib/term-ostream.oo.c 수정
// term_style_user_data로부터 control_data를 가져오는 함수
//term_style_control_data *(*get_control_data)(term_style_user_data *);  /* Function to get control data */
struct term_style_control_data *
get_control_data (term_style_user_data * user_data)
{
    //struct term_ostream_representation *stream = (struct term_ostream_representation *)user_data; // 변환
    return &user_data->control_data; // control_data는 term_style_control_data 타입이어야 합니다.
}

// 터미널을 기본 상태로 복원하는 함수
//void (*restore)(term_style_user_data *);  /* Restore terminal to default state */
static void
restore(term_style_user_data * stream)
//restore (struct term_ostream_representation * stream)
//restore (struct any_ostream_representation * stream)

// 비동기적으로 터미널을 기본 상태로 복원하는 함수
// _GL_ASYNC_SAFE void (*async_restore)(term_style_user_data *);  /* Async-safe restore function */
static _GL_ASYNC_SAFE void
//async_restore (struct term_ostream_representation * stream)
async_restore (term_style_user_data * stream)

// 기본값으로부터 속성을 설정하는 비동기 함수
//_GL_ASYNC_SAFE void (*async_set_attributes_from_default)(term_style_user_data *);  /* Set attributes from default */
static _GL_ASYNC_SAFE void
//async_set_attributes_from_default (struct term_ostream_representation * stream)
async_set_attributes_from_default (term_style_user_data * stream)

// term_style_controller 구조체 초기화
static const struct term_style_controller controller =
{
  get_control_data,
  restore,
  async_restore,
  async_set_attributes_from_default
};

(오류)
term-ostream.oo.c: In function 'restore':
term-ostream.oo.c:1827:13: error: 'term_style_user_data' has no member named 'is_windows_console'
term-ostream.oo.c:1832:38: error: 'term_style_user_data' has no member named 'handle'
term-ostream.oo.c:1832:54: error: 'term_style_user_data' has no member named 'default_console_attributes'
term-ostream.oo.c:1840:22: error: 'term_style_user_data' has no member named 'fd'
term-ostream.oo.c:1842:17: error: 'term_style_user_data' has no member named 'restore_colors'
term-ostream.oo.c:1843:22: error: 'term_style_user_data' has no member named 'restore_colors'
term-ostream.oo.c:1844:17: error: 'term_style_user_data' has no member named 'restore_weight'
term-ostream.oo.c:1845:22: error: 'term_style_user_data' has no member named 'restore_weight'
term-ostream.oo.c:1846:17: error: 'term_style_user_data' has no member named 'restore_posture'
term-ostream.oo.c:1847:22: error: 'term_style_user_data' has no member named 'restore_posture'
term-ostream.oo.c:1848:17: error: 'term_style_user_data' has no member named 'restore_underline'
term-ostream.oo.c:1849:22: error: 'term_style_user_data' has no member named 'restore_underline'
term-ostream.oo.c:1850:17: error: 'term_style_user_data' has no member named 'restore_hyperlink'
term-ostream.oo.c:1851:22: error: 'term_style_user_data' has no member named 'restore_hyperlink'

(수정)
lib/term_ostream.priv.h
struct term_ostream_representation의 멤버들임

lib/term-ostream.h, lib/term-ostream.oo.h 수정
term_style_control_data *(*get_control_data)(term_style_user_data *);  /* Function to get control data */

lib/term-ostream.c, lib/term-ostream.oo.c 수정
get_control_data (term_style_user_data * stream)
{
    return  stream->control_data; // control_data는 term_style_control_data 타입이어야 합니다.
}

static void restore (struct term_ostream_representation * stream) {}
static _GL_ASYNC_SAFE void async_restore (struct term_ostream_representation * stream) {}
static _GL_ASYNC_SAFE void async_set_attributes_from_default (struct term_ostream_representation * stream) {}

(오류)
term-ostream.oo.c:1973:55: error: unknown type name 'term_ostream_representation'; did you mean 'any_ostream_representation'?
(수정)
lib/term-ostream.c, lib/term-ostream.oo.c 수정
term_style_user_data *convert_to_term_style_user_data(struct term_ostream_representation *rep) { //struct 추가
    // 필요한 변환 로직 작성
    return (term_style_user_data *) rep; // 가정: 직접 변환 가능할 때
}

(오류)
term-ostream.oo.c: In function 'output_buffer':
term-ostream.oo.c:2020:82: error: passing argument 1 of 'convert_to_term_style_user_data' from incompatible pointer type [-Wincompatible-pointer-types]
term-ostream.oo.c:1973:91: note: expected 'struct term_ostream_representation *' but argument is of type 'term_style_user_data *'
term-ostream.oo.c: In function 'output_buffer':
term-ostream.oo.c:2062:52: error: passing argument 2 of 'deactivate_term_non_default_mode' from incompatible pointer type [-Wincompatible-pointer-types]
(수정)
lib/term-ostream.c, lib/term-ostream.oo.c 수정
//activate_term_non_default_mode(&controller, convert_to_term_style_user_data((term_style_user_data *) stream));
activate_term_non_default_mode(&controller, convert_to_term_style_user_data((struct term_ostream_representation *) stream));

//deactivate_term_non_default_mode(&controller, (term_style_user_data *) stream);
deactivate_term_non_default_mode(&controller, convert_to_term_style_user_data((struct term_ostream_representation *) stream));

(오류)
In file included from term-ostream.oo.h:29,
                 from lib/term-ostream.c:40:
lib/term-style-control.h:58:68: note: expected 'term_style_user_data *' but argument is of type 'int'
   58 |                                              term_style_user_data *user_data);
      |                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
term-ostream.oo.c: At top level:
term-ostream.oo.c:1974:23: error: conflicting types for 'convert_to_term_style_user_data'; have 'term_style_user_data *(struct term_ostream_representation *)'
term-ostream.oo.c:1969:49: note: previous implicit declaration of 'convert_to_term_style_user_data' with type 'int()'
term-ostream.oo.c: In function 'output_buffer':
term-ostream.oo.c:2064:49: error: expected expression before ',' token
term-ostream.oo.c:2064:2: error: too many arguments to function 'deactivate_term_non_default_mode'
lib/term-style-control.h:57:13: note: declared here
   57 | extern void deactivate_term_non_default_mode(const struct term_style_controller *controller,
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(수정)
오타 ,

(오류)
term-ostream.oo.c: In function 'activate_default_attr':
term-ostream.oo.c:1969:49: error: implicit declaration of function 'convert_to_term_style_user_data' [-Wimplicit-function-declaration]
term-ostream.oo.c:1969:49: error: passing argument 2 of 'deactivate_term_non_default_mode' makes pointer from integer without a cast [-Wint-conversion]

(수정)
lib/term-ostream.oo.c, lib/term-ostream.c 수정
호출전에선언(위치변경)
term_style_user_data *convert_to_term_style_user_data(struct term_ostream_representation *rep) {
    // 필요한 변환 로직 작성
    return (term_style_user_data *) rep; // 가정: 직접 변환 가능할 때
}

(오류)
term-ostream.oo.c: In function 'term_ostream__free':
term-ostream.oo.c:2204:50: error: passing argument 2 of 'deactivate_term_style_controller' from incompatible pointer type [-Wincompatible-pointer-types]
(수정)
lib/term-ostream.c 수정
static void
term_ostream__free (term_ostream_t stream)
{
//deactivate_term_style_controller (&controller, stream);
deactivate_term_style_controller (&controller, convert_to_term_style_user_data((struct term_ostream_representation *) stream));
}
lib/term-ostream.oo.c 수정
static void
term_ostream::free (term_ostream_t stream)
{
  //deactivate_term_style_controller (&controller, stream);
  deactivate_term_style_controller (&controller, convert_to_term_style_user_data((struct term_ostream_representation *) stream));
}

(오류)
term-ostream.oo.c: In function 'term_ostream__set_hyperlink':
term-ostream.oo.c:2333:32: error: implicit declaration of function 'XMALLOC' [-Wimplicit-function-declaration]
term-ostream.oo.c:2333:41: error: expected expression before 'hyperlink_t'
term-ostream.oo.c: In function 'term_ostream_create':
term-ostream.oo.c:2865:20: error: implicit declaration of function 'XNMALLOC'; did you mean 'XMALLOC'? [-Wimplicit-function-declaration]
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'XMALLOC' ./lib
XMALLOC 정의가없음
lib/xmalloca.h 수정
#include <stdlib.h> // xmalloc 함수 선언이 포함된 경우
#ifdef __cplusplus
extern "C" {
#endif
#define XMALLOC(type) ((type *) xmalloc(sizeof(type)))
#ifdef __cplusplus
}
#endif
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'XNMALLOC' ./lib
XNMALLOC 정의가없음
lib/xmalloca.h 수정
#define XNMALLOC(count, type) ((type *) xmalloc ((count) * sizeof(type))) //XNMALLOC정의 추가

(오류)
term-ostream.oo.c: In function 'term_ostream_create':
term-ostream.oo.c:2890:48: error: passing argument 2 of 'activate_term_style_controller' from incompatible pointer type [-Wincompatible-pointer-types]
In file included from term-ostream.oo.h:29,
                 from lib/term-ostream.c:40:
lib/term-style-control.h:51:66: note: expected 'term_style_user_data *' but argument is of type 'term_ostream_t' {aka 'struct term_ostream_representation *'}
   51 |                                            term_style_user_data *user_data,
      |                                            ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
(수정)
lib/term-ostream.c, lib/term-ostream.oo.c 수정
term_ostream_t
term_ostream_create (int fd, const char *filename, ttyctl_t tty_control)
{
  /* Prepare tty control.  */
  //activate_term_style_controller (&controller, stream, fd, tty_control);
  activate_term_style_controller (&controller, convert_to_term_style_user_data((struct term_ostream_representation *) stream), fd, tty_control);
}

(오류)
In file included from lib/ostream.h:9,
                 from ostream.oo.c:21:
lib/term_ostream.priv.h:148:5: error: unknown type name 'bool'
  148 |     bool non_default_active;           /* Non-default mode status */
      |     ^~~~
(수정)
lib/term_ostream.priv.h
#include <stdbool.h> // bool

(오류)
In file included from lib/ostream.h:9,
                 from ostream.oo.c:21:
lib/term_ostream.priv.h:148:5: error: unknown type name 'bool'
  148 |     bool non_default_active;           /* Non-default mode status */
      |     ^~~~
lib/term_ostream.priv.h:1:1: note: 'bool' is defined in header '<stdbool.h>'; this is probably fixable by adding '#include <stdbool.h>'
  +++ |+#include <stdbool.h>
    1 | #ifndef TTYCTL_T_H
(수정)
lib/term_ostream.priv.h 수정
전역으로 이동
#include "config.h"

#ifdef HAVE_WINDOWS_CONSOLES  
#include <windows.h>	      // HANDLE, WORD
#endif

#include <stdbool.h>		  // bool
#include <pthread.h>          // Mutex
#include <stdint.h>           // uint32_t, uint64_t
#include "ostream.priv.h"     // Include the header where any_ostream_representation is defined

(오류)
lib/concat-filename.c: In function 'concatenated_filename':
lib/concat-filename.c:69:7: error: implicit declaration of function 'stpcpy'; did you mean 'strcpy'? [-Wimplicit-function-declaration]
   69 |   p = stpcpy (p, filename);
      |       ^~~~~~
      |       strcpy
lib/concat-filename.c:69:5: error: assignment to 'char *' from 'int' makes pointer from integer without a cast [-Wint-conversion]
   69 |   p = stpcpy (p, filename);
      |     ^

(수정)
lib/string.h
#if 1
//# if 0
# if 1
#  if !(defined __cplusplus && defined GNULIB_NAMESPACE)
#   undef stpcpy
#   define stpcpy rpl_stpcpy
#  endif

//#endif /* _GL_LTS_STRING_H */
#endif /* _GL_LTS_STRING_H */

lib/concat-filename.h, lib/concat-filename.h~ 수정
#include "string.h" //stpcpy

(오류)
lib/term-style-control.c:34:62: error: unknown type name 'term_ostream_t'; did you mean 'term_posture_
'?
   34 | struct term_style_user_data *convert_to_term_style_user_data(term_ostream_t *term_ostream) {
      |                                                              ^~~~~~~~~~~~~~
      |                                                              term_posture_t

(수정)
lib/term-style-control.h 수정
#include "term-ostream.h"

(오류)
In file included from lib/term-style-control.c:57:
lib/fatal-signal.h:95:14: error: unknown type name 'sigset_t'; did you mean '_sigset_t'?
   95 | extern const sigset_t * get_fatal_signal_set (void);
      |              ^~~~~~~~
      |              _sigset_t

(수정)
lib/term-style-control.h 수정
#ifdef _WIN32
typedef _sigset_t sigset_t;
#endif

(오류)
In file included from lib/term-style-control.c:58:
lib/sig-handler.h:41:21: warning: 'struct sigaction' declared inside parameter list will not be visible outside of this definition or declaration
   41 | get_handler (struct sigaction const *a)
      |                     ^~~~~~~~~

(수정)
비POSIX환경에서는 제공되지 않아 구현해야함
lib/sig-handler.h 수정
#include <signal.h>

_GL_INLINE_HEADER_BEGIN
#ifndef SIG_HANDLER_INLINE
# define SIG_HANDLER_INLINE _GL_INLINE
#endif

/* Convenience type when working with signal handlers.  */
typedef void (*sa_handler_t) (int);

#ifdef _WIN32  // Windows
struct sigaction {
    sa_handler_t sa_handler;  // 핸들러 함수 포인터 
    sigset_t sa_mask;         // 신호 마스크
    int sa_flags;             // 플래그
    void (*sa_restorer)(void); // 복구 함수 포인터 (선택적)
};
#endif /* _WIN32 */

(오류)
lib/term-style-control.c: In function 'atexit_handler':
lib/term-style-control.c:443:35: error: passing argument 1 of '((const struct term_style_controller *)active_controller)->restore' from incompatible pointer type [-Wincompatible-pointer-types]
  443 |       active_controller->restore (active_user_data);
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   struct term_style_user_data *
lib/term-style-control.c:443:35: note: expected 'struct term_ostream_representation *' but argument is of type 'struct term_style_user_data *'
(수정)
lib/term-style-control.h 확인
void (*restore)(struct term_ostream_representation *); 

lib/term-style-control.c 수정
struct term_ostream_representation의 멤버를 사용하므로 
//static struct term_style_user_data * volatile active_user_data; //struct term_ostream_representation *로 바꿔야함
static struct term_ostream_representation * volatile active_user_data;

(오류)
lib/term-style-control.c: In function 'atexit_handler':
lib/term-style-control.c:446:60: error: passing argument 2 of 'deactivate_term_non_default_mode' from incompatible pointer type [-Wincompatible-pointer-types]
  446 |       deactivate_term_non_default_mode (active_controller, active_user_data);
      |                                                            ^~~~~~~~~~~~~~~~
      |                                                            |
      |                                                            struct term_ostream_representation
(수정)
lib/term-style-control.h 수정
extern void deactivate_term_non_default_mode(const struct term_style_controller *controller,
struct term_ostream_representation *user_data);
//term_style_user_data *user_data);

extern void deactivate_term_style_controller(const struct term_style_controller *controller,
struct term_ostream_representation *user_data);
//term_style_user_data *user_data);

lib/term-style-control.c 수정
//deactivate_term_non_default_mode(&controller, (term_style_user_data *) stream);
deactivate_term_non_default_mode(&controller, (struct term_ostream_representation *) stream);

//deactivate_term_style_controller (&controller, stream);
//deactivate_term_style_controller (&controller, convert_to_term_style_user_data((struct term_ostream_representation *) stream));
deactivate_term_style_controller (&controller, (struct term_ostream_representation *) stream);

(오류)
term-ostream.oo.c: In function 'output_buffer':
term-ostream.oo.c:2065:49: error: passing argument 2 of 'deactivate_term_non_default_mode' from incompatible pointer type [-Wincompatible-pointer-types]
In file included from term-ostream.oo.h:29,
                 from lib/term-ostream.c:40:
lib/term-style-control.h:64:126: note: expected 'struct term_ostream_representation *' but argument is of type 'term_style_user_data *'
   64 |                                                                                          struct term_ostream_representation *user_data);
      |                                                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
term-ostream.oo.c: In function 'term_ostream__free':
term-ostream.oo.c:2206:50: error: passing argument 2 of 'deactivate_term_style_controller' from incompatible pointer type [-Wincompatible-pointer-types]
lib/term-style-control.h:68:82: note: expected 'struct term_ostream_representation *' but argument is of type 'term_style_user_data *'
   68 |                                              struct term_ostream_representation *user_data);
      |                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~

(수정)
lib/term-ostream.c, lib/term-ostream.oo.c 수정
static void
output_buffer (term_ostream_t stream, attributes_t goal_attr){
if (equal_attributes (goal_attr, stream->default_attr))
//deactivate_term_non_default_mode (&controller, stream);
//deactivate_term_non_default_mode (&controller, convert_to_term_style_user_data((struct term_ostream_representation *) stream));
deactivate_term_non_default_mode (&controller, (struct term_ostream_representation *) stream);
}

static void
term_ostream__free (term_ostream_t stream)
{
//deactivate_term_style_controller (&controller, stream);
//deactivate_term_style_controller (&controller, convert_to_term_style_user_data((struct term_ostream_representation *) stream));
deactivate_term_style_controller (&controller, (struct term_ostream_representation *) stream);
}

(오류)
lib/term-style-control.c: In function 'init_relevant_signal_set':
lib/term-style-control.c:584:7: error: implicit declaration of function 'sigemptyset' [-Wimplicit-function-declaration]
  584 |       sigemptyset (&relevant_signal_set);
      |       ^~~~~~~~~~~
lib/term-style-control.c:586:9: error: implicit declaration of function 'sigaddset' [-Wimplicit-function-declaration]
  586 |         sigaddset (&relevant_signal_set, fatal_signals[i]);
      |         ^~~~~~~~~
lib/term-style-control.c: In function 'block_relevant_signals':
lib/term-style-control.c:605:3: error: implicit declaration of function 'sigprocmask' [-Wimplicit-function-declaration]
  605 |   sigprocmask (SIG_BLOCK, &relevant_signal_set, NULL);
      |   ^~~~~~~~~~~

(수정)
lib/term-style-control.h 수정
#ifdef _WIN32
typedef unsigned int sigset_t;

int sigemptyset(sigset_t *set) {
    if (set) {
        *set = 0;
        return 0;
    }
    return -1;
}

int sigaddset(sigset_t *set, int signal) {
    if (set && signal > 0 && signal < 32) {
        *set |= (1U << signal);
        return 0;
    }
    return -1;
}

int sigprocmask(int how, const sigset_t *set, sigset_t *oldset) {
    return 0;
}
#endif /* _WIN32 */

(오류)
lib/term-style-control.c: In function 'activate_term_non_default_mode':
lib/term-style-control.c:921:24: error: assignment to 'struct term_ostream_representation *' from incompatible pointer type 'struct term_style_user_data *' [-Wincompatible-pointer-types]
  921 |       active_user_data = user_data;
      |                        ^
lib/term-style-control.c: In function 'deactivate_term_non_default_mode':
lib/term-style-control.c:943:35: error: passing argument 1 of 'controller->get_control_data' from incompatible pointer type [-Wincompatible-pointer-types]
  943 |     controller->get_control_data (user_data);
      |                                   ^~~~~~~~~
      |                                   |
      |                                   struct term_ostream_representation *
lib/term-style-control.c:943:35: note: expected 'term_style_user_data *' but argument is of type 'struct term_ostream_representation *'
lib/term-style-control.c: In function 'deactivate_term_style_controller':
lib/term-style-control.c:1035:35: error: passing argument 1 of 'controller->get_control_data' from incompatible pointer type [-Wincompatible-pointer-types]
 1035 |     controller->get_control_data (user_data);
      |                                   ^~~~~~~~~
      |                                   |
      |                                   struct term_ostream_representation *
lib/term-style-control.c:1035:35: note: expected 'term_style_user_data *' but argument is of type 'struct term_ostream_representation *'

(수정)
lib/term-style-control.h 수정
extern void activate_term_non_default_mode(const struct term_style_controller *controller,
struct term_ostream_representation *user_data);
//term_style_user_data *user_data);

lib/term-style-control.c 수정
void
activate_term_non_default_mode (const struct term_style_controller *controller,
struct term_ostream_representation *user_data)
//struct term_style_user_data *user_data)

void
deactivate_term_non_default_mode (const struct term_style_controller *controller,
                                  struct term_ostream_representation *user_data)
				  //struct term_style_user_data *user_data)
{
struct term_style_control_data *control_data =
controller->get_control_data ((term_style_user_data * )user_data);
//controller->get_control_data (user_data);
}

void
deactivate_term_style_controller (const struct term_style_controller *controller,
								  struct term_ostream_representation *user_data)
                                  //struct term_style_user_data *user_data)
{
struct term_style_control_data *control_data =
controller->get_control_data ((term_style_user_data * )user_data);
//controller->get_control_data (user_data);
}

(오류)
term-ostream.oo.c: In function 'output_buffer':
term-ostream.oo.c:2023:50: error: passing argument 2 of 'activate_term_non_default_mode' from incompatible pointer type [-Wincompatible-pointer-types]
In file included from term-ostream.oo.h:29,
                 from lib/term-ostream.c:40:
lib/term-style-control.h:81:125: note: expected 'struct term_ostream_representation
' but argument is of type 'term_style_user_data *'
   81 |
           struct term_ostream_representation *user_data);
      |
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
term-ostream.oo.c:2058:46: error: passing argument 2 of 'activate_term_non_default_mode' from incompatible pointer type [-Wincompatible-pointer-types]
lib/term-style-control.h:81:125: note: expected 'struct term_ostream_representation
' but argument is of type 'term_style_user_data *'
   81 |
           struct term_ostream_representation *user_data);
      |
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
(수정)
lib/term-ostream.c, lib/term-ostream.oo.c 수정
static void
output_buffer (term_ostream_t stream, attributes_t goal_attr)
{
//activate_term_non_default_mode(&controller, convert_to_term_style_user_data((term_style_user_data *) stream));
//activate_term_non_default_mode(&controller, convert_to_term_style_user_data((struct term_ostream_representation *) stream));
activate_term_non_default_mode(&controller, (struct term_ostream_representation *) stream);

if (!equal_attributes (goal_attr, stream->default_attr))
//activate_term_non_default_mode (&controller, stream);
//activate_term_non_default_mode(&controller, convert_to_term_style_user_data((struct term_ostream_representation *) stream));
activate_term_non_default_mode(&controller, (struct term_ostream_representation *) stream);
}

(오류)
lib/term-style-control.c: In function 'activate_term_non_default_mode':
lib/term-style-control.c:894:35: error: passing argument 1 of 'controller->get_control_data' from incompatible pointer type [-Wincompatible-pointer-types]
  894 |     controller->get_control_data (user_data);
      |                                   ^~~~~~~~~
      |                                   |
      |                                   struct term_ostream_representation *
lib/term-style-control.c:894:35: note: expected 'term_style_user_data *' but argument is of type 'struct term_ostream_representation *'

(수정)
lib/term-style-control.c 수정
void
activate_term_non_default_mode (const struct term_style_controller *controller,
                                struct term_ostream_representation *user_data)
				//struct term_style_user_data *user_data)
{
  struct term_style_control_data *control_data =
    controller->get_control_data ((struct term_style_user_data * ) user_data);
    //controller->get_control_data (user_data);
}

(오류)
더이상오류경고메시지가 출력되지않는데 마지막메시지가 
make[2]: *** [Makefile:922: libtextstyle.la] 오류 1
make[2]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make[1]: *** [Makefile:958: all-recursive] 오류 1
make[1]: 디렉터리 '/c/libidn2/gettext-0.22.5/libtextstyle' 나감
make: *** [Makefile:814: all] 오류 2
이렇게 나와 상세한 오류를 봐야할것같아 명령어에 옵션들을 추가하기로함
(수정)
명령어수정
aclocal 2>&1 && autoconf 2>&1 && autoheader 2>&1 && automake --add-missing 2>&1 && libtoolize 2>&1 && autoreconf -ivf 2>&1 && ./configure 2>&1 && make clean 2>&1 && make 2>&1 || echo "An error occurred in the build process."

(오류)
rmdir: failed to remove 'sys': Directory not empty
(수정)
lib/sys 백업 후 lib/sys 비우고 다시 make 명령어를 실행

(오류)
multiple definition of `sigaddset'; lib/.libs/color.o:color.c:(.text+0xf0): first defined here
multiple definition of `sigprocmask'; lib/.libs/color.o:color.c:(.text+0x120): first defined here
multiple definition of `sigemptyset'; lib/.libs/color.o:color.c:(.text+0xd0): first defined here

(수정)
sigemptyset, sigaddset, sigprocmask와 같은 함수들이 여러 파일에서 중복 정의
grep -rnw './lib' -e 'sigaddset' 명령어를 실행한 후, 해당 경로의 모든 파일에서 sigaddset이라는 심볼을 검색
./lib/term-style-control.h:26:int sigaddset(sigset_t *set, int signal) //사용자 정의
./lib/signal.h:806:_GL_FUNCDECL_SYS (sigaddset, int, (sigset_t *set, int sig) //시스템에서 제공
./lib/signal.in.h:272:_GL_FUNCDECL_SYS (sigaddset, int, (sigset_t *set, int sig) //시스템에서 제공
./lib/signal.in.h:275:_GL_CXXALIAS_SYS (sigaddset, int, (sigset_t *set, int sig)); //시스템에서 제공
term-style-control.h 수정
// 재정의 오류 signal.h
// int sigemptyset(sigset_t *set) {
//     if (set) {
//         *set = 0;
//         return 0;
//     }
//     return -1;
// }

// 재정의 오류 signal.h
// int sigaddset(sigset_t *set, int signal) {
//     if (set && signal > 0 && signal < 32) {
//         *set |= (1U << signal);
//         return 0;
//     }
//     return -1;
// }

// 재정의 오류 signal.h
// int sigprocmask(int how, const sigset_t *set, sigset_t *oldset) {
//     return 0;
// }

(오류)
undefined reference to `tparm'; lib/.libs/color.o:color.c: line 50
undefined reference to `tputs'; lib/.libs/color.o:color.c: line 55
undefined reference to `xmalloc'; lib/.libs/color.o:color.c: line 60
undefined reference to `xrealloc'; lib/.libs/color.o:color.c: line 65
undefined reference to `_gl_nothrow_get_osfhandle'; lib/.libs/color.o:color.c: line 70
undefined reference to `xgethostname'; lib/.libs/color.o:color.c: line 75

(수정)
configure.ac 수정

# GNULIB 모듈 정의
GNULIB_MODULES="
    ncurses
    terminfo
    xmalloc
    xrealloc
    xgethostname
    _gl_nothrow_get_osfhandle
"

m4_pattern_allow([GNULIB_MODULES]) # 허용 패턴 설정

AC_CHECK_LIB([ncurses], [tputs]) # ncurses 라이브러리 링크 추가

Makefile.am 수정
lib_LTLIBRARIES = libtextstyle.la 
libtextstyle_la_SOURCES = \
	lib/color.c \
	lib/gl_array_list.c \
	lib/term-ostream.c \
	lib/ostream.c \
	lib/concat-filename.c \
	lib/xconcat-filename.c \
    lib/xsize.c \
	lib/error.c \
	lib/full-write.c \
	lib/term-style-control.c \
	lib/fsync.c \
	lib/xstrdup.c
libyourlib_la_LIBS = -lncurses $(GNULIB_LIBS)

(오류)
lib/term-style-control.c: In function 'init_relevant_signal_set':
lib/term-style-control.c:584:7: error: implicit declaration of function 'sigemptyset' [-Wimplicit-function-declaration]
  584 |       sigemptyset (&relevant_signal_set);
      |       ^~~~~~~~~~~
lib/term-style-control.c:586:9: error: implicit declaration of function 'sigaddset'
-Wimplicit-function-declaration]
  586 |         sigaddset (&relevant_signal_set, fatal_signals[i]);
      |         ^~~~~~~~~
lib/term-style-control.c: In function 'block_relevant_signals':
lib/term-style-control.c:605:3: error: implicit declaration of function 'sigprocmask' [-Wimplicit-function-declaration]
  605 |   sigprocmask (SIG_BLOCK, &relevant_signal_set, NULL);
      |   ^~~~~~~~~~~
(수정)
color.c에서 term-style-control.h에서 posix 함수들 중복정의로 주석처리한 부분을 같이 사용할 수 없어서
term-style-control.c 전용함수로 주석제거후 함수명 바꿔서 사용하기로 함
lib/term-style-control.h 수정
#ifdef _WIN32 // POSIX 미제공
typedef unsigned int sigset_t;

#ifndef sigemptyset
extern int sigemptyset(sigset_t *set) {
    if (set) {
        *set = 0;
        return 0;
    }
    return -1;
}
#endif

#ifndef sigaddset
extern int sigaddset(sigset_t *set, int signal) {
    if (set && signal > 0 && signal < 32) {
        *set |= (1U << signal);
        return 0;
    }
    return -1;
}
#endif

#ifndef sigprocmask
extern int sigprocmask(int how, const sigset_t *set, sigset_t *oldset) {
    return 0;
}
#endif

#endif /* _WIN32 */

(오류)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# aclocal 2>&1 && autoconf 2>&1 && autoheader 2>&1 && automake --add-missing 2>&1 && libtoolize 2>&1 && autoreconf -ivf 2>&1 && ./configure 2>&1 && make clean 2>&1 && make 2>&1 || echo "An error occurred in the build process."

(수정)
aclocal --verbose 2>&1 && \
autoconf --verbose 2>&1 && \
autoheader --verbose 2>&1 && \
automake --add-missing --verbose 2>&1 && \
libtoolize --verbose 2>&1 && \
autoreconf -ivf 2>&1 && \
./configure --verbose 2>&1 && \
make clean 2>&1 && \
make 2>&1 || echo "An error occurred in the build process."

(오류)
모든오류출력설정하기
(수정)
Makefile.am 수정
CFLAGS = -Wall -Wextra -Wpedantic -fdiagnostics-show-option #모든 경고와 추가적인 경고를 활성화
(직접실행옵션으로 : make CFLAGS="-Wall -Wextra -Wpedantic -fdiagnostics-show-option" )
-Werror : 모든 경고를 오류로 처리하고 
-fverbose-asm : 등을 사용하여 어셈블리 코드 출력 시 더 많은 정보를 받을 수 있습니다.
make VERBOSE=1 : 컴파일러 명령어가 화면에 표시됩니다.
-fdiagnostics-show-option : 경고가 발생한 위치를 명확히 보여줍니다.
-Wfatal-errors : 경고가 발생하더라도 컴파일을 계속하게 하려면 이 플래그를 사용해도 좋습니다.
모든 경고를 활성화 : GNU GCC 컴파일러의 경우 -Wall 플래그는 기본적으로 모든 경고를 활성화합니다. 
그러나 추가적인 경고를 추가하고 싶다면 -Wextra와 -pedantic을 고려할 수 있습니다.

- 빌드명령어
aclocal --verbose 2>&1 && \
autoconf --verbose 2>&1 && \
autoheader --verbose 2>&1 && \
automake --add-missing --verbose 2>&1 && \
libtoolize --verbose 2>&1 && \
autoreconf -ivf 2>&1 && \
./configure --verbose 2>&1 && \
make clean 2>&1 && \
make 2>&1 || \
echo "An error occurred in the build process."

aclocal: aclocal.m4 파일을 생성하여 사용자 정의 매크로를 포함합니다.
autoconf: configure 스크립트를 생성합니다.
autoheader: config.h.in 파일을 생성하여 헤더 파일의 매크로를 설정합니다.
automake: Makefile.in 파일을 생성하고 필요한 파일을 추가합니다.
libtoolize: Libtool을 초기화합니다.
autoreconf: 위의 모든 도구를 호출하여 설정을 업데이트합니다.
./configure: 구성 스크립트를 실행하여 Makefile을 생성합니다.
make clean: 이전 빌드를 청소합니다.
make: 프로그램을 빌드합니다

(오류)
lib/term-style-control.h:39:28: warning: unused parameter 'how' [-Wunused-parameter]
extern int sigprocmask(int how, const sigset_t *set, sigset_t *oldset) {
                         ~~~~^~~
lib/term-style-control.h: In function 'sigprocmask':
lib/term-style-control.h:39:49: warning: unused parameter 'set' [-Wunused-parameter]
   39 | extern int sigprocmask(int how, const sigset_t *set, sigset_t *oldset) {
      |                                 ~~~~~~~~~~~~~~~~^~~
lib/term-style-control.h:39:64: warning: unused parameter 'oldset' [-Wunused-parameter]
   39 | extern int sigprocmask(int how, const sigset_t *set, sigset_t *oldset) {
      |                                                      ~~~~~~~~~~^~~~~~
(수정)
매개변수를 사용하는 코드를 추가하거나, 
사용하지 않기로 결정했다면 매개변수 이름 앞에 (void)를 추가하여 사용되지 않음을 명시할 수 있다.
#ifndef sigprocmask
extern int sigprocmask(int how, const sigset_t *set, sigset_t *oldset) {
	(void)how;  // 사용하지 않음을 명시
	(void)set; // 사용하지 않음을 명시
	(void)oldset; // 사용하지 않음을 명시
    return 0;
}
#endif

(오류)
lib/color.h:47:39: warning: ISO C forbids forward references to 'enum' types [-Wpedantic]
   47 | extern LIBTEXTSTYLE_DLL_VARIABLE enum color_option color_mode;
      |                                       ^~~~~~~~~~~~
(수정)
lib/color.c 수정
/* Color option enumeration */
enum color_option { color_no, color_tty, color_yes, color_html };

/* External variables with DLL export macro */
extern LIBTEXTSTYLE_DLL_VARIABLE bool color_test_mode;
extern LIBTEXTSTYLE_DLL_VARIABLE enum color_option color_mode;
extern LIBTEXTSTYLE_DLL_VARIABLE const char *style_file_name;

(오류)
term-ostream.oo.c: In function 'out_color_change':
term-ostream.oo.c:1379:51: warning: comparison of integer expressions of different signedness:
'size_t' {aka 'long long unsigned int'} and 'long long int' [-Wsign-compar
]
term-ostream.oo.c:1399:51: warning: comparison of integer expressions of different signedness: 
'size_t' {aka 'long long unsigned int'} and 'long long int' [-Wsign-compar
]
term-ostream.oo.c:1434:51: warning: comparison of integer expressions of different signedness: 
'size_t' {aka 'long long unsigned int'} and 'long long int' [-Wsign-compar
]
(수정)
lib/term-ostream.c, lib/term-ostream.oo.c 수정
static _GL_ASYNC_SAFE void
out_color_change(term_ostream_t stream, term_color_t new_color, bool async_safe)
{
내부적으로 size_t를 사용하는 경우가 많음
//if (full_write (out_fd, bytes, p - bytes) < p - bytes)
if (full_write(out_fd, bytes, (size_t)(p - bytes)) < (size_t)(p - bytes))
  if (!async_safe)
    out_error ();
//if (full_write (out_fd, bytes, p - bytes) < p - bytes)
if (full_write(out_fd, bytes, (size_t)(p - bytes)) < (size_t)(p - bytes))
  if (!async_safe)
    out_error ();
//if (full_write (out_fd, bytes, p - bytes) < p - bytes)
if (full_write(out_fd, bytes, (size_t)(p - bytes)) < (size_t)(p - bytes))
  if (!async_safe)
    out_error ();
}

(오류)
term-ostream.oo.c:1284:17: warning: unused variable 'color_change_cmd' [-Wunused-variable]
(수정)
lib/term-ostream.c, lib/term-ostream.oo.c 수정
static _GL_ASYNC_SAFE void
out_color_change(term_ostream_t stream, term_color_t new_color, bool async_safe)
{
(void)color_change_cmd; // 사용하지 않음을 명시
(void)buffer; // 사용하지 않음을 명시
}

(오류)
term-ostream.oo.c: In function 'term_ostream__write_mem':
term-ostream.oo.c:2136:37: warning: operand of '?:' changes signedness from 'long long int' 
to 'size_t' {aka 'long long unsigned int'} due to unsignedness of other operand [-Wsign-compare]

(수정)
lib/term-ostream.c 수정
static void
term_ostream__write_mem (term_ostream_t stream, const void *data, size_t len)
{
//if (full_write (stream->fd, "\n", 1) < 1)
if (full_write(stream->fd, "\n", 1) < (ssize_t)1)
  error (EXIT_FAILURE, errno, _("error writing to %s"),
  stream->filename);
}

lib/term-ostream.oo.c 수정
static void
term_ostream::write_mem (term_ostream_t stream, const void *data, size_t len)
{
//if (full_write (stream->fd, "\n", 1) < 1)
if (full_write(stream->fd, "\n", 1) < (ssize_t)1)
  error (EXIT_FAILURE, errno, _("error writing to %s"),
  stream->filename);
}

(오류)
ostream.c: In function 'ostream__write_mem':
ostream.c:87:31: warning: unused parameter 'first_arg' [-Wunused-parameter]
ostream.c:87:54: warning: unused parameter 'data' [-Wunused-parameter]
ostream.c:87:67: warning: unused parameter 'len' [-Wunused-parameter]
ostream.c: In function 'ostream__flush':
ostream.c:98:27: warning: unused parameter 'first_arg' [-Wunused-parameter]
ostream.c:98:60: warning: unused parameter 'scope' [-Wunused-parameter]
ostream.c: In function 'ostream__free':
ostream.c:109:26: warning: unused parameter 'first_arg' [-Wunused-parameter]

(수정)
lib/ostream.c 수정
void
ostream__write_mem (ostream_t first_arg, const void *data, size_t len)
{
(void)first_arg;
(void)data;
(void)len;
}

void
ostream__flush (ostream_t first_arg, ostream_flush_scope_t scope)
{
(void)first_arg; //사용되지않음 정의
(void)scope; //사용되지않음 정의
}

void
ostream__free (ostream_t first_arg)
{
(void)first_arg; //사용되지않음을 정의
}

(오류)
term-ostream.oo.c: In function 'out_bgcolor_change':
term-ostream.oo.c:1535:51: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'long long int' [-Wsign-compar
]
term-ostream.oo.c:1555:51: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'long long int' [-Wsign-compar
]
term-ostream.oo.c:1590:51: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'long long int' [-Wsign-compar
]
(수정)
lib/term-ostream.oo.c, lib/term-ostream.c 수정
case cm_xterm8:
assert(new_bgcolor >= 0 && new_bgcolor < 8);
{
	char bytes[5];
	bytes[0] = 0x1B; bytes[1] = '[';
	bytes[2] = '4'; bytes[3] = '0' + new_bgcolor;
	bytes[4] = 'm';
	ssize_t written = full_write(out_fd, bytes, 5);
	if (written < 0 || (size_t)written < 5) {
	if (!async_safe)
		out_error();
	}
}
break;

case cm_xterm16:
assert(new_bgcolor >= 0 && new_bgcolor < 16);
{
	char bytes[6];
	bytes[0] = 0x1B; bytes[1] = '[';
	if (new_bgcolor < 8) {
	bytes[2] = '4'; bytes[3] = '0' + new_bgcolor;
	bytes[4] = 'm';
	ssize_t written = full_write(out_fd, bytes, 5);
	if (written < 0 || (size_t)written < 5) {
		if (!async_safe)
		out_error();
	}
	} else {
	bytes[2] = '1'; bytes[3] = '0';
	bytes[4] = '0' + (new_bgcolor - 8); bytes[5] = 'm';
	ssize_t written = full_write(out_fd, bytes, 6);
	if (written < 0 || (size_t)written < 6) {
		if (!async_safe)
		out_error();
	}
	}
}
break;
case cm_xterm88:
assert(new_bgcolor >= 0 && new_bgcolor < 88);
{
	char bytes[10];
	char *p;
	bytes[0] = 0x1B; bytes[1] = '[';
	bytes[2] = '4'; bytes[3] = '8'; bytes[4] = ';';
	bytes[5] = '5'; bytes[6] = ';';
	p = bytes + 7;
if (new_color >= 10)
*p++ = '0' + (new_color / 10);
*p++ = '0' + (new_color % 10);
*p++ = 'm';
//if (full_write (out_fd, bytes, p - bytes) < p - bytes)
if (full_write(out_fd, bytes, (size_t)(p - bytes)) < (size_t)(p - bytes))
  if (!async_safe)
    out_error ();
}
break;
(오류)
term-ostream.oo.c: In function 'term_ostream__write_mem':
term-ostream.oo.c:2141:37: warning: operand of '?:' 
changes signedness from 'long long int' to 'size_t' {aka 'long long unsigned int'} 
due to unsignedness of other operand [-Wsign-compare]
(수정)
lib/term-ostream.oo.c, lib/term-ostream.c 수정
static void
term_ostream__write_mem(term_ostream_t stream, const void *data, size_t len)
{
    const char *cp = (const char *)data;
    while (len > 0)
    {
        /* Look for the next newline.  */
        const char *newline = (const char *)memchr(cp, '\n', len);
        size_t n = (newline != NULL ? newline - cp : len);

        /* Copy n bytes into the buffer.  */
        if (n > stream->allocated - stream->buflen)
        {
            size_t new_allocated =
                xmax(xsum(stream->buflen, n),
                     xsum(stream->allocated, stream->allocated));
            if (size_overflow_p(new_allocated))
                error(EXIT_FAILURE, 0,
                      _("%s: too much output, buffer size overflow"),
                      "term_ostream");

            // Reallocate buffers safely
            char *new_buffer = (char *)realloc(stream->buffer, new_allocated);
            if (new_buffer == NULL) // Check for realloc failure
                error(EXIT_FAILURE, errno, _("memory allocation failure"));
            stream->buffer = new_buffer;

            attributes_t *new_attrbuffer = (attributes_t *)
                realloc(stream->attrbuffer, new_allocated * sizeof(attributes_t));
            if (new_attrbuffer == NULL) // Check for realloc failure
                error(EXIT_FAILURE, errno, _("memory allocation failure"));
            stream->attrbuffer = new_attrbuffer;

            stream->allocated = new_allocated;
        }

        memcpy(stream->buffer + stream->buflen, cp, n);
        {
            attributes_t attr = stream->simp_attr;
            attributes_t *ap = stream->attrbuffer + stream->buflen;
            attributes_t *ap_end = ap + n;
            for (; ap < ap_end; ap++)
                *ap = attr;
        }
        stream->buflen += n;

        if (newline != NULL)
        {
            output_buffer(stream, stream->default_attr);
            if (full_write(stream->fd, "\n", 1) < (ssize_t)1)
                error(EXIT_FAILURE, errno, _("error writing to %s"),
                      stream->filename);
            cp += n + 1; /* cp = newline + 1; */
            len -= n + 1;
        }
        else
            break;
    }
}

(오류)
In file included from lib/term-style-control.c:60:
lib/same-inode.h: In function 'psame_inode':
lib/same-inode.h:79:33: warning: unused parameter 'a' [-Wunused-parameter]
   79 | psame_inode (struct stat const *a, struct stat const *b)
      |              ~~~~~~~~~~~~~~~~~~~^
lib/same-inode.h:79:55: warning: unused parameter 'b' [-Wunused-parameter]
   79 | psame_inode (struct stat const *a, struct stat const *b)
      |                                    ~~~~~~~~~~~~~~~~~~~^
lib/term-style-control.c: In function 'fatal_or_stopping_signal_handler':
lib/term-style-control.c:680:39: warning: unused parameter 'sig' [-Wunused-parameter]
  680 | fatal_or_stopping_signal_handler (int sig)
      |                                   ~~~~^~~
(수정)
lib/same-inode.h 수정
SAME_INODE_INLINE bool
psame_inode (struct stat const *a, struct stat const *b)
{
  (void)a; //비사용정의
  (void)b; //비사용정의
  return PSAME_INODE (a, b);
}

lib/term-style-control.c 수정
static _GL_ASYNC_SAFE void
fatal_or_stopping_signal_handler (int sig)
{
  (void)sig; //비사용정의
}

(오류)
term-ostream.oo.c: In function 'term_ostream__write_mem':
term-ostream.oo.c:2152:39: warning: operand of '?:' changes signedness from 
'long long int' to 'size_t' {aka 'long long unsigned int'} 
due to unsignedness of other operand [-Wsign-compare]
(수정)
lib/term-ostream.c 수정
static void
term_ostream__write_mem(term_ostream_t stream, const void *data, size_t len)
{
    const char *cp = (const char *)data;
    while (len > 0)
    {
        /* Look for the next newline.  */
        const char *newline = (const char *)memchr(cp, '\n', len);
        size_t n = (newline != NULL ? (size_t)(newline - cp) : len); //n을 계산할 때 (size_t)(newline - cp)로 형 변환하여 size_t 타입으로 비교

        /* Copy n bytes into the buffer.  */
        if (n > stream->allocated - stream->buflen)
        {
            size_t new_allocated =
                xmax(xsum(stream->buflen, n),
                     xsum(stream->allocated, stream->allocated));
            if (size_overflow_p(new_allocated))
                error(EXIT_FAILURE, 0,
                      _("%s: too much output, buffer size overflow"),
                      "term_ostream");

            // Reallocate buffers safely
            char *new_buffer = (char *)realloc(stream->buffer, new_allocated);
            if (new_buffer == NULL) // Check for realloc failure
                error(EXIT_FAILURE, errno, _("memory allocation failure"));
            stream->buffer = new_buffer;

            attributes_t *new_attrbuffer = (attributes_t *)
                realloc(stream->attrbuffer, new_allocated * sizeof(attributes_t));
            if (new_attrbuffer == NULL) // Check for realloc failure
                error(EXIT_FAILURE, errno, _("memory allocation failure"));
            stream->attrbuffer = new_attrbuffer;

            stream->allocated = new_allocated;
        }

        memcpy(stream->buffer + stream->buflen, cp, n);
        {
            attributes_t attr = stream->simp_attr;
            attributes_t *ap = stream->attrbuffer + stream->buflen;
            attributes_t *ap_end = ap + n;
            for (; ap < ap_end; ap++)
                *ap = attr;
        }
        stream->buflen += n;

        if (newline != NULL)
        {
            output_buffer(stream, stream->default_attr);
            if (full_write(stream->fd, "\n", 1) < (ssize_t)1)
                error(EXIT_FAILURE, errno, _("error writing to %s"),
                      stream->filename);
            cp += n + 1; /* cp = newline + 1; */
            len -= n + 1;
        }
        else
            break;
    }
}

(출력)
#define VERSION 1.0

#ifdef SOME_MACRO
// 정상적인 경우
#else
#error "Please include config.h first. Current version: " STRINGIFY(VERSION)
#endif

#define STRINGIFY(x) #x

=> error: Please include config.h first. Current version: "1.0"

(빌드명령어)
- 빌드명령어
aclocal --verbose 2>&1 && \
autoconf --verbose 2>&1 && \
autoheader --verbose 2>&1 && \
automake --add-missing --verbose 2>&1 && \
libtoolize --verbose 2>&1 && \
autoreconf -ivf 2>&1 && \
./configure --verbose 2>&1 && \
make clean 2>&1 && \
make 2>&1 || \
echo "An error occurred in the build process."

aclocal: aclocal.m4 파일을 생성하여 사용자 정의 매크로를 포함합니다.
autoconf: configure 스크립트를 생성합니다.
autoheader: config.h.in 파일을 생성하여 헤더 파일의 매크로를 설정합니다.
automake: Makefile.in 파일을 생성하고 필요한 파일을 추가합니다.
libtoolize: Libtool을 초기화합니다.
autoreconf: 위의 모든 도구를 호출하여 설정을 업데이트합니다.
./configure: 구성 스크립트를 실행하여 Makefile을 생성합니다.
make clean: 이전 빌드를 청소합니다.
make: 프로그램을 빌드합니다
(남은과정)
make install: 빌드된 바이너리 및 기타 파일을 시스템에 설치
make check: 설치된 패키지의 테스트를 실행하여 올바르게 작동하는지 확인
make distclean: 빌드 과정에서 생성된 모든 파일을 정리하고 원래의 소스 파일 상태로 되돌림
make docs : 패키지의 문서 생성: 만약 문서화가 포함되어 있다면, 다음과 같은 명령어로 문서를 생성할 수 있음
make dist : 패키지의 릴리즈 생성: 자동으로 배포 패키지를 만드는 명령어

(오류)
*** Warning: linker path does not have real file for library -lncurses.
*** I have the capability to make that library automatically link in when
*** you link to this library.  But I can only do this if you have a
*** shared version of the library, which you do not appear to have
*** because I did check the linker path looking for a file starting
*** with libncurses and none of the candidates passed a file format test
*** using a file magic. Last file checked: C:/msys64/mingw64/lib/libncurses.a
*** Since this library must not contain undefined symbols,
*** because either the platform does not support them or
*** it was explicitly requested with -no-undefined,
*** libtool will only create a static version of it.
(수정)
libncurses의 공유 라이브러리를 찾지 못해, 정적 라이브러리만 링크하고 있다는 내용
C:/msys64/mingw64/lib/libncurses.a 파일이 있지만, 그것은 공유 라이브러리가 아니기 때문에 경고가 발생
# 패키지 검색(설치됨)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Ss ncurses
clangarm64/mingw-w64-clang-aarch64-ncurses 6.4.20231217-1
    System V Release 4.0 curses emulation library (mingw-w64)
mingw32/mingw-w64-i686-ncurses 6.4.20231217-1
    System V Release 4.0 curses emulation library (mingw-w64)
mingw64/mingw-w64-x86_64-ncurses 6.4.20231217-1 [설치함]
    System V Release 4.0 curses emulation library (mingw-w64)
ucrt64/mingw-w64-ucrt-x86_64-ncurses 6.4.20231217-1
    System V Release 4.0 curses emulation library (mingw-w64)
clang32/mingw-w64-clang-i686-ncurses 6.4.20231217-1
    System V Release 4.0 curses emulation library (mingw-w64)
clang64/mingw-w64-clang-x86_64-ncurses 6.4.20231217-1
    System V Release 4.0 curses emulation library (mingw-w64)
msys/hexcurse 1.60.0-2
    Versatile ncurses-based hex editor.
msys/ncdu 1.20-1
    Disk usage analyzer with an ncurses interface.
msys/ncurses 6.5-1 [설치함]
    System V Release 4.0 curses emulation library
msys/ncurses-devel 6.5-1 (development)
    NCURSES headers and libraries
msys/vifm 0.13-1
    Ncurses based file manager with vi like keybindings

pkg-config 확인, ncurses가 올바르게 설치되고 인식되는지 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pkg-config --libs ncurses
Package ncurses was not found in the pkg-config search path.
Perhaps you should add the directory containing `ncurses.pc'
to the PKG_CONFIG_PATH environment variable
Package 'ncurses' not found

# 재설치
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -S mingw-w64-x86_64-ncurses
재설치 해도 
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l /mingw64/lib/pkgconfig/ncurses.pc
ls: cannot access '/mingw64/lib/pkgconfig/ncurses.pc': No such file or directory

#두파일이 없음
ls /mingw64/include/curses.h
ls /mingw64/include/term.h

#검색
# find /mingw64 -name "*ncurses*"
/mingw64/bin/libncurses++w6.dll
/mingw64/bin/libncursesw6.dll
/mingw64/bin/ncursesw6-config
/mingw64/include/ncurses
/mingw64/include/ncurses/ncurses.h
/mingw64/include/ncurses/ncurses_dll.h
/mingw64/include/ncurses/ncurses_mingw.h
/mingw64/include/ncursesw
/mingw64/include/ncursesw/ncurses.h
/mingw64/include/ncursesw/ncurses_dll.h
/mingw64/include/ncursesw/ncurses_mingw.h
/mingw64/lib/libncurses++w.a
/mingw64/lib/libncurses++w.dll.a
/mingw64/lib/libncurses++w_g.a
/mingw64/lib/libncurses.a
/mingw64/lib/libncursesw.a
/mingw64/lib/libncursesw.dll.a
/mingw64/lib/libncursesw_g.a
/mingw64/lib/pkgconfig/ncurses++w.pc
/mingw64/lib/pkgconfig/ncursesw.pc
/mingw64/share/man/man1/x86_64-w64-mingw32-ncursesw6-config.1.gz
/mingw64/share/man/man3/ncurses.3x.gz
=>curses.h: /mingw64/include/ncurses/ncurses.h 또는 /mingw64/include/ncursesw/ncurses.h

configure.ac 수정
# GNULIB 모듈 정의
//GNULIB_MODULES="ncurses terminfo xmalloc xrealloc xgethostname _gl_nothrow_get_osfhandle"
GNULIB_MODULES="ncursesw terminfo xmalloc xrealloc xgethostname _gl_nothrow_get_osfhandle"

m4_pattern_allow([GNULIB_MODULES]) # 허용 패턴 설정

//AC_CHECK_LIB([ncurses], [tputs]) # ncurses 라이브러리 링크 추가
AC_CHECK_LIB([ncursesw], [tputs]) # ncurses 라이브러리 링크 추가

AC_CHECK_HEADERS([ncursesw/ term.h])

export PKG_CONFIG_PATH="/mingw64/lib/pkgconfig:$PKG_CONFIG_PATH"
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pkg-config --libs --cflags ncurses
Package ncurses was not found in the pkg-config search path.
Perhaps you should add the directory containing `ncurses.pc'
to the PKG_CONFIG_PATH environment variable
Package 'ncurses' not found

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pkg-config --libs --cflags ncursesw
-DNCURSES_WIDECHAR -IC:/msys64/mingw64/include/ncursesw -lncursesw -lsystre -ltre -lintl -liconv

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'ncurses.h' ./lib
./lib/termcap.h:89:     - GNU ncurses in <term.h>, <curses.h>, <ncurses.h>,
./lib/terminfo.h:88:     - GNU ncurses in <term.h>, <curses.h>, <ncurses.h>,

실패
/c/msys64/mingw64/lib/pkgconfig/ncurses.pc 파일을 수동으로 생성
prefix=/c/msys64/mingw64
exec_prefix=${prefix}
libdir=${exec_prefix}/lib
includedir=${prefix}/include

Name: ncurses
Description: ncurses library
Version: 6.4
Libs: -L${libdir} -lncurses
Cflags: -I${includedir}

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# export PKG_CONFIG_PATH="/c/msys64/mingw64/lib/pkgconfig:$PKG_CONFIG_PATH"

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# aclocal --verbose 2>&1 && autoconf --verbose 2>&1 && autoheader --verbose 2>&1 && automake --add-missing --verbose 2>&1 && libtoolize --verbose 2>&1 && autoreconf -ivf 2>&1 && ./configure --verbose 2>&1 && make clean 2>&1 && make 2>&1 || echo "An error occurred in the build process."

(오류)
*** Warning: linker path does not have real file for library -lncurses. 
경고 메시지는 링커가 ncurses 라이브러리를 찾지 못하고 있다는 의미
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls /mingw64/lib/libncurses.*
/mingw64/lib/libncurses.a
ncurses 라이브러리가 올바르게 설치되었음을 의미
configure.ac 수정
# ncurses 라이브러리 확인
PKG_CHECK_MODULES([NCURSES], [ncurses])

# Makefile에 전달할 변수 정의
AC_SUBST([NCURSES_CFLAGS])
AC_SUBST([NCURSES_LIBS])

Makefile.am 수정
bin_PROGRAMS = libtextstyle_la
libtextstyle_la_LDADD = $(NCURSES_LIBS) #ncurses 라이브러리를 링크하기 위해 $(NCURSES_LIBS)를 사용
# 설치할 라이브러리의 위치
#libtextstyle_la_LDFLAGS = $(LDFLAGS)
libtextstyle_la_LDFLAGS = -shared -Wl,--out-implib=libtextstyle.dll.a #DLL을 생성하기 위한 필수 플래그를 추가
# -shared는 공유 라이브러리를 생성하는 옵션이며, 
# -Wl, --out-implib=libtextstyle.dll.a는 DLL의 import 라이브러리를 생성

(오류)
Makefile.am:45: error: use 'libtextstyle_la_LIBADD', not 'libtextstyle_la_LDADD'
(수정)
Makefile.am 수정
//libtextstyle_la_LDADD = $(NCURSES_LIBS) #ncurses 라이브러리를 링크하기 위해 $(NCURSES_LIBS)를 사용
libtextstyle_la_LIBADD = $(NCURSES_LIBS) #ncurses 라이브러리를 링크하기 위해 $(NCURSES_LIBS)를 사용

(오류)
Makefile.am:45: warning: variable 'libtextstyle_la_LDADD' is defined but no program or library has 'libtextstyle_la' as canonical name (possible typo)
(수정)
libtextstyle_la라는 이름을 가진 프로그램이나 라이브러리가 없다

pkg-config가 설치되어 있는지 확인하고, ncurses 라이브러리에 대한 정보가 올바르게 반환되는지 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pkg-config --modversion ncurses
6.4

configure.ac 수정
# ncurses 라이브러리 확인
#PKG_CHECK_MODULES([NCURSES], [ncurses])
PKG_CHECK_MODULES([NCURSES], [ncurses], [have_ncurses=yes], [have_ncurses=no])

# Makefile에 전달할 변수 정의
#AC_SUBST([NCURSES_CFLAGS])
#AC_SUBST([NCURSES_LIBS])
AC_SUBST([NCURSES_CFLAGS], [$NCURSES_CFLAGS])
AC_SUBST([NCURSES_LIBS], [$NCURSES_LIBS])

(오류)
aclocal-1.16: ignoring macro gl_MODULE_INDICATOR_FOR_TESTS in m4/gnulib-common.m4: 1056
aclocal-1.16: ignoring macro AC_PROG_CC in m4/std-gnu11.m4: 44
aclocal-1.16: ignoring macro AC_C_PROTOTYPES in m4/std-gnu11.m4: 494
aclocal-1.16: ignoring macro AC_DISABLE_FAST_INSTALL in m4/ltoptions.m4: 312
aclocal-1.16: ignoring macro AC_LIBTOOL_LINKER_OPTION in m4/libtool.m4: 1675
aclocal-1.16: ignoring macro LT_AC_PROG_SED in m4/libtool.m4: 8303
aclocal-1.16: ignoring macro gl_XSIZE in /usr/share/aclocal/xsize.m4: 7
aclocal-1.16: ignoring macro gt_TYPE_WINT_T in /usr/share/aclocal/wint_t.m4: 11
aclocal-1.16: ignoring macro gl_VISIBILITY in /usr/share/aclocal/visibility.m4: 23
aclocal-1.16: ignoring macro gl_THREADLIB_EARLY in /usr/share/aclocal/threadlib.m4: 29
aclocal-1.16: ignoring macro gl_THREADLIB_EARLY_BODY in /usr/share/aclocal/threadlib.m4: 36
aclocal-1.16: ignoring macro gl_THREADLIB_BODY in /usr/share/aclocal/threadlib.m4: 107
aclocal-1.16: ignoring macro gl_THREADLIB in /usr/share/aclocal/threadlib.m4: 318
aclocal-1.16: ignoring macro gl_DISABLE_THREADS in /usr/share/aclocal/threadlib.m4: 331
aclocal-1.16: ignoring macro gl_AC_HEADER_STDINT_H in /usr/share/aclocal/stdint_h.m4: 12
aclocal-1.16: ignoring macro gl_SIZE_MAX in /usr/share/aclocal/size_max.m4: 9
aclocal-1.16: ignoring macro AM_PATH_PROG_WITH_TEST in /usr/share/aclocal/progtest.m4: 25
aclocal-1.16: ignoring macro AM_PO_SUBDIRS in /usr/share/aclocal/po.m4: 23
aclocal-1.16: ignoring macro AM_POSTPROCESS_PO_MAKEFILE in /usr/share/aclocal/po.m4: 221
aclocal-1.16: ignoring macro AM_XGETTEXT_OPTION_INIT in /usr/share/aclocal/po.m4: 444
aclocal-1.16: ignoring macro AM_XGETTEXT_OPTION in /usr/share/aclocal/po.m4: 450
aclocal-1.16: ignoring macro AM_NLS in /usr/share/aclocal/nls.m4: 23
aclocal-1.16: ignoring macro LTOBSOLETE_VERSION in /usr/share/aclocal/lt~obsolete.m4: 37
aclocal-1.16: ignoring macro AC_LIBTOOL_LINKER_OPTION in /usr/share/aclocal/lt~obsolete.m4: 39
aclocal-1.16: ignoring macro AC_PROG_EGREP in /usr/share/aclocal/lt~obsolete.m4: 40
aclocal-1.16: ignoring macro _LT_AC_PROG_ECHO_BACKSLASH in /usr/share/aclocal/lt~obsolete.m4: 41
aclocal-1.16: ignoring macro _LT_AC_SHELL_INIT in /usr/share/aclocal/lt~obsolete.m4: 42
aclocal-1.16: ignoring macro _LT_AC_SYS_LIBPATH_AIX in /usr/share/aclocal/lt~obsolete.m4: 43
aclocal-1.16: ignoring macro _LT_PROG_LTMAIN in /usr/share/aclocal/lt~obsolete.m4: 44
aclocal-1.16: ignoring macro _LT_AC_TAGVAR in /usr/share/aclocal/lt~obsolete.m4: 45
aclocal-1.16: ignoring macro AC_LTDL_ENABLE_INSTALL in /usr/share/aclocal/lt~obsolete.m4: 46
aclocal-1.16: ignoring macro AC_LTDL_PREOPEN in /usr/share/aclocal/lt~obsolete.m4: 47
aclocal-1.16: ignoring macro _LT_AC_SYS_COMPILER in /usr/share/aclocal/lt~obsolete.m4: 48
aclocal-1.16: ignoring macro _LT_AC_LOCK in /usr/share/aclocal/lt~obsolete.m4: 49
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_OLD_ARCHIVE in /usr/share/aclocal/lt~obsolete.m4: 50
aclocal-1.16: ignoring macro _LT_AC_TRY_DLOPEN_SELF in /usr/share/aclocal/lt~obsolete.m4: 51
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_CC_C_O in /usr/share/aclocal/lt~obsolete.m4: 52
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_HARD_LINK_LOCKS in /usr/share/aclocal/lt~obsolete.m4: 53
aclocal-1.16: ignoring macro AC_LIBTOOL_OBJDIR in /usr/share/aclocal/lt~obsolete.m4: 54
aclocal-1.16: ignoring macro AC_LTDL_OBJDIR in /usr/share/aclocal/lt~obsolete.m4: 55
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH in /usr/share/aclocal/lt~obsolete.m4: 56
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_LIB_STRIP in /usr/share/aclocal/lt~obsolete.m4: 57
aclocal-1.16: ignoring macro AC_PATH_MAGIC in /usr/share/aclocal/lt~obsolete.m4: 58
aclocal-1.16: ignoring macro AC_PROG_LD_GNU in /usr/share/aclocal/lt~obsolete.m4: 59
aclocal-1.16: ignoring macro AC_PROG_LD_RELOAD_FLAG in /usr/share/aclocal/lt~obsolete.m4: 60
aclocal-1.16: ignoring macro AC_DEPLIBS_CHECK_METHOD in /usr/share/aclocal/lt~obsolete.m4: 61
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_COMPILER_NO_RTTI in /usr/share/aclocal/lt~obsolete.m4: 62
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE in /usr/share/aclocal/lt~obsolete.m4: 63
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_COMPILER_PIC in /usr/share/aclocal/lt~obsolete.m4: 64
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_LD_SHLIBS in /usr/share/aclocal/lt~obsolete.m4: 65
aclocal-1.16: ignoring macro AC_LIBTOOL_POSTDEP_PREDEP in /usr/share/aclocal/lt~obsolete.m4: 66
aclocal-1.16: ignoring macro LT_AC_PROG_EGREP in /usr/share/aclocal/lt~obsolete.m4: 67
aclocal-1.16: ignoring macro LT_AC_PROG_SED in /usr/share/aclocal/lt~obsolete.m4: 68
aclocal-1.16: ignoring macro _LT_CC_BASENAME in /usr/share/aclocal/lt~obsolete.m4: 69
aclocal-1.16: ignoring macro _LT_COMPILER_BOILERPLATE in /usr/share/aclocal/lt~obsolete.m4: 70
aclocal-1.16: ignoring macro _LT_LINKER_BOILERPLATE in /usr/share/aclocal/lt~obsolete.m4: 71
aclocal-1.16: ignoring macro _AC_PROG_LIBTOOL in /usr/share/aclocal/lt~obsolete.m4: 72
aclocal-1.16: ignoring macro AC_LIBTOOL_SETUP in /usr/share/aclocal/lt~obsolete.m4: 73
aclocal-1.16: ignoring macro _LT_AC_CHECK_DLFCN in /usr/share/aclocal/lt~obsolete.m4: 74
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_DYNAMIC_LINKER in /usr/share/aclocal/lt~obsolete.m4: 75
aclocal-1.16: ignoring macro _LT_AC_TAGCONFIG in /usr/share/aclocal/lt~obsolete.m4: 76
aclocal-1.16: ignoring macro AC_DISABLE_FAST_INSTALL in /usr/share/aclocal/lt~obsolete.m4: 77
aclocal-1.16: ignoring macro _LT_AC_LANG_CXX in /usr/share/aclocal/lt~obsolete.m4: 78
aclocal-1.16: ignoring macro _LT_AC_LANG_F77 in /usr/share/aclocal/lt~obsolete.m4: 79
aclocal-1.16: ignoring macro _LT_AC_LANG_GCJ in /usr/share/aclocal/lt~obsolete.m4: 80
aclocal-1.16: ignoring macro AC_LIBTOOL_LANG_C_CONFIG in /usr/share/aclocal/lt~obsolete.m4: 81
aclocal-1.16: ignoring macro _LT_AC_LANG_C_CONFIG in /usr/share/aclocal/lt~obsolete.m4: 82
aclocal-1.16: ignoring macro AC_LIBTOOL_LANG_CXX_CONFIG in /usr/share/aclocal/lt~obsolete.m4: 83
aclocal-1.16: ignoring macro _LT_AC_LANG_CXX_CONFIG in /usr/share/aclocal/lt~obsolete.m4: 84
aclocal-1.16: ignoring macro AC_LIBTOOL_LANG_F77_CONFIG in /usr/share/aclocal/lt~obsolete.m4: 85
aclocal-1.16: ignoring macro _LT_AC_LANG_F77_CONFIG in /usr/share/aclocal/lt~obsolete.m4: 86
aclocal-1.16: ignoring macro AC_LIBTOOL_LANG_GCJ_CONFIG in /usr/share/aclocal/lt~obsolete.m4: 87
aclocal-1.16: ignoring macro _LT_AC_LANG_GCJ_CONFIG in /usr/share/aclocal/lt~obsolete.m4: 88
aclocal-1.16: ignoring macro AC_LIBTOOL_LANG_RC_CONFIG in /usr/share/aclocal/lt~obsolete.m4: 89
aclocal-1.16: ignoring macro _LT_AC_LANG_RC_CONFIG in /usr/share/aclocal/lt~obsolete.m4: 90
aclocal-1.16: ignoring macro AC_LIBTOOL_CONFIG in /usr/share/aclocal/lt~obsolete.m4: 91
aclocal-1.16: ignoring macro _LT_AC_FILE_LTDLL_C in /usr/share/aclocal/lt~obsolete.m4: 92
aclocal-1.16: ignoring macro _LT_REQUIRED_DARWIN_CHECKS in /usr/share/aclocal/lt~obsolete.m4: 93
aclocal-1.16: ignoring macro _LT_AC_PROG_CXXCPP in /usr/share/aclocal/lt~obsolete.m4: 94
aclocal-1.16: ignoring macro _LT_PREPARE_SED_QUOTE_VARS in /usr/share/aclocal/lt~obsolete.m4: 95
aclocal-1.16: ignoring macro _LT_PROG_ECHO_BACKSLASH in /usr/share/aclocal/lt~obsolete.m4: 96
aclocal-1.16: ignoring macro _LT_PROG_F77 in /usr/share/aclocal/lt~obsolete.m4: 97
aclocal-1.16: ignoring macro _LT_PROG_FC in /usr/share/aclocal/lt~obsolete.m4: 98
aclocal-1.16: ignoring macro _LT_PROG_CXX in /usr/share/aclocal/lt~obsolete.m4: 99
aclocal-1.16: ignoring macro LTVERSION_VERSION in /usr/share/aclocal/ltversion.m4: 19
aclocal-1.16: ignoring macro LTSUGAR_VERSION in /usr/share/aclocal/ltsugar.m4: 14
aclocal-1.16: ignoring macro LTOPTIONS_VERSION in /usr/share/aclocal/ltoptions.m4: 14
aclocal-1.16: ignoring macro AC_LIBTOOL_DLOPEN in /usr/share/aclocal/ltoptions.m4: 113
aclocal-1.16: ignoring macro AC_LIBTOOL_WIN32_DLL in /usr/share/aclocal/ltoptions.m4: 148
aclocal-1.16: ignoring macro AC_ENABLE_SHARED in /usr/share/aclocal/ltoptions.m4: 197
aclocal-1.16: ignoring macro AC_DISABLE_SHARED in /usr/share/aclocal/ltoptions.m4: 201
aclocal-1.16: ignoring macro AM_ENABLE_SHARED in /usr/share/aclocal/ltoptions.m4: 205
aclocal-1.16: ignoring macro AM_DISABLE_SHARED in /usr/share/aclocal/ltoptions.m4: 206
aclocal-1.16: ignoring macro AC_ENABLE_STATIC in /usr/share/aclocal/ltoptions.m4: 251
aclocal-1.16: ignoring macro AC_DISABLE_STATIC in /usr/share/aclocal/ltoptions.m4: 255
aclocal-1.16: ignoring macro AM_ENABLE_STATIC in /usr/share/aclocal/ltoptions.m4: 259
aclocal-1.16: ignoring macro AM_DISABLE_STATIC in /usr/share/aclocal/ltoptions.m4: 260
aclocal-1.16: ignoring macro AC_ENABLE_FAST_INSTALL in /usr/share/aclocal/ltoptions.m4: 305
aclocal-1.16: ignoring macro AC_DISABLE_FAST_INSTALL in /usr/share/aclocal/ltoptions.m4: 312
aclocal-1.16: ignoring macro AC_LIBTOOL_PICMODE in /usr/share/aclocal/ltoptions.m4: 411
aclocal-1.16: ignoring macro AC_TYPE_LONG_LONG_INT in /usr/share/aclocal/longlong.m4: 17
aclocal-1.16: ignoring macro AC_TYPE_UNSIGNED_LONG_LONG_INT in /usr/share/aclocal/longlong.m4: 67
aclocal-1.16: ignoring macro _AC_TYPE_LONG_LONG_SNIPPET in /usr/share/aclocal/longlong.m4: 89
aclocal-1.16: ignoring macro gl_LOCK in /usr/share/aclocal/lock.m4: 9
aclocal-1.16: ignoring macro gl_PREREQ_LOCK in /usr/share/aclocal/lock.m4: 42
aclocal-1.16: ignoring macro LT_INIT in /usr/share/aclocal/libtool.m4: 62
aclocal-1.16: ignoring macro AC_PROG_LIBTOOL in /usr/share/aclocal/libtool.m4: 100
aclocal-1.16: ignoring macro AM_PROG_LIBTOOL in /usr/share/aclocal/libtool.m4: 101
aclocal-1.16: ignoring macro LT_OUTPUT in /usr/share/aclocal/libtool.m4: 621
aclocal-1.16: ignoring macro LT_SUPPORTED_TAG in /usr/share/aclocal/libtool.m4: 814
aclocal-1.16: ignoring macro LT_LANG in /usr/share/aclocal/libtool.m4: 825
aclocal-1.16: ignoring macro AC_LIBTOOL_CXX in /usr/share/aclocal/libtool.m4: 917
aclocal-1.16: ignoring macro AC_LIBTOOL_F77 in /usr/share/aclocal/libtool.m4: 918
aclocal-1.16: ignoring macro AC_LIBTOOL_FC in /usr/share/aclocal/libtool.m4: 919
aclocal-1.16: ignoring macro AC_LIBTOOL_GCJ in /usr/share/aclocal/libtool.m4: 920
aclocal-1.16: ignoring macro AC_LIBTOOL_RC in /usr/share/aclocal/libtool.m4: 921
aclocal-1.16: ignoring macro _LT_WITH_SYSROOT in /usr/share/aclocal/libtool.m4: 1244
aclocal-1.16: ignoring macro _LT_COMPILER_OPTION in /usr/share/aclocal/libtool.m4: 1589
aclocal-1.16: ignoring macro AC_LIBTOOL_COMPILER_OPTION in /usr/share/aclocal/libtool.m4: 1631
aclocal-1.16: ignoring macro _LT_LINKER_OPTION in /usr/share/aclocal/libtool.m4: 1640
aclocal-1.16: ignoring macro AC_LIBTOOL_LINKER_OPTION in /usr/share/aclocal/libtool.m4: 1675
aclocal-1.16: ignoring macro LT_CMD_MAX_LEN in /usr/share/aclocal/libtool.m4: 1682
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_MAX_CMD_LEN in /usr/share/aclocal/libtool.m4: 1821
aclocal-1.16: ignoring macro LT_SYS_DLOPEN_SELF in /usr/share/aclocal/libtool.m4: 1932
aclocal-1.16: ignoring macro AC_LIBTOOL_DLOPEN_SELF in /usr/share/aclocal/libtool.m4: 2057
aclocal-1.16: ignoring macro _LT_PATH_TOOL_PREFIX in /usr/share/aclocal/libtool.m4: 3175
aclocal-1.16: ignoring macro AC_PATH_TOOL_PREFIX in /usr/share/aclocal/libtool.m4: 3237
aclocal-1.16: ignoring macro LT_PATH_LD in /usr/share/aclocal/libtool.m4: 3260
aclocal-1.16: ignoring macro AM_PROG_LD in /usr/share/aclocal/libtool.m4: 3349
aclocal-1.16: ignoring macro AC_PROG_LD in /usr/share/aclocal/libtool.m4: 3350
aclocal-1.16: ignoring macro LT_PATH_NM in /usr/share/aclocal/libtool.m4: 3679
aclocal-1.16: ignoring macro AM_PROG_NM in /usr/share/aclocal/libtool.m4: 3774
aclocal-1.16: ignoring macro AC_PROG_NM in /usr/share/aclocal/libtool.m4: 3775
aclocal-1.16: ignoring macro _LT_DLL_DEF_P in /usr/share/aclocal/libtool.m4: 3846
aclocal-1.16: ignoring macro LT_LIB_M in /usr/share/aclocal/libtool.m4: 3860
aclocal-1.16: ignoring macro AC_CHECK_LIBM in /usr/share/aclocal/libtool.m4: 3879
aclocal-1.16: ignoring macro LT_PROG_GCJ in /usr/share/aclocal/libtool.m4: 8147
aclocal-1.16: ignoring macro LT_AC_PROG_GCJ in /usr/share/aclocal/libtool.m4: 8156
aclocal-1.16: ignoring macro LT_PROG_GO in /usr/share/aclocal/libtool.m4: 8163
aclocal-1.16: ignoring macro LT_PROG_RC in /usr/share/aclocal/libtool.m4: 8170
aclocal-1.16: ignoring macro LT_AC_PROG_RC in /usr/share/aclocal/libtool.m4: 8175
aclocal-1.16: ignoring macro LT_AC_PROG_SED in /usr/share/aclocal/libtool.m4: 8303
aclocal-1.16: ignoring macro AC_LIB_PREFIX in /usr/share/aclocal/lib-prefix.m4: 15
aclocal-1.16: ignoring macro AC_LIB_PREPARE_PREFIX in /usr/share/aclocal/lib-prefix.m4: 115
aclocal-1.16: ignoring macro AC_LIB_WITH_FINAL_PREFIX in /usr/share/aclocal/lib-prefix.m4: 138
aclocal-1.16: ignoring macro AC_LIB_PREPARE_MULTILIB in /usr/share/aclocal/lib-prefix.m4: 155
aclocal-1.16: ignoring macro AC_LIB_LINKFLAGS in /usr/share/aclocal/lib-link.m4: 17
aclocal-1.16: ignoring macro AC_LIB_HAVE_LINKFLAGS in /usr/share/aclocal/lib-link.m4: 57
aclocal-1.16: ignoring macro AC_LIB_RPATH in /usr/share/aclocal/lib-link.m4: 125
aclocal-1.16: ignoring macro AC_LIB_FROMPACKAGE in /usr/share/aclocal/lib-link.m4: 161
aclocal-1.16: ignoring macro AC_LIB_LINKFLAGS_BODY in /usr/share/aclocal/lib-link.m4: 181
aclocal-1.16: ignoring macro AC_LIB_APPENDTOVAR in /usr/share/aclocal/lib-link.m4: 718
aclocal-1.16: ignoring macro AC_LIB_LINKFLAGS_FROM_LIBS in /usr/share/aclocal/lib-link.m4: 742
aclocal-1.16: ignoring macro AC_LIB_PROG_LD_GNU in /usr/share/aclocal/lib-ld.m4: 12
aclocal-1.16: ignoring macro AC_LIB_PROG_LD in /usr/share/aclocal/lib-ld.m4: 27
aclocal-1.16: ignoring macro gt_LC_MESSAGES in /usr/share/aclocal/lcmessage.m4: 22
aclocal-1.16: ignoring macro _AM_PATH_GPGRT_CONFIG in /usr/share/aclocal/ksba.m4: 19
aclocal-1.16: ignoring macro gl_AC_HEADER_INTTYPES_H in /usr/share/aclocal/inttypes_h.m4: 12
aclocal-1.16: ignoring macro gt_INTL_MACOSX in /usr/share/aclocal/intlmacosx.m4: 18
aclocal-1.16: ignoring macro AM_ICONV_LINKFLAGS_BODY in /usr/share/aclocal/iconv.m4: 16
aclocal-1.16: ignoring macro AM_ICONV_LINK in /usr/share/aclocal/iconv.m4: 27
aclocal-1.16: ignoring macro AM_ICONV in /usr/share/aclocal/iconv.m4: 237
aclocal-1.16: ignoring macro gl_HOST_CPU_C_ABI in /usr/share/aclocal/host-cpu-c-abi.m4: 50
aclocal-1.16: ignoring macro gl_HOST_CPU_C_ABI_32BIT in /usr/share/aclocal/host-cpu-c-abi.m4: 466
aclocal-1.16: ignoring macro AM_GNU_GETTEXT in /usr/share/aclocal/gettext.m4: 57
aclocal-1.16: ignoring macro AM_GNU_GETTEXT_NEED in /usr/share/aclocal/gettext.m4: 394
aclocal-1.16: ignoring macro AM_GNU_GETTEXT_VERSION in /usr/share/aclocal/gettext.m4: 401
aclocal-1.16: ignoring macro AM_GNU_GETTEXT_REQUIRE_VERSION in /usr/share/aclocal/gettext.m4: 405
aclocal-1.16: ignoring macro gl_FCNTL_O_FLAGS in /usr/share/aclocal/fcntl-o.m4: 12
aclocal-1.16: ignoring macro gl_EXTERN_INLINE in /usr/share/aclocal/extern-inline.m4: 8
aclocal-1.16: ignoring macro AM_LANGINFO_CODESET in /usr/share/aclocal/codeset.m4: 10
aclocal-1.16: ignoring macro gl_BUILD_TO_HOST in /usr/share/aclocal/build-to-host.m4: 32
aclocal-1.16: ignoring macro gl_BUILD_TO_HOST_INIT in /usr/share/aclocal/build-to-host.m4: 65
aclocal-1.16: ignoring macro BISON_I18N in /usr/share/aclocal/bison-i18n.m4: 18
aclocal-1.16: ignoring macro gl_XSIZE in /mingw64/share/aclocal/xsize.m4: 7
aclocal-1.16: ignoring macro gt_TYPE_WINT_T in /mingw64/share/aclocal/wint_t.m4: 11
aclocal-1.16: ignoring macro gt_TYPE_WCHAR_T in /mingw64/share/aclocal/wchar_t.m4: 11
aclocal-1.16: ignoring macro gl_VISIBILITY in /mingw64/share/aclocal/visibility.m4: 23
aclocal-1.16: ignoring macro gl_AC_TYPE_UINTMAX_T in /mingw64/share/aclocal/uintmax_t.m4: 14
aclocal-1.16: ignoring macro gl_THREADLIB_EARLY in /mingw64/share/aclocal/threadlib.m4: 29
aclocal-1.16: ignoring macro gl_THREADLIB_EARLY_BODY in /mingw64/share/aclocal/threadlib.m4: 36
aclocal-1.16: ignoring macro gl_THREADLIB_BODY in /mingw64/share/aclocal/threadlib.m4: 107
aclocal-1.16: ignoring macro gl_THREADLIB in /mingw64/share/aclocal/threadlib.m4: 318
aclocal-1.16: ignoring macro gl_DISABLE_THREADS in /mingw64/share/aclocal/threadlib.m4: 331
aclocal-1.16: ignoring macro gl_AC_HEADER_STDINT_H in /mingw64/share/aclocal/stdint_h.m4: 12
aclocal-1.16: ignoring macro gl_SIZE_MAX in /mingw64/share/aclocal/size_max.m4: 9
aclocal-1.16: ignoring macro AC_COMPUTE_INT in /mingw64/share/aclocal/size_max.m4: 78
aclocal-1.16: ignoring macro AM_PATH_PROG_WITH_TEST in /mingw64/share/aclocal/progtest.m4: 25
aclocal-1.16: ignoring macro gt_PRINTF_POSIX in /mingw64/share/aclocal/printf-posix.m4: 11
aclocal-1.16: ignoring macro AM_PO_SUBDIRS in /mingw64/share/aclocal/po.m4: 24
aclocal-1.16: ignoring macro AM_POSTPROCESS_PO_MAKEFILE in /mingw64/share/aclocal/po.m4: 222
aclocal-1.16: ignoring macro AM_XGETTEXT_OPTION_INIT in /mingw64/share/aclocal/po.m4: 445
aclocal-1.16: ignoring macro AM_XGETTEXT_OPTION in /mingw64/share/aclocal/po.m4: 451
aclocal-1.16: ignoring macro PKG_PROG_PKG_CONFIG in /mingw64/share/aclocal/pkg.m4: 64
aclocal-1.16: ignoring macro PKG_CHECK_EXISTS in /mingw64/share/aclocal/pkg.m4: 101
aclocal-1.16: ignoring macro _PKG_SHORT_ERRORS_SUPPORTED in /mingw64/share/aclocal/pkg.m4: 130
aclocal-1.16: ignoring macro PKG_CHECK_MODULES in /mingw64/share/aclocal/pkg.m4: 148
aclocal-1.16: ignoring macro PKG_CHECK_MODULES_STATIC in /mingw64/share/aclocal/pkg.m4: 217
aclocal-1.16: ignoring macro PKG_INSTALLDIR in /mingw64/share/aclocal/pkg.m4: 235
aclocal-1.16: ignoring macro PKG_NOARCH_INSTALLDIR in /mingw64/share/aclocal/pkg.m4: 257
aclocal-1.16: ignoring macro PKG_CHECK_VAR in /mingw64/share/aclocal/pkg.m4: 276
aclocal-1.16: ignoring macro PKG_WITH_MODULES in /mingw64/share/aclocal/pkg.m4: 294
aclocal-1.16: ignoring macro PKG_HAVE_WITH_MODULES in /mingw64/share/aclocal/pkg.m4: 331
aclocal-1.16: ignoring macro PKG_HAVE_DEFINE_WITH_MODULES in /mingw64/share/aclocal/pkg.m4: 346
aclocal-1.16: ignoring macro AM_NLS in /mingw64/share/aclocal/nls.m4: 23
aclocal-1.16: ignoring macro LTOBSOLETE_VERSION in /mingw64/share/aclocal/lt~obsolete.m4: 37
aclocal-1.16: ignoring macro AC_LIBTOOL_LINKER_OPTION in /mingw64/share/aclocal/lt~obsolete.m4: 39
aclocal-1.16: ignoring macro AC_PROG_EGREP in /mingw64/share/aclocal/lt~obsolete.m4: 40
aclocal-1.16: ignoring macro _LT_AC_PROG_ECHO_BACKSLASH in /mingw64/share/aclocal/lt~obsolete.m4: 41
aclocal-1.16: ignoring macro _LT_AC_SHELL_INIT in /mingw64/share/aclocal/lt~obsolete.m4: 42
aclocal-1.16: ignoring macro _LT_AC_SYS_LIBPATH_AIX in /mingw64/share/aclocal/lt~obsolete.m4: 43
aclocal-1.16: ignoring macro _LT_PROG_LTMAIN in /mingw64/share/aclocal/lt~obsolete.m4: 44
aclocal-1.16: ignoring macro _LT_AC_TAGVAR in /mingw64/share/aclocal/lt~obsolete.m4: 45
aclocal-1.16: ignoring macro AC_LTDL_ENABLE_INSTALL in /mingw64/share/aclocal/lt~obsolete.m4: 46
aclocal-1.16: ignoring macro AC_LTDL_PREOPEN in /mingw64/share/aclocal/lt~obsolete.m4: 47
aclocal-1.16: ignoring macro _LT_AC_SYS_COMPILER in /mingw64/share/aclocal/lt~obsolete.m4: 48
aclocal-1.16: ignoring macro _LT_AC_LOCK in /mingw64/share/aclocal/lt~obsolete.m4: 49
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_OLD_ARCHIVE in /mingw64/share/aclocal/lt~obsolete.m4: 50
aclocal-1.16: ignoring macro _LT_AC_TRY_DLOPEN_SELF in /mingw64/share/aclocal/lt~obsolete.m4: 51
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_CC_C_O in /mingw64/share/aclocal/lt~obsolete.m4: 52
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_HARD_LINK_LOCKS in /mingw64/share/aclocal/lt~obsolete.m4: 53
aclocal-1.16: ignoring macro AC_LIBTOOL_OBJDIR in /mingw64/share/aclocal/lt~obsolete.m4: 54
aclocal-1.16: ignoring macro AC_LTDL_OBJDIR in /mingw64/share/aclocal/lt~obsolete.m4: 55
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH in /mingw64/share/aclocal/lt~obsolete.m4: 56
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_LIB_STRIP in /mingw64/share/aclocal/lt~obsolete.m4: 57
aclocal-1.16: ignoring macro AC_PATH_MAGIC in /mingw64/share/aclocal/lt~obsolete.m4: 58
aclocal-1.16: ignoring macro AC_PROG_LD_GNU in /mingw64/share/aclocal/lt~obsolete.m4: 59
aclocal-1.16: ignoring macro AC_PROG_LD_RELOAD_FLAG in /mingw64/share/aclocal/lt~obsolete.m4: 60
aclocal-1.16: ignoring macro AC_DEPLIBS_CHECK_METHOD in /mingw64/share/aclocal/lt~obsolete.m4: 61
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_COMPILER_NO_RTTI in /mingw64/share/aclocal/lt~obsolete.m4: 62
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE in /mingw64/share/aclocal/lt~obsolete.m4: 63
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_COMPILER_PIC in /mingw64/share/aclocal/lt~obsolete.m4: 64
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_LD_SHLIBS in /mingw64/share/aclocal/lt~obsolete.m4: 65
aclocal-1.16: ignoring macro AC_LIBTOOL_POSTDEP_PREDEP in /mingw64/share/aclocal/lt~obsolete.m4: 66
aclocal-1.16: ignoring macro LT_AC_PROG_EGREP in /mingw64/share/aclocal/lt~obsolete.m4: 67
aclocal-1.16: ignoring macro LT_AC_PROG_SED in /mingw64/share/aclocal/lt~obsolete.m4: 68
aclocal-1.16: ignoring macro _LT_CC_BASENAME in /mingw64/share/aclocal/lt~obsolete.m4: 69
aclocal-1.16: ignoring macro _LT_COMPILER_BOILERPLATE in /mingw64/share/aclocal/lt~obsolete.m4: 70
aclocal-1.16: ignoring macro _LT_LINKER_BOILERPLATE in /mingw64/share/aclocal/lt~obsolete.m4: 71
aclocal-1.16: ignoring macro _AC_PROG_LIBTOOL in /mingw64/share/aclocal/lt~obsolete.m4: 72
aclocal-1.16: ignoring macro AC_LIBTOOL_SETUP in /mingw64/share/aclocal/lt~obsolete.m4: 73
aclocal-1.16: ignoring macro _LT_AC_CHECK_DLFCN in /mingw64/share/aclocal/lt~obsolete.m4: 74
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_DYNAMIC_LINKER in /mingw64/share/aclocal/lt~obsolete.m4: 75
aclocal-1.16: ignoring macro _LT_AC_TAGCONFIG in /mingw64/share/aclocal/lt~obsolete.m4: 76
aclocal-1.16: ignoring macro AC_DISABLE_FAST_INSTALL in /mingw64/share/aclocal/lt~obsolete.m4: 77
aclocal-1.16: ignoring macro _LT_AC_LANG_CXX in /mingw64/share/aclocal/lt~obsolete.m4: 78
aclocal-1.16: ignoring macro _LT_AC_LANG_F77 in /mingw64/share/aclocal/lt~obsolete.m4: 79
aclocal-1.16: ignoring macro _LT_AC_LANG_GCJ in /mingw64/share/aclocal/lt~obsolete.m4: 80
aclocal-1.16: ignoring macro AC_LIBTOOL_LANG_C_CONFIG in /mingw64/share/aclocal/lt~obsolete.m4: 81
aclocal-1.16: ignoring macro _LT_AC_LANG_C_CONFIG in /mingw64/share/aclocal/lt~obsolete.m4: 82
aclocal-1.16: ignoring macro AC_LIBTOOL_LANG_CXX_CONFIG in /mingw64/share/aclocal/lt~obsolete.m4: 83
aclocal-1.16: ignoring macro _LT_AC_LANG_CXX_CONFIG in /mingw64/share/aclocal/lt~obsolete.m4: 84
aclocal-1.16: ignoring macro AC_LIBTOOL_LANG_F77_CONFIG in /mingw64/share/aclocal/lt~obsolete.m4: 85
aclocal-1.16: ignoring macro _LT_AC_LANG_F77_CONFIG in /mingw64/share/aclocal/lt~obsolete.m4: 86
aclocal-1.16: ignoring macro AC_LIBTOOL_LANG_GCJ_CONFIG in /mingw64/share/aclocal/lt~obsolete.m4: 87
aclocal-1.16: ignoring macro _LT_AC_LANG_GCJ_CONFIG in /mingw64/share/aclocal/lt~obsolete.m4: 88
aclocal-1.16: ignoring macro AC_LIBTOOL_LANG_RC_CONFIG in /mingw64/share/aclocal/lt~obsolete.m4: 89
aclocal-1.16: ignoring macro _LT_AC_LANG_RC_CONFIG in /mingw64/share/aclocal/lt~obsolete.m4: 90
aclocal-1.16: ignoring macro AC_LIBTOOL_CONFIG in /mingw64/share/aclocal/lt~obsolete.m4: 91
aclocal-1.16: ignoring macro _LT_AC_FILE_LTDLL_C in /mingw64/share/aclocal/lt~obsolete.m4: 92
aclocal-1.16: ignoring macro _LT_REQUIRED_DARWIN_CHECKS in /mingw64/share/aclocal/lt~obsolete.m4: 93
aclocal-1.16: ignoring macro _LT_AC_PROG_CXXCPP in /mingw64/share/aclocal/lt~obsolete.m4: 94
aclocal-1.16: ignoring macro _LT_PREPARE_SED_QUOTE_VARS in /mingw64/share/aclocal/lt~obsolete.m4: 95
aclocal-1.16: ignoring macro _LT_PROG_ECHO_BACKSLASH in /mingw64/share/aclocal/lt~obsolete.m4: 96
aclocal-1.16: ignoring macro _LT_PROG_F77 in /mingw64/share/aclocal/lt~obsolete.m4: 97
aclocal-1.16: ignoring macro _LT_PROG_FC in /mingw64/share/aclocal/lt~obsolete.m4: 98
aclocal-1.16: ignoring macro _LT_PROG_CXX in /mingw64/share/aclocal/lt~obsolete.m4: 99
aclocal-1.16: ignoring macro LTVERSION_VERSION in /mingw64/share/aclocal/ltversion.m4: 19
aclocal-1.16: ignoring macro LTSUGAR_VERSION in /mingw64/share/aclocal/ltsugar.m4: 14
aclocal-1.16: ignoring macro LTOPTIONS_VERSION in /mingw64/share/aclocal/ltoptions.m4: 14
aclocal-1.16: ignoring macro AC_LIBTOOL_DLOPEN in /mingw64/share/aclocal/ltoptions.m4: 113
aclocal-1.16: ignoring macro AC_LIBTOOL_WIN32_DLL in /mingw64/share/aclocal/ltoptions.m4: 148
aclocal-1.16: ignoring macro AC_ENABLE_SHARED in /mingw64/share/aclocal/ltoptions.m4: 197
aclocal-1.16: ignoring macro AC_DISABLE_SHARED in /mingw64/share/aclocal/ltoptions.m4: 201
aclocal-1.16: ignoring macro AM_ENABLE_SHARED in /mingw64/share/aclocal/ltoptions.m4: 205
aclocal-1.16: ignoring macro AM_DISABLE_SHARED in /mingw64/share/aclocal/ltoptions.m4: 206
aclocal-1.16: ignoring macro AC_ENABLE_STATIC in /mingw64/share/aclocal/ltoptions.m4: 251
aclocal-1.16: ignoring macro AC_DISABLE_STATIC in /mingw64/share/aclocal/ltoptions.m4: 255
aclocal-1.16: ignoring macro AM_ENABLE_STATIC in /mingw64/share/aclocal/ltoptions.m4: 259
aclocal-1.16: ignoring macro AM_DISABLE_STATIC in /mingw64/share/aclocal/ltoptions.m4: 260
aclocal-1.16: ignoring macro AC_ENABLE_FAST_INSTALL in /mingw64/share/aclocal/ltoptions.m4: 305
aclocal-1.16: ignoring macro AC_DISABLE_FAST_INSTALL in /mingw64/share/aclocal/ltoptions.m4: 312
aclocal-1.16: ignoring macro AC_LIBTOOL_PICMODE in /mingw64/share/aclocal/ltoptions.m4: 411
aclocal-1.16: ignoring macro AC_TYPE_LONG_LONG_INT in /mingw64/share/aclocal/longlong.m4: 17
aclocal-1.16: ignoring macro AC_TYPE_UNSIGNED_LONG_LONG_INT in /mingw64/share/aclocal/longlong.m4: 67
aclocal-1.16: ignoring macro _AC_TYPE_LONG_LONG_SNIPPET in /mingw64/share/aclocal/longlong.m4: 89
aclocal-1.16: ignoring macro gl_LOCK in /mingw64/share/aclocal/lock.m4: 9
aclocal-1.16: ignoring macro gl_PREREQ_LOCK in /mingw64/share/aclocal/lock.m4: 42
aclocal-1.16: ignoring macro LT_INIT in /mingw64/share/aclocal/libtool.m4: 62
aclocal-1.16: ignoring macro AC_PROG_LIBTOOL in /mingw64/share/aclocal/libtool.m4: 100
aclocal-1.16: ignoring macro AM_PROG_LIBTOOL in /mingw64/share/aclocal/libtool.m4: 101
aclocal-1.16: ignoring macro LT_OUTPUT in /mingw64/share/aclocal/libtool.m4: 621
aclocal-1.16: ignoring macro LT_SUPPORTED_TAG in /mingw64/share/aclocal/libtool.m4: 814
aclocal-1.16: ignoring macro LT_LANG in /mingw64/share/aclocal/libtool.m4: 825
aclocal-1.16: ignoring macro AC_LIBTOOL_CXX in /mingw64/share/aclocal/libtool.m4: 917
aclocal-1.16: ignoring macro AC_LIBTOOL_F77 in /mingw64/share/aclocal/libtool.m4: 918
aclocal-1.16: ignoring macro AC_LIBTOOL_FC in /mingw64/share/aclocal/libtool.m4: 919
aclocal-1.16: ignoring macro AC_LIBTOOL_GCJ in /mingw64/share/aclocal/libtool.m4: 920
aclocal-1.16: ignoring macro AC_LIBTOOL_RC in /mingw64/share/aclocal/libtool.m4: 921
aclocal-1.16: ignoring macro _LT_WITH_SYSROOT in /mingw64/share/aclocal/libtool.m4: 1244
aclocal-1.16: ignoring macro _LT_COMPILER_OPTION in /mingw64/share/aclocal/libtool.m4: 1589
aclocal-1.16: ignoring macro AC_LIBTOOL_COMPILER_OPTION in /mingw64/share/aclocal/libtool.m4: 1631
aclocal-1.16: ignoring macro _LT_LINKER_OPTION in /mingw64/share/aclocal/libtool.m4: 1640
aclocal-1.16: ignoring macro AC_LIBTOOL_LINKER_OPTION in /mingw64/share/aclocal/libtool.m4: 1675
aclocal-1.16: ignoring macro LT_CMD_MAX_LEN in /mingw64/share/aclocal/libtool.m4: 1682
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_MAX_CMD_LEN in /mingw64/share/aclocal/libtool.m4: 1821
aclocal-1.16: ignoring macro LT_SYS_DLOPEN_SELF in /mingw64/share/aclocal/libtool.m4: 1932
aclocal-1.16: ignoring macro AC_LIBTOOL_DLOPEN_SELF in /mingw64/share/aclocal/libtool.m4: 2057
aclocal-1.16: ignoring macro _LT_PATH_TOOL_PREFIX in /mingw64/share/aclocal/libtool.m4: 3175
aclocal-1.16: ignoring macro AC_PATH_TOOL_PREFIX in /mingw64/share/aclocal/libtool.m4: 3237
aclocal-1.16: ignoring macro LT_PATH_LD in /mingw64/share/aclocal/libtool.m4: 3260
aclocal-1.16: ignoring macro AM_PROG_LD in /mingw64/share/aclocal/libtool.m4: 3349
aclocal-1.16: ignoring macro AC_PROG_LD in /mingw64/share/aclocal/libtool.m4: 3350
aclocal-1.16: ignoring macro LT_PATH_NM in /mingw64/share/aclocal/libtool.m4: 3679
aclocal-1.16: ignoring macro AM_PROG_NM in /mingw64/share/aclocal/libtool.m4: 3774
aclocal-1.16: ignoring macro AC_PROG_NM in /mingw64/share/aclocal/libtool.m4: 3775
aclocal-1.16: ignoring macro _LT_DLL_DEF_P in /mingw64/share/aclocal/libtool.m4: 3846
aclocal-1.16: ignoring macro LT_LIB_M in /mingw64/share/aclocal/libtool.m4: 3860
aclocal-1.16: ignoring macro AC_CHECK_LIBM in /mingw64/share/aclocal/libtool.m4: 3879
aclocal-1.16: ignoring macro LT_PROG_GCJ in /mingw64/share/aclocal/libtool.m4: 8147
aclocal-1.16: ignoring macro LT_AC_PROG_GCJ in /mingw64/share/aclocal/libtool.m4: 8156
aclocal-1.16: ignoring macro LT_PROG_GO in /mingw64/share/aclocal/libtool.m4: 8163
aclocal-1.16: ignoring macro LT_PROG_RC in /mingw64/share/aclocal/libtool.m4: 8170
aclocal-1.16: ignoring macro LT_AC_PROG_RC in /mingw64/share/aclocal/libtool.m4: 8175
aclocal-1.16: ignoring macro LT_AC_PROG_SED in /mingw64/share/aclocal/libtool.m4: 8303
aclocal-1.16: ignoring macro AC_LIB_PREFIX in /mingw64/share/aclocal/lib-prefix.m4: 15
aclocal-1.16: ignoring macro AC_LIB_PREPARE_PREFIX in /mingw64/share/aclocal/lib-prefix.m4: 115
aclocal-1.16: ignoring macro AC_LIB_WITH_FINAL_PREFIX in /mingw64/share/aclocal/lib-prefix.m4: 138
aclocal-1.16: ignoring macro AC_LIB_PREPARE_MULTILIB in /mingw64/share/aclocal/lib-prefix.m4: 155
aclocal-1.16: ignoring macro AC_LIB_LINKFLAGS in /mingw64/share/aclocal/lib-link.m4: 17
aclocal-1.16: ignoring macro AC_LIB_HAVE_LINKFLAGS in /mingw64/share/aclocal/lib-link.m4: 57
aclocal-1.16: ignoring macro AC_LIB_RPATH in /mingw64/share/aclocal/lib-link.m4: 125
aclocal-1.16: ignoring macro AC_LIB_FROMPACKAGE in /mingw64/share/aclocal/lib-link.m4: 161
aclocal-1.16: ignoring macro AC_LIB_LINKFLAGS_BODY in /mingw64/share/aclocal/lib-link.m4: 181
aclocal-1.16: ignoring macro AC_LIB_APPENDTOVAR in /mingw64/share/aclocal/lib-link.m4: 718
aclocal-1.16: ignoring macro AC_LIB_LINKFLAGS_FROM_LIBS in /mingw64/share/aclocal/lib-link.m4: 742
aclocal-1.16: ignoring macro AC_LIB_PROG_LD_GNU in /mingw64/share/aclocal/lib-ld.m4: 12
aclocal-1.16: ignoring macro AC_LIB_PROG_LD in /mingw64/share/aclocal/lib-ld.m4: 27
aclocal-1.16: ignoring macro gt_LC_MESSAGES in /mingw64/share/aclocal/lcmessage.m4: 22
aclocal-1.16: ignoring macro gl_AC_HEADER_INTTYPES_H in /mingw64/share/aclocal/inttypes_h.m4: 12
aclocal-1.16: ignoring macro gt_INTTYPES_PRI in /mingw64/share/aclocal/inttypes-pri.m4: 14
aclocal-1.16: ignoring macro gt_TYPE_INTMAX_T in /mingw64/share/aclocal/intmax.m4: 11
aclocal-1.16: ignoring macro gt_INTL_MACOSX in /mingw64/share/aclocal/intlmacosx.m4: 18
aclocal-1.16: ignoring macro AM_GNU_GETTEXT_INTL_SUBDIR in /mingw64/share/aclocal/intldir.m4: 19
aclocal-1.16: ignoring macro AM_INTL_SUBDIR in /mingw64/share/aclocal/intl.m4: 25
aclocal-1.16: ignoring macro gt_INTL_SUBDIR_CORE in /mingw64/share/aclocal/intl.m4: 211
aclocal-1.16: ignoring macro gt_GL_ATTRIBUTE in /mingw64/share/aclocal/intl.m4: 282
aclocal-1.16: ignoring macro gt_INTDIV0 in /mingw64/share/aclocal/intdiv0.m4: 9
aclocal-1.16: ignoring macro AM_ICONV_LINKFLAGS_BODY in /mingw64/share/aclocal/iconv.m4: 16
aclocal-1.16: ignoring macro AM_ICONV_LINK in /mingw64/share/aclocal/iconv.m4: 27
aclocal-1.16: ignoring macro AM_ICONV in /mingw64/share/aclocal/iconv.m4: 237
aclocal-1.16: ignoring macro gl_HOST_CPU_C_ABI in /mingw64/share/aclocal/host-cpu-c-abi.m4: 50
aclocal-1.16: ignoring macro gl_HOST_CPU_C_ABI_32BIT in /mingw64/share/aclocal/host-cpu-c-abi.m4: 466
aclocal-1.16: ignoring macro gl_GLIBC21 in /mingw64/share/aclocal/glibc21.m4: 11
aclocal-1.16: ignoring macro gt_GLIBC2 in /mingw64/share/aclocal/glibc2.m4: 11
aclocal-1.16: ignoring macro AM_GNU_GETTEXT in /mingw64/share/aclocal/gettext.m4: 57
aclocal-1.16: ignoring macro AM_GNU_GETTEXT_NEED in /mingw64/share/aclocal/gettext.m4: 394
aclocal-1.16: ignoring macro AM_GNU_GETTEXT_VERSION in /mingw64/share/aclocal/gettext.m4: 401
aclocal-1.16: ignoring macro AM_GNU_GETTEXT_REQUIRE_VERSION in /mingw64/share/aclocal/gettext.m4: 405
aclocal-1.16: ignoring macro gl_FCNTL_O_FLAGS in /mingw64/share/aclocal/fcntl-o.m4: 12
aclocal-1.16: ignoring macro gl_EXTERN_INLINE in /mingw64/share/aclocal/extern-inline.m4: 8
aclocal-1.16: ignoring macro AM_LANGINFO_CODESET in /mingw64/share/aclocal/codeset.m4: 10
aclocal-1.16: ignoring macro gl_BUILD_TO_HOST in /mingw64/share/aclocal/build-to-host.m4: 32
aclocal-1.16: ignoring macro gl_BUILD_TO_HOST_INIT in /mingw64/share/aclocal/build-to-host.m4: 65
aclocal-1.16: ignoring macro gl_XSIZE in /c/libidn2/m4/xsize.m4: 7
aclocal-1.16: ignoring macro gt_TYPE_WINT_T in /c/libidn2/m4/wint_t.m4: 11
aclocal-1.16: ignoring macro gt_TYPE_WCHAR_T in /c/libidn2/m4/wchar_t.m4: 11
aclocal-1.16: ignoring macro gl_VISIBILITY in /c/libidn2/m4/visibility.m4: 23
aclocal-1.16: ignoring macro gl_AC_TYPE_UINTMAX_T in /c/libidn2/m4/uintmax_t.m4: 14
aclocal-1.16: ignoring macro gl_THREADLIB_EARLY in /c/libidn2/m4/threadlib.m4: 29
aclocal-1.16: ignoring macro gl_THREADLIB_EARLY_BODY in /c/libidn2/m4/threadlib.m4: 36
aclocal-1.16: ignoring macro gl_THREADLIB_BODY in /c/libidn2/m4/threadlib.m4: 107
aclocal-1.16: ignoring macro gl_THREADLIB in /c/libidn2/m4/threadlib.m4: 318
aclocal-1.16: ignoring macro gl_DISABLE_THREADS in /c/libidn2/m4/threadlib.m4: 331
aclocal-1.16: ignoring macro gl_AC_HEADER_STDINT_H in /c/libidn2/m4/stdint_h.m4: 12
aclocal-1.16: ignoring macro gl_SIZE_MAX in /c/libidn2/m4/size_max.m4: 9
aclocal-1.16: ignoring macro AC_COMPUTE_INT in /c/libidn2/m4/size_max.m4: 78
aclocal-1.16: ignoring macro AM_PATH_PROG_WITH_TEST in /c/libidn2/m4/progtest.m4: 25
aclocal-1.16: ignoring macro gt_PRINTF_POSIX in /c/libidn2/m4/printf-posix.m4: 11
aclocal-1.16: ignoring macro AM_PO_SUBDIRS in /c/libidn2/m4/po.m4: 23
aclocal-1.16: ignoring macro AM_POSTPROCESS_PO_MAKEFILE in /c/libidn2/m4/po.m4: 220
aclocal-1.16: ignoring macro AM_XGETTEXT_OPTION_INIT in /c/libidn2/m4/po.m4: 443
aclocal-1.16: ignoring macro AM_XGETTEXT_OPTION in /c/libidn2/m4/po.m4: 449
aclocal-1.16: ignoring macro PKG_PROG_PKG_CONFIG in /c/libidn2/m4/pkg.m4: 26
aclocal-1.16: ignoring macro PKG_CHECK_EXISTS in /c/libidn2/m4/pkg.m4: 56
aclocal-1.16: ignoring macro _PKG_SHORT_ERRORS_SUPPORTED in /c/libidn2/m4/pkg.m4: 84
aclocal-1.16: ignoring macro PKG_CHECK_MODULES in /c/libidn2/m4/pkg.m4: 104
aclocal-1.16: ignoring macro AM_NLS in /c/libidn2/m4/nls.m4: 23
aclocal-1.16: ignoring macro LTOBSOLETE_VERSION in /c/libidn2/m4/lt~obsolete.m4: 37
aclocal-1.16: ignoring macro AC_LIBTOOL_LINKER_OPTION in /c/libidn2/m4/lt~obsolete.m4: 39
aclocal-1.16: ignoring macro AC_PROG_EGREP in /c/libidn2/m4/lt~obsolete.m4: 40
aclocal-1.16: ignoring macro _LT_AC_PROG_ECHO_BACKSLASH in /c/libidn2/m4/lt~obsolete.m4: 41
aclocal-1.16: ignoring macro _LT_AC_SHELL_INIT in /c/libidn2/m4/lt~obsolete.m4: 42
aclocal-1.16: ignoring macro _LT_AC_SYS_LIBPATH_AIX in /c/libidn2/m4/lt~obsolete.m4: 43
aclocal-1.16: ignoring macro _LT_PROG_LTMAIN in /c/libidn2/m4/lt~obsolete.m4: 44
aclocal-1.16: ignoring macro _LT_AC_TAGVAR in /c/libidn2/m4/lt~obsolete.m4: 45
aclocal-1.16: ignoring macro AC_LTDL_ENABLE_INSTALL in /c/libidn2/m4/lt~obsolete.m4: 46
aclocal-1.16: ignoring macro AC_LTDL_PREOPEN in /c/libidn2/m4/lt~obsolete.m4: 47
aclocal-1.16: ignoring macro _LT_AC_SYS_COMPILER in /c/libidn2/m4/lt~obsolete.m4: 48
aclocal-1.16: ignoring macro _LT_AC_LOCK in /c/libidn2/m4/lt~obsolete.m4: 49
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_OLD_ARCHIVE in /c/libidn2/m4/lt~obsolete.m4: 50
aclocal-1.16: ignoring macro _LT_AC_TRY_DLOPEN_SELF in /c/libidn2/m4/lt~obsolete.m4: 51
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_CC_C_O in /c/libidn2/m4/lt~obsolete.m4: 52
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_HARD_LINK_LOCKS in /c/libidn2/m4/lt~obsolete.m4: 53
aclocal-1.16: ignoring macro AC_LIBTOOL_OBJDIR in /c/libidn2/m4/lt~obsolete.m4: 54
aclocal-1.16: ignoring macro AC_LTDL_OBJDIR in /c/libidn2/m4/lt~obsolete.m4: 55
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH in /c/libidn2/m4/lt~obsolete.m4: 56
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_LIB_STRIP in /c/libidn2/m4/lt~obsolete.m4: 57
aclocal-1.16: ignoring macro AC_PATH_MAGIC in /c/libidn2/m4/lt~obsolete.m4: 58
aclocal-1.16: ignoring macro AC_PROG_LD_GNU in /c/libidn2/m4/lt~obsolete.m4: 59
aclocal-1.16: ignoring macro AC_PROG_LD_RELOAD_FLAG in /c/libidn2/m4/lt~obsolete.m4: 60
aclocal-1.16: ignoring macro AC_DEPLIBS_CHECK_METHOD in /c/libidn2/m4/lt~obsolete.m4: 61
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_COMPILER_NO_RTTI in /c/libidn2/m4/lt~obsolete.m4: 62
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE in /c/libidn2/m4/lt~obsolete.m4: 63
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_COMPILER_PIC in /c/libidn2/m4/lt~obsolete.m4: 64
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_LD_SHLIBS in /c/libidn2/m4/lt~obsolete.m4: 65
aclocal-1.16: ignoring macro AC_LIBTOOL_POSTDEP_PREDEP in /c/libidn2/m4/lt~obsolete.m4: 66
aclocal-1.16: ignoring macro LT_AC_PROG_EGREP in /c/libidn2/m4/lt~obsolete.m4: 67
aclocal-1.16: ignoring macro LT_AC_PROG_SED in /c/libidn2/m4/lt~obsolete.m4: 68
aclocal-1.16: ignoring macro _LT_CC_BASENAME in /c/libidn2/m4/lt~obsolete.m4: 69
aclocal-1.16: ignoring macro _LT_COMPILER_BOILERPLATE in /c/libidn2/m4/lt~obsolete.m4: 70
aclocal-1.16: ignoring macro _LT_LINKER_BOILERPLATE in /c/libidn2/m4/lt~obsolete.m4: 71
aclocal-1.16: ignoring macro _AC_PROG_LIBTOOL in /c/libidn2/m4/lt~obsolete.m4: 72
aclocal-1.16: ignoring macro AC_LIBTOOL_SETUP in /c/libidn2/m4/lt~obsolete.m4: 73
aclocal-1.16: ignoring macro _LT_AC_CHECK_DLFCN in /c/libidn2/m4/lt~obsolete.m4: 74
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_DYNAMIC_LINKER in /c/libidn2/m4/lt~obsolete.m4: 75
aclocal-1.16: ignoring macro _LT_AC_TAGCONFIG in /c/libidn2/m4/lt~obsolete.m4: 76
aclocal-1.16: ignoring macro AC_DISABLE_FAST_INSTALL in /c/libidn2/m4/lt~obsolete.m4: 77
aclocal-1.16: ignoring macro _LT_AC_LANG_CXX in /c/libidn2/m4/lt~obsolete.m4: 78
aclocal-1.16: ignoring macro _LT_AC_LANG_F77 in /c/libidn2/m4/lt~obsolete.m4: 79
aclocal-1.16: ignoring macro _LT_AC_LANG_GCJ in /c/libidn2/m4/lt~obsolete.m4: 80
aclocal-1.16: ignoring macro AC_LIBTOOL_LANG_C_CONFIG in /c/libidn2/m4/lt~obsolete.m4: 81
aclocal-1.16: ignoring macro _LT_AC_LANG_C_CONFIG in /c/libidn2/m4/lt~obsolete.m4: 82
aclocal-1.16: ignoring macro AC_LIBTOOL_LANG_CXX_CONFIG in /c/libidn2/m4/lt~obsolete.m4: 83
aclocal-1.16: ignoring macro _LT_AC_LANG_CXX_CONFIG in /c/libidn2/m4/lt~obsolete.m4: 84
aclocal-1.16: ignoring macro AC_LIBTOOL_LANG_F77_CONFIG in /c/libidn2/m4/lt~obsolete.m4: 85
aclocal-1.16: ignoring macro _LT_AC_LANG_F77_CONFIG in /c/libidn2/m4/lt~obsolete.m4: 86
aclocal-1.16: ignoring macro AC_LIBTOOL_LANG_GCJ_CONFIG in /c/libidn2/m4/lt~obsolete.m4: 87
aclocal-1.16: ignoring macro _LT_AC_LANG_GCJ_CONFIG in /c/libidn2/m4/lt~obsolete.m4: 88
aclocal-1.16: ignoring macro AC_LIBTOOL_LANG_RC_CONFIG in /c/libidn2/m4/lt~obsolete.m4: 89
aclocal-1.16: ignoring macro _LT_AC_LANG_RC_CONFIG in /c/libidn2/m4/lt~obsolete.m4: 90
aclocal-1.16: ignoring macro AC_LIBTOOL_CONFIG in /c/libidn2/m4/lt~obsolete.m4: 91
aclocal-1.16: ignoring macro _LT_AC_FILE_LTDLL_C in /c/libidn2/m4/lt~obsolete.m4: 92
aclocal-1.16: ignoring macro _LT_REQUIRED_DARWIN_CHECKS in /c/libidn2/m4/lt~obsolete.m4: 93
aclocal-1.16: ignoring macro _LT_AC_PROG_CXXCPP in /c/libidn2/m4/lt~obsolete.m4: 94
aclocal-1.16: ignoring macro _LT_PREPARE_SED_QUOTE_VARS in /c/libidn2/m4/lt~obsolete.m4: 95
aclocal-1.16: ignoring macro _LT_PROG_ECHO_BACKSLASH in /c/libidn2/m4/lt~obsolete.m4: 96
aclocal-1.16: ignoring macro _LT_PROG_F77 in /c/libidn2/m4/lt~obsolete.m4: 97
aclocal-1.16: ignoring macro _LT_PROG_FC in /c/libidn2/m4/lt~obsolete.m4: 98
aclocal-1.16: ignoring macro _LT_PROG_CXX in /c/libidn2/m4/lt~obsolete.m4: 99
aclocal-1.16: ignoring macro LTVERSION_VERSION in /c/libidn2/m4/ltversion.m4: 19
aclocal-1.16: ignoring macro LTSUGAR_VERSION in /c/libidn2/m4/ltsugar.m4: 14
aclocal-1.16: ignoring macro LTOPTIONS_VERSION in /c/libidn2/m4/ltoptions.m4: 14
aclocal-1.16: ignoring macro AC_LIBTOOL_DLOPEN in /c/libidn2/m4/ltoptions.m4: 113
aclocal-1.16: ignoring macro AC_LIBTOOL_WIN32_DLL in /c/libidn2/m4/ltoptions.m4: 148
aclocal-1.16: ignoring macro AC_ENABLE_SHARED in /c/libidn2/m4/ltoptions.m4: 197
aclocal-1.16: ignoring macro AC_DISABLE_SHARED in /c/libidn2/m4/ltoptions.m4: 201
aclocal-1.16: ignoring macro AM_ENABLE_SHARED in /c/libidn2/m4/ltoptions.m4: 205
aclocal-1.16: ignoring macro AM_DISABLE_SHARED in /c/libidn2/m4/ltoptions.m4: 206
aclocal-1.16: ignoring macro AC_ENABLE_STATIC in /c/libidn2/m4/ltoptions.m4: 251
aclocal-1.16: ignoring macro AC_DISABLE_STATIC in /c/libidn2/m4/ltoptions.m4: 255
aclocal-1.16: ignoring macro AM_ENABLE_STATIC in /c/libidn2/m4/ltoptions.m4: 259
aclocal-1.16: ignoring macro AM_DISABLE_STATIC in /c/libidn2/m4/ltoptions.m4: 260
aclocal-1.16: ignoring macro AC_ENABLE_FAST_INSTALL in /c/libidn2/m4/ltoptions.m4: 305
aclocal-1.16: ignoring macro AC_DISABLE_FAST_INSTALL in /c/libidn2/m4/ltoptions.m4: 312
aclocal-1.16: ignoring macro AC_LIBTOOL_PICMODE in /c/libidn2/m4/ltoptions.m4: 411
aclocal-1.16: ignoring macro AC_TYPE_LONG_LONG_INT in /c/libidn2/m4/longlong.m4: 17
aclocal-1.16: ignoring macro AC_TYPE_UNSIGNED_LONG_LONG_INT in /c/libidn2/m4/longlong.m4: 67
aclocal-1.16: ignoring macro _AC_TYPE_LONG_LONG_SNIPPET in /c/libidn2/m4/longlong.m4: 89
aclocal-1.16: ignoring macro gl_LOCK in /c/libidn2/m4/lock.m4: 9
aclocal-1.16: ignoring macro gl_PREREQ_LOCK in /c/libidn2/m4/lock.m4: 42
aclocal-1.16: ignoring macro LT_INIT in /c/libidn2/m4/libtool.m4: 62
aclocal-1.16: ignoring macro AC_PROG_LIBTOOL in /c/libidn2/m4/libtool.m4: 100
aclocal-1.16: ignoring macro AM_PROG_LIBTOOL in /c/libidn2/m4/libtool.m4: 101
aclocal-1.16: ignoring macro LT_OUTPUT in /c/libidn2/m4/libtool.m4: 621
aclocal-1.16: ignoring macro LT_SUPPORTED_TAG in /c/libidn2/m4/libtool.m4: 814
aclocal-1.16: ignoring macro LT_LANG in /c/libidn2/m4/libtool.m4: 825
aclocal-1.16: ignoring macro AC_LIBTOOL_CXX in /c/libidn2/m4/libtool.m4: 917
aclocal-1.16: ignoring macro AC_LIBTOOL_F77 in /c/libidn2/m4/libtool.m4: 918
aclocal-1.16: ignoring macro AC_LIBTOOL_FC in /c/libidn2/m4/libtool.m4: 919
aclocal-1.16: ignoring macro AC_LIBTOOL_GCJ in /c/libidn2/m4/libtool.m4: 920
aclocal-1.16: ignoring macro AC_LIBTOOL_RC in /c/libidn2/m4/libtool.m4: 921
aclocal-1.16: ignoring macro _LT_WITH_SYSROOT in /c/libidn2/m4/libtool.m4: 1244
aclocal-1.16: ignoring macro _LT_COMPILER_OPTION in /c/libidn2/m4/libtool.m4: 1589
aclocal-1.16: ignoring macro AC_LIBTOOL_COMPILER_OPTION in /c/libidn2/m4/libtool.m4: 1631
aclocal-1.16: ignoring macro _LT_LINKER_OPTION in /c/libidn2/m4/libtool.m4: 1640
aclocal-1.16: ignoring macro AC_LIBTOOL_LINKER_OPTION in /c/libidn2/m4/libtool.m4: 1675
aclocal-1.16: ignoring macro LT_CMD_MAX_LEN in /c/libidn2/m4/libtool.m4: 1682
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_MAX_CMD_LEN in /c/libidn2/m4/libtool.m4: 1821
aclocal-1.16: ignoring macro LT_SYS_DLOPEN_SELF in /c/libidn2/m4/libtool.m4: 1932
aclocal-1.16: ignoring macro AC_LIBTOOL_DLOPEN_SELF in /c/libidn2/m4/libtool.m4: 2057
aclocal-1.16: ignoring macro _LT_PATH_TOOL_PREFIX in /c/libidn2/m4/libtool.m4: 3175
aclocal-1.16: ignoring macro AC_PATH_TOOL_PREFIX in /c/libidn2/m4/libtool.m4: 3237
aclocal-1.16: ignoring macro LT_PATH_LD in /c/libidn2/m4/libtool.m4: 3260
aclocal-1.16: ignoring macro AM_PROG_LD in /c/libidn2/m4/libtool.m4: 3349
aclocal-1.16: ignoring macro AC_PROG_LD in /c/libidn2/m4/libtool.m4: 3350
aclocal-1.16: ignoring macro LT_PATH_NM in /c/libidn2/m4/libtool.m4: 3679
aclocal-1.16: ignoring macro AM_PROG_NM in /c/libidn2/m4/libtool.m4: 3774
aclocal-1.16: ignoring macro AC_PROG_NM in /c/libidn2/m4/libtool.m4: 3775
aclocal-1.16: ignoring macro _LT_DLL_DEF_P in /c/libidn2/m4/libtool.m4: 3846
aclocal-1.16: ignoring macro LT_LIB_M in /c/libidn2/m4/libtool.m4: 3860
aclocal-1.16: ignoring macro AC_CHECK_LIBM in /c/libidn2/m4/libtool.m4: 3879
aclocal-1.16: ignoring macro LT_PROG_GCJ in /c/libidn2/m4/libtool.m4: 8147
aclocal-1.16: ignoring macro LT_AC_PROG_GCJ in /c/libidn2/m4/libtool.m4: 8156
aclocal-1.16: ignoring macro LT_PROG_GO in /c/libidn2/m4/libtool.m4: 8163
aclocal-1.16: ignoring macro LT_PROG_RC in /c/libidn2/m4/libtool.m4: 8170
aclocal-1.16: ignoring macro LT_AC_PROG_RC in /c/libidn2/m4/libtool.m4: 8175
aclocal-1.16: ignoring macro LT_AC_PROG_SED in /c/libidn2/m4/libtool.m4: 8303
aclocal-1.16: ignoring macro AC_LIB_PREFIX in /c/libidn2/m4/lib-prefix.m4: 22
aclocal-1.16: ignoring macro AC_LIB_PREPARE_PREFIX in /c/libidn2/m4/lib-prefix.m4: 122
aclocal-1.16: ignoring macro AC_LIB_WITH_FINAL_PREFIX in /c/libidn2/m4/lib-prefix.m4: 145
aclocal-1.16: ignoring macro AC_LIB_PREPARE_MULTILIB in /c/libidn2/m4/lib-prefix.m4: 162
aclocal-1.16: ignoring macro AC_LIB_LINKFLAGS in /c/libidn2/m4/lib-link.m4: 17
aclocal-1.16: ignoring macro AC_LIB_HAVE_LINKFLAGS in /c/libidn2/m4/lib-link.m4: 57
aclocal-1.16: ignoring macro AC_LIB_RPATH in /c/libidn2/m4/lib-link.m4: 125
aclocal-1.16: ignoring macro AC_LIB_FROMPACKAGE in /c/libidn2/m4/lib-link.m4: 161
aclocal-1.16: ignoring macro AC_LIB_LINKFLAGS_BODY in /c/libidn2/m4/lib-link.m4: 181
aclocal-1.16: ignoring macro AC_LIB_APPENDTOVAR in /c/libidn2/m4/lib-link.m4: 684
aclocal-1.16: ignoring macro AC_LIB_LINKFLAGS_FROM_LIBS in /c/libidn2/m4/lib-link.m4: 708
aclocal-1.16: ignoring macro AC_LIB_PROG_LD_GNU in /c/libidn2/m4/lib-ld.m4: 12
aclocal-1.16: ignoring macro AC_LIB_PROG_LD in /c/libidn2/m4/lib-ld.m4: 27
aclocal-1.16: ignoring macro gt_LC_MESSAGES in /c/libidn2/m4/lcmessage.m4: 22
aclocal-1.16: ignoring macro gl_AC_HEADER_INTTYPES_H in /c/libidn2/m4/inttypes_h.m4: 12
aclocal-1.16: ignoring macro gt_INTTYPES_PRI in /c/libidn2/m4/inttypes-pri.m4: 14
aclocal-1.16: ignoring macro gt_TYPE_INTMAX_T in /c/libidn2/m4/intmax.m4: 11
aclocal-1.16: ignoring macro gt_INTL_MACOSX in /c/libidn2/m4/intlmacosx.m4: 18
aclocal-1.16: ignoring macro AM_GNU_GETTEXT_INTL_SUBDIR in /c/libidn2/m4/intldir.m4: 19
aclocal-1.16: ignoring macro AM_INTL_SUBDIR in /c/libidn2/m4/intl.m4: 25
aclocal-1.16: ignoring macro gt_INTL_SUBDIR_CORE in /c/libidn2/m4/intl.m4: 211
aclocal-1.16: ignoring macro gt_GL_ATTRIBUTE in /c/libidn2/m4/intl.m4: 282
aclocal-1.16: ignoring macro gt_INTDIV0 in /c/libidn2/m4/intdiv0.m4: 9
aclocal-1.16: ignoring macro AM_ICONV_LINKFLAGS_BODY in /c/libidn2/m4/iconv.m4: 9
aclocal-1.16: ignoring macro AM_ICONV_LINK in /c/libidn2/m4/iconv.m4: 20
aclocal-1.16: ignoring macro AM_ICONV in /c/libidn2/m4/iconv.m4: 233
aclocal-1.16: ignoring macro GTK_DOC_CHECK in /c/libidn2/m4/gtk-doc.m4: 32
aclocal-1.16: ignoring macro gl_GLIBC21 in /c/libidn2/m4/glibc21.m4: 11
aclocal-1.16: ignoring macro gt_GLIBC2 in /c/libidn2/m4/glibc2.m4: 11
aclocal-1.16: ignoring macro AM_GNU_GETTEXT in /c/libidn2/m4/gettext.m4: 57
aclocal-1.16: ignoring macro AM_GNU_GETTEXT_NEED in /c/libidn2/m4/gettext.m4: 409
aclocal-1.16: ignoring macro AM_GNU_GETTEXT_VERSION in /c/libidn2/m4/gettext.m4: 416
aclocal-1.16: ignoring macro AM_GNU_GETTEXT_REQUIRE_VERSION in /c/libidn2/m4/gettext.m4: 420
aclocal-1.16: ignoring macro gl_FCNTL_O_FLAGS in /c/libidn2/m4/fcntl-o.m4: 12
aclocal-1.16: ignoring macro gl_EXTERN_INLINE in /c/libidn2/m4/extern-inline.m4: 8
aclocal-1.16: ignoring macro AM_LANGINFO_CODESET in /c/libidn2/m4/codeset.m4: 10
aclocal-1.16: ignoring macro gl_MODULE_INDICATOR_FOR_TESTS in m4/gnulib-common.m4: 1056
(수정)
configure.ac 수정
AC_DEFINE([gl_MODULE_INDICATOR_FOR_TESTS], [], [Description of the macro])

(오류)
m4_divert_push: cannot change diversion to 'GROW' inside m4_expand
(수정)
configure.ac 파일에서 m4 매크로를 사용하는 과정에서 발생하는 문제
매크로 정의나 분기 처리 방식에 문제가 있을 때 발생

고유 매크로 선언 중복 경고들
aclocal-1.16: saw macro LT_PROG_RC
aclocal-1.16: saw macro LT_PROG_RC
aclocal-1.16: saw macro LT_AC_PROG_RC
aclocal-1.16: saw macro AC_PROG_EGREP
aclocal-1.16: saw macro LT_AC_PROG_SED
aclocal-1.16: saw macro LTOPTIONS_VERSION
...

(오류)
checking for getprogname... no
(수정)
lib/Makefile.gnulib 선언확인
if GL_COND_OBJ_GETPROGNAME
libtextstyle_la_SOURCES += getprogname.c
endif
=> configure.ac, config.h에 GL_COND_OBJ_GETPROGNAME 선언이 없음

configure.ac 수정
AC_INIT([libtextstyle], [1.0], [bug-libtextstyle@example.com])
# GNULIB 모듈 정의
GNULIB_MODULES="
    ncurses
    terminfo
    xmalloc
    xrealloc
    xgethostname
    _gl_nothrow_get_osfhandle
    getprogname
"
=>GL_COND_OBJ_GETHOSTNAME는 Gnulib의 모듈이 초기화되면 자동으로 정의
별도로 ac_define을 사용할 필요가 없습

(오류)
checking for attributes.h... no
(수정)
configure.ac 수정
# Check for required system headers
//AC_CHECK_HEADERS([stdio.h stdlib.h wchar.h attributes.h])
AC_CHECK_HEADERS([stdio.h stdlib.h wchar.h]) #attributes.h존재하지않음

(오류)
checking for fsync... no
(수정)
configure.ac 수정
# GNULIB 모듈 정의
GNULIB_MODULES="
    ncurses \
    terminfo \
    xmalloc \
    xrealloc \
    xgethostname \
    _gl_nothrow_get_osfhandle \
    fsync \
    getprogname
"
# Check for fsync
#fsync가 사용 가능한지 확인하고, 그렇지 않은 경우 FlushFileBuffers를 사용하도록 설정
AC_COMPILE_IFELSE([
    AC_LANG_SOURCE([
        #include <unistd.h>
        int main() {
            int fd = 0; // 예시로 stdin 사용
            fsync(fd);
            return 0;
        }
    ])
],
[
    AC_DEFINE([HAVE_FSYNC], [1], [Define to 1 if you have the `fsync' function.])
],
[
    AC_DEFINE([HAVE_FLUSH_FILE_BUFFERS], [1], [Define to 1 if using FlushFileBuffers on Windows.])
])

(오류)
checking whether the compiler supports __attribute__((__malloc__))... done
(수정)
__attribute__((__malloc__)) 속성을 지원하는지에 대한 체크가 성공적으로 완료되었음을 나타냄.

(오류)
checking whether -lc should be explicitly linked in... yes
(수정)
C 라이브러리(libc)를 링크해야 한다는 것을 의미합니다.
configure.ac 확인
# GNULIB 모듈 정의
GNULIB_MODULES=" \
    ncurses \
    terminfo \
    xmalloc \
    xrealloc \
    xgethostname \
    _gl_nothrow_get_osfhandle \
    getprogname \
    fsync \
"

AC_CHECK_HEADERS([stdio.h stdlib.h wchar.h])

AC_COMPILE_IFELSE([AC_LANG_SOURCE([
#include <unistd.h>
int main() {
    int fd = 0; // 예시로 stdin 사용
    fsync(fd);
    return 0;
}])],
    [AC_DEFINE([HAVE_FSYNC], [1], [Define to 1 if you have the `fsync' function.])],
    [AC_DEFINE([HAVE_FLUSH_FILE_BUFFERS], [1], [Define to 1 if using FlushFileBuffers on Windows.])]
)

# GL_COND_OBJ_FSYNC : configure.ac, config.h에 없음
# GL_COND_OBJ_FSYNC를 사용하기 위해, configure.ac 파일에 fsync에 대한 조건부 체크를 추가
# fsync 함수 체크 추가
# Check for the presence of getprogname function
//AC_CHECK_FUNCS([getprogname printf malloc])
AC_CHECK_FUNCS([getprogname printf malloc fsync], [GL_COND_OBJ_FSYNC=1])

lib/Makefile.gnulib 선언확인
if GL_COND_OBJ_GETPROGNAME
libtextstyle_la_SOURCES += getprogname.c
endif

if GL_COND_OBJ_FSYNC
libtextstyle_la_SOURCES += fsync.c
endif

(오류)
checking if /mingw64/bin/gcc supports -fno-rtti -fno-exceptions... no
(수정)
사용 중인 GCC 컴파일러가 -fno-rtti 및 -fno-exceptions 플래그를 지원하지 않음을 의미
C++ 코드에서 런타임 타입 정보(RTTI)와 예외 처리를 비활성화하는 데 사용
C++에서 이러한 플래그가 필요하지 않다면, configure.ac 또는 Makefile에서 이들을 제거하는 것이 좋음
gcc 버전 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# gcc --version
gcc.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

-fno-rtti와 -fno-exceptions 플래그를 지원하는지 확인하고, 조건부로 해당 플래그를 적용할 수 있음

configure.ac 수정
# Set C++ standard to C++17
CXXFLAGS="$CXXFLAGS -std=c++17"   # C++ 표준을 C++17로 설정
AC_SUBST(CXXFLAGS)                # Makefile에 전달

AC_COMPILE_IFELSE([    # C++ 컴파일러가 해당 플래그를 지원하는지 여부에 따라 동적으로 플래그가 추가
  AC_LANG_SOURCE([
    #include <cstdlib>
    int main() { return 0; }
  ])
],
[
  # C++ 컴파일러가 -fno-rtti와 -fno-exceptions 플래그를 지원하는 경우
  CXXFLAGS="$CXXFLAGS -fno-rtti -fno-exceptions"
])

(오류)
aclocal-1.16: found macro AC_LIBTOOL_PROG_CC_C_O in /usr/share/aclocal/lt~obsolete.m4: 52
aclocal-1.16: found macro AC_LIBTOOL_SYS_HARD_LINK_LOCKS in /usr/share/aclocal/lt~obsolete.m4: 53
aclocal-1.16: found macro AC_LIBTOOL_OBJDIR in /usr/share/aclocal/lt~obsolete.m4: 54
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'AC_LIBTOOL_PROG_CC_C_O' ./lib

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'AC_LIBTOOL_SYS_HARD_LINK_LOCKS' ./lib

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'AC_LIBTOOL_OBJDIR' ./lib

configure.ac 수정
# 매크로를 정의하고 구현 내용을 포함
AC_DEFUN([AC_LIBTOOL_PROG_CC_C_O], [dnl
  # 매크로의 구현 내용
])
AC_DEFUN([AC_LIBTOOL_SYS_HARD_LINK_LOCKS], [dnl
  # 매크로의 구현 내용
])
AC_DEFUN([AC_LIBTOOL_OBJDIR], [dnl
  # 매크로의 구현 내용
])

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# echo $ACLOCAL_PATH
/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/m4

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# echo $AUTOCONF_PATH
/c/libidn2/m4:/usr/share/aclocal:/mingw64/share/aclocal

(오류)
aclocal-1.16: ignoring macro gl_MODULE_INDICATOR_FOR_TESTS in m4/gnulib-common.m4: 1056
aclocal-1.16: saw macro PKG_CHECK_MODULES
...
(수정)
configure.ac 수정
define([DEFINE_MACRO], [m4_ifndef([$1], [AC_DEFINE([$1], [1], [$2])])])
AC_DEFINE([gl_XSIZE], [], [Description of gl_XSIZE])
...

(오류)
aclocal-1.16: ignoring macro gl_XSIZE in /mingw64/share/aclocal/xsize.m4: 7
(수정)
configure.ac 수정
# ignoring macro define start
define([DEFINE_MACRO], [m4_ifndef([$1], [AC_DEFINE([$1], [1], [$2])])])
DEFINE_MACRO([gl_XSIZE], [Description of gl_XSIZE])
#aclocal-1.16: ignoring macro gl_XSIZE in /mingw64/share/aclocal/xsize.m4: 7
# ignoring macro define end

config.h 생성확인
/* Description of gl_XSIZE */
#define gl_XSIZE 1

build 후 (같은에러발생)
aclocal-1.16: ignoring macro gl_XSIZE in /mingw64/share/aclocal/xsize.m4: 7

파일확인
"C:\msys64\mingw64\share\aclocal\xsize.m4" 존재함
# xsize.m4 serial 5
dnl Copyright (C) 2003-2004, 2008-2016 Free Software Foundation, Inc.
dnl This file is free software; the Free Software Foundation
dnl gives unlimited permission to copy and/or distribute it,
dnl with or without modifications, as long as this notice is preserved.

AC_DEFUN([gl_XSIZE],
[
  dnl Prerequisites of lib/xsize.h.
  AC_REQUIRE([gl_SIZE_MAX])
  AC_CHECK_HEADERS([stdint.h])
])
=> gl_XSIZE 매크로가 gl_SIZE_MAX를 요구하고 있는데, 
gl_SIZE_MAX가 정의되지 않으면 gl_XSIZE 매크로가 무시됨.
gl_SIZE_MAX가 정의되어 있어야 함.

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# echo $ACLOCAL_PATH
/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/m4
=> C:\msys64\mingw64\share\aclocal 위치 확인
=> 안들어있다면 
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# notepad ~/.bashrc
수정 후
# source ~/.bashrc 

(오류)
aclocal-1.16: ignoring macro gl_MODULE_INDICATOR_FOR_TESTS in m4/gnulib-common.m4: 1056
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_CC_C_O in /usr/share/aclocal/lt~obsolete.m4: 52
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_HARD_LINK_LOCKS in /usr/share/aclocal/lt~obsolete.m4: 53
aclocal-1.16: ignoring macro AC_LIBTOOL_OBJDIR in /usr/share/aclocal/lt~obsolete.m4: 54
aclocal-1.16: ignoring macro AC_DISABLE_FAST_INSTALL in /usr/share/aclocal/ltoptions.m4: 312
aclocal-1.16: ignoring macro AC_LIBTOOL_LINKER_OPTION in /usr/share/aclocal/libtool.m4: 1675
aclocal-1.16: ignoring macro LT_AC_PROG_SED in /usr/share/aclocal/libtool.m4: 8303
...
(수정)
ignoring만 터미널에 출력/ build_output.log 저장되도록 함
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# {
    {
        aclocal --verbose
    } 2>&1 | awk '/ignoring/ {print}'

    {
        autoconf --verbose
    } 2>&1 | awk '/ignoring/ {print}'

    {
        autoheader --verbose
    } 2>&1 | awk '/ignoring/ {print}'

    {
        automake --add-missing --verbose
    } 2>&1 | awk '/ignoring/ {print}'

    {
        libtoolize --verbose
    } 2>&1 | awk '/ignoring/ {print}'

    {
        autoreconf -ivf
    } 2>&1 | awk '/ignoring/ {print}'

    {
        ./configure --verbose
    } 2>&1 | awk '/ignoring/ {print}'

    {
        make clean
    } 2>&1 | awk '/ignoring/ {print}'

    {
        make
    } 2>&1 | awk '/ignoring/ {print}'
} 2>&1 | tee build_output.log || echo "An error occurred in the build process."

(일단 gl_MODULE_INDICATOR_FOR_TESTS 샘플로 확인)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# # 예: 특정 매크로가 정의된 파일 검색
grep -r "gl_MODULE_INDICATOR_FOR_TESTS" m4/
...
(선언된파일)
m4/gnulib-common.m4:  AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS], [])
...
(사용된파일)
m4/dirent_h.m4, m4/fcntl_h.m4, m4/fenv_h.m4, m4/fnmatch_h.m4, m4/glob_h.m4, 
m4/langinfo_h.m4, m4/locale_h.m4, m4/malloc_h.m4, m4/math_h.m4, m4/mntent_h.m4,
m4/netdb_h.m4, m4/poll_h.m4, m4/pthread_h.m4, m4/pty_h.m4, m4/sched_h.m4,
m4/search_h.m4, m4/signal_h.m4, m4/spawn_h.m4, m4/stdio_h.m4, m4/stdlib_h.m4,
m4/string_h.m4, m4/sys_ioctl_h.m4, m4/sys_random_h.m4, m4/sys_resource_h.m4, ...

(매크로마다 정의와 사용된 부분을 출력하는 sh파일생성: 일단 gl_MODULE_INDICATOR_FOR_TESTS 테스트)
#!/bin/bash

# 매크로 이름 정의
macro="gl_MODULE_INDICATOR_FOR_TESTS"

# 매크로 정의 상태 확인
define_status=$(grep -i "AC_DEFUN(\[$macro\]" macro_definitions.txt)

# 매크로 호출 상태 확인
call_status=$(grep -i "$macro" macro_calls.txt | grep -v "AC_DEFUN")

# 결과 출력
echo "[macro]"
echo "$macro"
echo
echo "[define]"
if [ -n "$define_status" ]; then
    echo "$define_status"
else
    echo "N/A"
fi
echo
echo "[call]"
if [ -n "$call_status" ]; then
    echo "$call_status"
else
    echo "N/A"
fi
(파일만들기)
# 매크로 목록
c:/ignor/macros.txt

# 매크로 정의를 찾아 파일 생성
grep -r "AC_DEFUN(\[$macro\]" m4/ > macro_definitions.txt 

# 매크로 호출을 찾아 파일 생성
grep -r "\[$macro\]" m4/ > macro_calls.txt

(결과)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./ignor_check_macros.sh
[macro]
gl_MODULE_INDICATOR_FOR_TESTS

[define]
m4/gnulib-common.m4:AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS],
m4/gnulib-common.m4:  AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS], [])

[call]
m4/dirent_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/fcntl_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/fenv_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/fnmatch_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/glob_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/gnulib-common.m4:# gl_MODULE_INDICATOR_FOR_TESTS([modulename])
m4/gnulib-common.m4:  dnl Override gl_MODULE_INDICATOR_FOR_TESTS.
m4/langinfo_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/locale_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/malloc_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/math_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/mntent_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/netdb_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/poll_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/pthread_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/pty_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/sched_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/search_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/signal_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/spawn_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/stdio_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/stdlib_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/string_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/sys_ioctl_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/sys_random_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/sys_resource_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/sys_select_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/sys_socket_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/sys_stat_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/sys_time_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/sys_uio_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/sys_wait_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/termios_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/threads_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/time_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/uchar_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/unicase_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/unictype_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/unimetadata_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/uninorm_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/unistd_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/utime_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/utmp_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/wchar_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])
m4/wctype_h.m4:  gl_MODULE_INDICATOR_FOR_TESTS([$1])

=> 정의도 되어있고 호출도 다양하게 하는데 왜 ignoring, saw 경고가 나는지 확인해야함
=> Autoconf와 M4 매크로 시스템에서 매크로가 적절하게 정의되거나 사용되지 않았을 때 발생
=> m4/gnulib-common.m4 파일을 열어 gl_MODULE_INDICATOR_FOR_TESTS 매크로의 정의가 완전하게 작성되었는지 확인
"C:\libidn2\gettext-0.22.5\libtextstyle\m4\gnulib-common.m4"
# 매크로 정의가 끝나지 않은 것처럼 보일 수 있습니다. 
# AC_DEFINE에서 인자를 전달할 때 $1이 정의되지 않은 경우에 문제가 발생할 수 있음.
# $1이 적절한 값을 가져오는지 확인
AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS],
[
  AC_DEFINE([GNULIB_TEST_]m4_translit([[$1]],
      [abcdefghijklmnopqrstuvwxyz./-],
      [ABCDEFGHIJKLMNOPQRSTUVWXYZ___]), [1],
    [Define to 1 when the gnulib module $1 should be tested.])
])

# gl_ASSERT_NO_GNULIB_TESTS 매크로가 호출될 때 gl_MODULE_INDICATOR_FOR_TESTS를 재정의합니다. 
# 이 부분에서 gl_MODULE_INDICATOR_FOR_TESTS 매크로가 사용되지 않을 때 경고가 발생할 수 있다.
AC_DEFUN([gl_ASSERT_NO_GNULIB_TESTS],
[
  dnl Override gl_MODULE_INDICATOR_FOR_TESTS.
  AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS], [])
])

#Ignoring"은 매크로가 정의되었지만 호출되지 않았다는 의미
#"Saw"는 매크로가 호출되었지만 해당 매크로에 대한 정의가 없다는 의미

#Gnulib 모듈 확인
# terminfo 확인
C:\libidn2\gettext-0.22.5\libtextstyle\m4\terminfo.m4
configure.ac수정
AC_GNU_LIBTOOL_WIN32
AC_CHECK_LIB([ncurses], [tputs], [initscr]) # ncurses 라이브러리 링크 추가

매크로 정의 확인
terminfo.m4 내에서 gl_MODULE_INDICATOR_FOR_TESTS 매크로가 어떻게 사용되고 있는지 확인
=>없음

gl_ASSERT_NO_GNULIB_TESTS 매크로가 
gl_MODULE_INDICATOR_FOR_TESTS를 재정의하는 부분을 주석 처리하거나 삭제합니다.
"C:\libidn2\gettext-0.22.5\libtextstyle\m4\gnulib-common.m4" 수정
# ignoring warning으로 제거
#AC_DEFUN([gl_ASSERT_NO_GNULIB_TESTS],
#[
#  dnl Override gl_MODULE_INDICATOR_FOR_TESTS.
#  AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS], [])
#])

(수정전 빌드)
aclocal-1.16: ignoring macro gl_MODULE_INDICATOR_FOR_TESTS in m4/gnulib-common.m4: 1056
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_CC_C_O in /usr/share/aclocal/lt~obsolete.m4: 52
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_HARD_LINK_LOCKS in /usr/share/aclocal/lt~obsolete.m4: 53
aclocal-1.16: ignoring macro AC_LIBTOOL_OBJDIR in /usr/share/aclocal/lt~obsolete.m4: 54
aclocal-1.16: ignoring macro AC_DISABLE_FAST_INSTALL in /usr/share/aclocal/ltoptions.m4: 312
aclocal-1.16: ignoring macro AC_LIBTOOL_LINKER_OPTION in /usr/share/aclocal/libtool.m4: 1675
aclocal-1.16: ignoring macro LT_AC_PROG_SED in /usr/share/aclocal/libtool.m4: 8303
(수정 후 빌드)
aclocal-1.16: ignoring macro AC_LIBTOOL_PROG_CC_C_O in /usr/share/aclocal/lt~obsolete.m4: 52
aclocal-1.16: ignoring macro AC_LIBTOOL_SYS_HARD_LINK_LOCKS in /usr/share/aclocal/lt~obsolete.m4: 53
aclocal-1.16: ignoring macro AC_LIBTOOL_OBJDIR in /usr/share/aclocal/lt~obsolete.m4: 54
aclocal-1.16: ignoring macro AC_DISABLE_FAST_INSTALL in /usr/share/aclocal/ltoptions.m4: 312
aclocal-1.16: ignoring macro AC_LIBTOOL_LINKER_OPTION in /usr/share/aclocal/libtool.m4: 1675
aclocal-1.16: ignoring macro LT_AC_PROG_SED in /usr/share/aclocal/libtool.m4: 8303
aclocal-1.16: ignoring macro gl_XSIZE in /mingw64/share/aclocal/xsize.m4: 7
=> aclocal-1.16: ignoring macro gl_MODULE_INDICATOR_FOR_TESTS in m4/gnulib-common.m4: 1056 사라짐

ignoring warning이 한두개가 아닌관계로 
aclocal에 --warnings=none 옵션을 추가해 경고를 무시
모든 출력 나오도록 빌드 명령어 수정
{
    {
        aclocal --warnings=none --verbose;
    } 2>&1;
    
    {
        autoconf --verbose;
    } 2>&1;
    
    {
        autoheader --verbose;
    } 2>&1;
    
    {
        automake --add-missing --verbose;
    } 2>&1;
    
    {
        libtoolize --verbose;
    } 2>&1;
    
    {
        autoreconf -ivf;
    } 2>&1;
    
    {
        ./configure --verbose;
    } 2>&1;
    
    {
        make clean;
    } 2>&1;
    
    {
        make;
    } 2>&1;
} 2>&1 | tee build_output.log || echo "An error occurred in the build process."

(오류)
error: implicit declaration of function 'sigemptyset' [-Wimplicit-function-declaration]
error: implicit declaration of function 'sigaddset' [-Wimplicit-function-declaration]
error: implicit declaration of function 'sigprocmask' [-Wimplicit-function-declaration]
(수정)
lib/term-style-control.h 수정
#ifdef _WIN32 // window는 posix를 완벽히지원하지 않음. Windows API SetConsoleCtrlHandler 콘솔신호유사기능 구현
typedef unsigned int sigset_t;

#ifndef sigemptyset
int sigemptyset(sigset_t *set) { //extern 제거
    if (set) {
        *set = 0;
        return 0;
    }
    return -1;
}
#endif

#ifndef sigaddset
int sigaddset(sigset_t *set, int signal) { //extern 제거
    if (set && signal > 0 && signal < 32) {
        *set |= (1U << signal);
        return 0;
    }
    return -1;
}
#endif

#ifndef sigprocmask
int sigprocmask(int how, const sigset_t *set, sigset_t *oldset) { //extern 제거
	(void)how;  // 사용하지 않음을 명시
	(void)set; // 사용하지 않음을 명시
	(void)oldset; // 사용하지 않음을 명시
    return 0;
}
#endif

#endif /* _WIN32 */

(오류)
libtool: error: cannot find the library 'libintl.la'
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Q
libtool 2.4.7-4
gettext 0.22.4-1
gettext-devel 0.22.4-1

"C:\libidn2\gettext-0.22.5\gettext-runtime\intl\libintl.la"
"C:\libidn2\gettext-0.22.5\gettext-runtime\intl\.libs\libintl.lai"
"C:\libidn2\gettext-0.22.5\gettext-runtime\intl\.libs\libintl.la"

notepad ~/.bashrc 수정
export PKG_CONFIG_PATH="/c/libidn2/gettext-0.22.5/gettext-runtime/intl:/mingw64/lib/pkgconfig:/usr/lib/pkgconfig"
source ~/.bashrc 적

configure.ac 수정
# 패키지 설정
PKG_CHECK_MODULES([ITL], [libintl], [NCURSES], [ncurses], [have_ncurses=yes], [have_ncurses=no])

# 인클루드 경로와 라이브러리 경로 추가 : libtool이 자동으로 올바른 경로에서 libintl을 찾아 사용할 수 있도록 함
AC_SUBST([INTL_CFLAGS], [$INTL_CFLAGS])
AC_SUBST([INTL_LIBS], [$INTL_LIBS])

Makefile.am 수정
bin_PROGRAMS = libtextstyle
libtextstyle_la_LIBS = -lncurses $(GNULIB_LIBS) # libtextstyle 라이브러리에 링크할 라이브러리들
libtextstyle_SOURCES = libtextstyle.o
libtextstyle_LDADD = libtextstyle.la -L/c/libidn2/gettext-0.22.5/gettext-runtime/intl/.libs -lintl
libtextstyle_LIBADD = $(NCURSES_LIBS) #ncurses 라이브러리를 링크하기 위해 $(NCURSES_LIBS)를 사용# 설치할 라이브러리의 위치
libtextstyle_la_LDFLAGS = -shared -Wl,--out-implib=libtextstyle.dll.a $(LDFLAGS) #DLL을 생성하기 위한 필수 플래그를 추가
# -shared는 공유 라이브러리를 생성하는 옵션이며, 
# -Wl, --out-implib=libtextstyle.dll.a는 DLL의 import 라이브러리를 생성

# Add the static archive to be installed
# 정적 라이브러리 설치 코드를 추가(주석제거)
install: all
  $(INSTALL) -m 755 lib/libtextstyle.a $(prefix)/lib

(오류)
onfigure.ac:554: error: possibly undefined macro: AC_GNU_LIBTOOL_WIN32
      If this token and others are legitimate, please use m4_pattern_allow.
      See the Autoconf documentation.
configure.ac:561: error: possibly undefined macro: AC_GNU_LIBTOOL
(수정)
configure.ac 수정
AM_INIT_AUTOMAKE([1.9.6 foreign])
AC_PROG_LIBTOOL

(오류)
configure.ac:24: warning: The macro 'AC_PROG_LIBTOOL' is obsolete.
configure.ac:24: You should run autoupdate.
(수정)
AC_PROG_LIBTOOL 매크로는 구식이므로, AC_ENABLE_SHARED 및 AC_LIBTOOL_WIN32와 같은 새로운 매크로로 대체
configure.ac 수정
AC_INIT([libtextstyle], [1.0], [bug-libtextstyle@example.com])
AC_USE_SYSTEM_EXTENSIONS # AC_INIT 보다 먼저 호출하면 안됨
#AM_INIT_AUTOMAKE([1.9.6 foreign]) 
#AC_PROG_LIBTOOL 제거됨 -> LT_INIT 
LT_INIT([win32-dll])
gl_INIT_PACKAGE([libtextstyle], [$VERSION_NUMBER])
AM_INIT_AUTOMAKE([1.13 silent-rules]) #gl_INIT_PACKAGE보다 먼저 선언되면 안됨

#AC_GNU_LIBTOOL_WIN32 및 AC_GNU_LIBTOOL, 이들 매크로를 사용하지 않고 LT_INIT만 사용하면 해결
#AC_GNU_LIBTOOL_WIN32 # LT_INIT대체
#AC_GNU_LIBTOOL # LT_INIT대체

(오류)
Makefile.am:47: error: use 'libtextstyle_LDADD', not 'libtextstyle_LIBADD'
Makefile.am:47: warning: variable 'libtextstyle_LIBADD' is defined but no program or
Makefile.am:47: library has 'libtextstyle' as canonical name (possible typo)
make: *** [Makefile:816: Makefile.in] 오류 1
 cd . && /bin/sh /c/libidn2/gettext-0.22.5/libtextstyle/build-aux/missing automake-1.16 --gnu
Makefile.am:47: error: use 'libtextstyle_LDADD', not 'libtextstyle_LIBADD'
Makefile.am:47: warning: variable 'libtextstyle_LIBADD' is defined but no program or
Makefile.am:47: library has 'libtextstyle' as canonical name (possible typo)

(수정)
#bin_PROGRAMS = libtextstyle_la 실행가능한 프로그램인 경우
libtextstyle_la_LIBS = -lncurses $(GNULIB_LIBS) # libtextstyle 라이브러리에 링크할 라이브러리들
libtextstyle_la_SOURCES = libtextstyle.o
libtextstyle_la_LDADD = libtextstyle.la -L/c/libidn2/gettext-0.22.5/gettext-runtime/intl/.libs -lintl
#libtextstyle_la_LIBADD = $(NCURSES_LIBS) #ncurses 라이브러리를 링크하기 위해 $(NCURSES_LIBS)를 사용# 설치할 라이브러리의 위치
libtextstyle_la_LDFLAGS = -shared -Wl,--out-implib=libtextstyle.dll.a $(LDFLAGS) #DLL을 생성하기 위한 필수 플래그를 추가
# -shared는 공유 라이브러리를 생성하는 옵션이며, 
# -Wl, --out-implib=libtextstyle.dll.a는 DLL의 import 라이브러리를 생성

(오류)
Makefile.am:45: warning: libtextstyle_la_SOURCES multiply defined in condition TRUE ...
Makefile.am:29: ... 'libtextstyle_la_SOURCES' previously defined here
(수정)
Makefile.am 수정
#libtextstyle_la_SOURCES = libtextstyle.o

(오류)
Makefile.am:46: error: use 'libtextstyle_la_LIBADD', not 'libtextstyle_la_LDADD'
Makefile.am:46: warning: variable 'libtextstyle_la_LDADD' is defined but no program or
Makefile.am:46: library has 'libtextstyle_la' as canonical name (possible typo)
(수정)
Makefile.am 수정
#libtextstyle_la_LDADD = libtextstyle.la -L/c/libidn2/gettext-0.22.5/gettext-runtime/intl/.libs -lintl
libtextstyle_la_LIBADD = $(NCURSES_LIBS) #ncurses 라이브러리를 링크하기 위해 $(NCURSES_LIBS)를 사용# 설치할 라이브러리의 위치

(오류)
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: C:/msys64/mingw64/lib/libtextstyle.a(term-ostream.o):term-ostream.c:(.text+0x0): multiple definition of `sigemptyset'; C:/msys64/mingw64/lib/libtextstyle.a(color.o):color.c:(.text+0x43): first defined here
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: C:/msys64/mingw64/lib/libtextstyle.a(term-ostream.o):term-ostream.c:(.text+0x27): multiple definition of `sigaddset'; C:/msys64/mingw64/lib/libtextstyle.a(color.o):color.c:(.text+0x6a): first defined here
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: C:/msys64/mingw64/lib/libtextstyle.a(term-ostream.o):term-ostream.c:(.text+0x72): multiple definition of `sigprocmask'; C:/msys64/mingw64/lib/libtextstyle.a(color.o):color.c:(.text+0xb5): first defined here
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: C:/msys64/mingw64/lib/libtextstyle.a(term-style-control.o):term-style-control.c:(.text+0x0): multiple definition of `sigemptyset'; C:/msys64/mingw64/lib/libtextstyle.a(color.o):color.c:(.text+0x43): first defined here
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: C:/msys64/mingw64/lib/libtextstyle.a(term-style-control.o):term-style-control.c:(.text+0x27): multiple definition of `sigaddset'; C:/msys64/mingw64/lib/libtextstyle.a(color.o):color.c:(.text+0x6a): first defined here
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: C:/msys64/mingw64/lib/libtextstyle.a(term-style-control.o):term-style-control.c:(.text+0x72): multiple definition of `sigprocmask'; C:/msys64/mingw64/lib/libtextstyle.a(color.o):color.c:(.text+0xb5): first defined here
(수정)
lib/term-style-control.h 수정
함수 앞에 static 붙일것
#ifdef _WIN32 // window는 posix를 완벽히지원하지 않음. Windows API SetConsoleCtrlHandler 콘솔신호유사기능 구현
typedef unsigned int sigset_t;

#ifndef sigemptyset
static int sigemptyset(sigset_t *set) {
    if (set) {
        *set = 0;
        return 0;
    }
    return -1;
}
#endif

#ifndef sigaddset
static int sigaddset(sigset_t *set, int signal) {
    if (set && signal > 0 && signal < 32) {
        *set |= (1U << signal);
        return 0;
    }
    return -1;
}
#endif

#ifndef sigprocmask
static  int sigprocmask(int how, const sigset_t *set, sigset_t *oldset) {
	(void)how;  // 사용하지 않음을 명시
	(void)set; // 사용하지 않음을 명시
	(void)oldset; // 사용하지 않음을 명시
    return 0;
}
#endif

#endif /* _WIN32 */
(오류)
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: 
hello.o:hello.c:(.text.startup+0xea): undefined reference to styled_ostream_create'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: 
hello.o:hello.c:(.text.startup+0x115): undefined reference to styled_ostream_begin_use_class'
C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: 
hello.o:hello.c:(.text.startup+0x12f): undefined reference to styled_ostream_begin_use_class'
...
(수정)
hello.c 파일과 libtextstyle.a 라이브러리를 컴파일하는 과정에서 여러 가지 함수들이 정의되지 않았다는 오류
누락된목록
styled_ostream_create
styled_ostream_begin_use_class
styled_ostream_set_hyperlink
file_ostream_create
html_styled_ostream_create
xmalloc, xrealloc, xgethostname, xalloc_die
_gl_nothrow_get_osfhandle
safe_write
get_fatal_signals, at_fatal_signal
rpl_stpcpy
...
libtextstyle.a 라이브러리 안에 정의되어 있는지 확인
"C:\libidn2\gettext-0.22.5\libtextstyle\.libs\libtextstyle.a"
(정의되지 않은예)
외부에서 참조되는 함수(U로 표시됨)로, 
라이브러리 내에서 정의된 것이 아니라 다른 라이브러리에서 제공될 것으로 예상됩니다. 
이 말은 해당 함수들이 이 라이브러리에서는 구현되지 않았으며, 링크 시 외부에서 참조되어야 한다는 의미
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# nm .libs/libtextstyle.a | grep -e styled_ostream_create -e styled_ostream_begin_use_class -e styled_ostream_set_hyperlink -e file_ostream_create -e html_styled_ostream_create -e xmalloc -e xrealloc -e xgethostname -e xalloc_die -e _gl_nothrow_get_osfhandle -e safe_write -e get_fatal_signals -e at_fatal_signal -e rpl_stpcpy
                 U _gl_nothrow_get_osfhandle
                 U xgethostname
                 U xmalloc
                 U xrealloc
                 U rpl_stpcpy
                 U xalloc_die
                 U _gl_nothrow_get_osfhandle
                 U safe_write
                 U at_fatal_signal
                 U get_fatal_signals
                 U xalloc_die
                 U _gl_nothrow_get_osfhandle

styled_ostream_create, styled_ostream_begin_use_class, 
styled_ostream_set_hyperlink, file_ostream_create, html_styled_ostream_create는 검색되지 않음

(라이브러리 내에 styled_ostream_create 함수가 잘정의된 예)
term_ostream_create, term_ostream_free 등과 같은 함수들이 T로 표시되어 있어, 이들은 정의된 함수라는 것을 나타냅니다.
U로 표시된 함수들은 외부에서 제공되는 함수들이며, 정의는 이 라이브러리 내에 없다는 것을 의미합니다. 
예를 들어 ostream_free, ostream_write_mem, ostream_write_str 등이 외부에서 참조되고 있습니다.
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# nm .libs/libtextstyle.a | grep ostream
                 U ostream_free
                 U ostream_write_mem
                 U ostream_write_str
                 U term_ostream_create
                 U term_ostream_get_bgcolor
                 U term_ostream_get_color
                 U term_ostream_get_posture
                 U term_ostream_get_underline
                 U term_ostream_get_weight
                 U term_ostream_rgb_to_color
                 U term_ostream_set_bgcolor
                 U term_ostream_set_color
                 U term_ostream_set_posture
                 U term_ostream_set_underline
                 U term_ostream_set_weight
term-ostream.o:
0000000000005586 T is_instance_of_term_ostream
                 U ostream_typeinfo
0000000000004099 t term_ostream__flush
000000000000489d t term_ostream__flush_to_current_style
00000000000040fc t term_ostream__free
00000000000043d5 t term_ostream__get_bgcolor
000000000000432f t term_ostream__get_color
000000000000553e t term_ostream__get_descriptor
0000000000005572 t term_ostream__get_effective_tty_control
000000000000554f t term_ostream__get_filename
00000000000046a8 t term_ostream__get_hyperlink_id
0000000000004671 t term_ostream__get_hyperlink_ref
000000000000451f t term_ostream__get_posture
0000000000005561 t term_ostream__get_tty_control
00000000000045c8 t term_ostream__get_underline
000000000000447b t term_ostream__get_weight
0000000000003c93 t term_ostream__rgb_to_color
00000000000043ef t term_ostream__set_bgcolor
0000000000004349 t term_ostream__set_color
00000000000046df t term_ostream__set_hyperlink
000000000000453d t term_ostream__set_posture
00000000000045e6 t term_ostream__set_underline
0000000000004498 t term_ostream__set_weight
0000000000003d72 t term_ostream__write_mem
0000000000004ab5 T term_ostream_create
0000000000005622 T term_ostream_flush
0000000000005970 T term_ostream_flush_to_current_style
0000000000005658 T term_ostream_free
0000000000005735 T term_ostream_get_bgcolor
00000000000056d1 T term_ostream_get_color
00000000000059a2 T term_ostream_get_descriptor
0000000000005a35 T term_ostream_get_effective_tty_control
00000000000059d3 T term_ostream_get_filename
00000000000058f9 T term_ostream_get_hyperlink_id
00000000000058c8 T term_ostream_get_hyperlink_ref
00000000000057fd T term_ostream_get_posture
0000000000005a04 T term_ostream_get_tty_control
0000000000005861 T term_ostream_get_underline
0000000000005799 T term_ostream_get_weight
0000000000005687 T term_ostream_rgb_to_color
0000000000005763 T term_ostream_set_bgcolor
00000000000056ff T term_ostream_set_color
000000000000592a T term_ostream_set_hyperlink
000000000000582b T term_ostream_set_posture
000000000000588f T term_ostream_set_underline
00000000000057c7 T term_ostream_set_weight
0000000000000640 r term_ostream_superclasses
0000000000000630 R term_ostream_typeinfo
0000000000000b40 R term_ostream_vtable
00000000000055df T term_ostream_write_mem
ostream.o:
000000000000015a T ostream__flush
000000000000016f T ostream__free
0000000000000140 T ostream__write_mem
00000000000001c4 T ostream_flush
00000000000001fa T ostream_free
000000000000006a T ostream_printf
0000000000000010 r ostream_superclasses
0000000000000008 R ostream_typeinfo
00000000000000db T ostream_vprintf
0000000000000020 R ostream_vtable
0000000000000181 T ostream_write_mem
0000000000000031 T ostream_write_str

configure.ac 수정
CPPFLAGS="$CPPFLAGS -DNEED_MACRO"
AC_SUBST([LIBS], [-ltextstyle])
# 함수 등록
AC_CHECK_FUNC([_gl_nothrow_get_osfhandle], [], [AC_MSG_ERROR([Function _gl_nothrow_get_osfhandle not found])])
AC_CHECK_FUNC([xgethostname], [], [AC_MSG_ERROR([Function xgethostname not found])])
AC_CHECK_FUNC([xmalloc], [], [AC_MSG_ERROR([Function xmalloc not found])])
AC_CHECK_FUNC([xrealloc], [], [AC_MSG_ERROR([Function xrealloc not found])])
AC_CHECK_FUNC([rpl_stpcpy], [], [AC_MSG_ERROR([Function rpl_stpcpy not found])])
AC_CHECK_FUNC([xalloc_die], [], [AC_MSG_ERROR([Function xalloc_die not found])])
AC_CHECK_FUNC([safe_write], [], [AC_MSG_ERROR([Function safe_write not found])])
AC_CHECK_FUNC([at_fatal_signal], [], [AC_MSG_ERROR([Function at_fatal_signal not found])])
AC_CHECK_FUNC([styled_ostream_create], [], [AC_MSG_ERROR([Function styled_ostream_create not found])])
AC_CHECK_FUNC([styled_ostream_begin_use_class], [], [AC_MSG_ERROR([Function styled_ostream_begin_use_class not found])])
AC_CHECK_FUNC([styled_ostream_set_hyperlink], [], [AC_MSG_ERROR([Function styled_ostream_set_hyperlink not found])])
AC_CHECK_FUNC([file_ostream_create], [], [AC_MSG_ERROR([Function file_ostream_create not found])])
AC_CHECK_FUNC([html_styled_ostream_create], [], [AC_MSG_ERROR([Function html_styled_ostream_create not found])])
AC_CHECK_FUNC([get_fatal_signals], [], [AC_MSG_ERROR([Function get_fatal_signals not found])])

(오류)
configure: error: Function _gl_nothrow_get_osfhandle not found
(수정)
configure 스크립트를 실행할 때 _gl_nothrow_get_osfhandle 함수가 발견되지 않아 오류가 발생
# GNULIB 모듈 정의
GNULIB_MODULES="
ncurses \
terminfo \
xmalloc \
xrealloc \
xgethostname \
_gl_nothrow_get_osfhandle \
fsync \
getprogname \
_get_osfhandle #추가
"
빌드하면 
checking for _get_osfhandle... yes
이렇게 나옴

c:\gnulib or c:\libidn2에서 get-osfhandle.c, osfhandle.c 찾을 수 없음
[https://www.codeproject.com/Messages/5715893/Re-get-osfhandle-identifier-not-found.aspx]
Go to ParentMicrosoft have helpfully changed the name, 
it is now _get_osfhandle (with a leading underscore), as defined in io.h.

configure.ac 수정정
# 함수 등록
# 체크하고 없을 경우 선언하기
AC_CHECK_FUNC([_get_osfhandle], [], [
    AC_MSG_NOTICE([Defining _gl_nothrow_get_osfhandle as a wrapper for _get_osfhandle])
    AC_DEFINE([GL_NOTHROW_GET_OSFHANDLE_NOT_FOUND], [1], [Define to 1 if _gl_nothrow_get_osfhandle is not available])
    AC_CAT([m4_include], [
        void _gl_nothrow_get_osfhandle(int fd) {
            return _get_osfhandle(fd);
        }
    ])
])

AC_CHECK_FUNC([xgethostname], [], [
    AC_MSG_NOTICE([Defining xgethostname as a placeholder])
    AC_CAT([m4_include], [
        int xgethostname(char *name, size_t len) {
            return gethostname(name, len);
        }
    ])
])

AC_CHECK_FUNC([xmalloc], [], [
    AC_MSG_NOTICE([Defining xmalloc as a placeholder])
    AC_CAT([m4_include], [
        void *xmalloc(size_t size) {
            void *ptr = malloc(size);
            if (!ptr) {
                exit(EXIT_FAILURE);
            }
            return ptr;
        }
    ])
])

AC_CHECK_FUNC([xrealloc], [], [
    AC_MSG_NOTICE([Defining xrealloc as a placeholder])
    AC_CAT([m4_include], [
        void *xrealloc(void *ptr, size_t size) {
            void *new_ptr = realloc(ptr, size);
            if (!new_ptr) {
                exit(EXIT_FAILURE);
            }
            return new_ptr;
        }
    ])
])

AC_CHECK_FUNC([rpl_stpcpy], [], [
    AC_MSG_NOTICE([Defining rpl_stpcpy as a placeholder])
    AC_CAT([m4_include], [
        char *rpl_stpcpy(char *dest, const char *src) {
            return stpcpy(dest, src);
        }
    ])
])

AC_CHECK_FUNC([xalloc_die], [], [
    AC_MSG_NOTICE([Defining xalloc_die as a placeholder])
    AC_CAT([m4_include], [
        void xalloc_die() {
            fprintf(stderr, "Memory allocation failed\n");
            exit(EXIT_FAILURE);
        }
    ])
])

AC_CHECK_FUNC([safe_write], [], [
    AC_MSG_NOTICE([Defining safe_write as a placeholder])
    AC_CAT([m4_include], [
        ssize_t safe_write(int fd, const void *buf, size_t count) {
            ssize_t result = write(fd, buf, count);
            if (result < 0) {
                // handle error
            }
            return result;
        }
    ])
])

AC_CHECK_FUNC([at_fatal_signal], [], [
    AC_MSG_NOTICE([Defining at_fatal_signal as a placeholder])
    AC_CAT([m4_include], [
        void at_fatal_signal(void (*handler)(int)) {
            signal(SIGTERM, handler);
        }
    ])
])

AC_CHECK_FUNC([styled_ostream_create], [], [
    AC_MSG_NOTICE([Defining styled_ostream_create as a placeholder])
    AC_CAT([m4_include], [
        void *styled_ostream_create() {
            return NULL; // placeholder implementation
        }
    ])
])

AC_CHECK_FUNC([styled_ostream_begin_use_class], [], [
    AC_MSG_NOTICE([Defining styled_ostream_begin_use_class as a placeholder])
    AC_CAT([m4_include], [
        void styled_ostream_begin_use_class() {
            // placeholder implementation
        }
    ])
])

AC_CHECK_FUNC([styled_ostream_set_hyperlink], [], [
    AC_MSG_NOTICE([Defining styled_ostream_set_hyperlink as a placeholder])
    AC_CAT([m4_include], [
        void styled_ostream_set_hyperlink(void *stream, const char *url) {
            // placeholder implementation
        }
    ])
])

AC_CHECK_FUNC([file_ostream_create], [], [
    AC_MSG_NOTICE([Defining file_ostream_create as a placeholder])
    AC_CAT([m4_include], [
        void *file_ostream_create(const char *filename) {
            return NULL; // placeholder implementation
        }
    ])
])

AC_CHECK_FUNC([html_styled_ostream_create], [], [
    AC_MSG_NOTICE([Defining html_styled_ostream_create as a placeholder])
    AC_CAT([m4_include], [
        void *html_styled_ostream_create() {
            return NULL; // placeholder implementation
        }
    ])
])

AC_CHECK_FUNC([get_fatal_signals], [], [
    AC_MSG_NOTICE([Defining get_fatal_signals as a placeholder])
    AC_CAT([m4_include], [
        void get_fatal_signals() {
            // placeholder implementation
        }
    ])
])

(오류)
configure.ac:149: error: possibly undefined macro: m4_include
      If this token and others are legitimate, please use m4_pattern_allow.
      See the Autoconf documentation.
configure.ac:567: error: possibly undefined macro: AC_CAT
autoreconf: error: /mingw64/bin/autoconf failed with exit status: 1
configure: error: cannot find required auxiliary files: missing
(수정)
m4_include와 AC_CAT 매크로가 configure.ac 파일에서 사용되고 있으나, 
이 매크로들이 정의된 M4 파일이 없거나 설치되지 않았습니다. 이로 인해 autoreconf가 실패
AC_CHECK_FUNC([_get_osfhandle], [], [
    AC_MSG_NOTICE([Defining _gl_nothrow_get_osfhandle as a wrapper for _get_osfhandle])
    AC_DEFINE([GL_NOTHROW_GET_OSFHANDLE_NOT_FOUND], [1], [Define to 1 if _gl_nothrow_get_osfhandle is not available])
    AC_CAT([m4_include], [ <= error
        void _gl_nothrow_get_osfhandle(int fd) {
            return _get_osfhandle(fd);
        }
    ])
])

missing 파일이 없다는 오류를 해결하기 위해 automake를 다시 실행하여 필요한 파일들을 생성
빌드명령어 수정 autoreconf --install (추가)
{
    { 
        aclocal --warnings=none --verbose; 
    } 2>&1 | { 
        echo "Error in aclocal"; 
        cat; 
    }
    
    { 
        autoconf --verbose; 
    } 2>&1 | { 
        echo "Error in autoconf"; 
        cat; 
    }
    
    { 
        autoheader --verbose; 
    } 2>&1 | { 
        echo "Error in autoheader"; 
        cat; 
    }
    
    { 
        automake --add-missing --verbose; 
    } 2>&1 | { 
        echo "Error in automake"; 
        cat; 
    }
    
    { 
        libtoolize --verbose; 
    } 2>&1 | { 
        echo "Error in libtoolize"; 
        cat; 
    }
    
    { 
        autoreconf --install; 
    } 2>&1 | { 
        echo "Error in autoreconf"; 
        cat; 
    }
    
    { 
        ./configure --verbose; 
    } 2>&1 | { 
        echo "Error in configure"; 
        cat; 
    }
    
    { 
        make clean; 
    } 2>&1 | { 
        echo "Error in make clean"; 
        cat; 
    }
    
    { 
        make; 
    } 2>&1 | { 
        echo "Error in make"; 
        cat; 
    }
} 2>&1 | tee build_output.log || echo "An error occurred in the build process."

(오류)
./configure: line 9740: syntax error near unexpected token `m4_include,'
./configure: line 9740: `    AC_CAT(m4_include,'
(수정)
configure.ac 수정
AC_CHECK_FUNC([xgethostname], [], [
    AC_MSG_NOTICE([Defining xgethostname as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM([
            #include <unistd.h>
            int xgethostname(char *name, size_t len) {
                return gethostname(name, len);
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define xgethostname])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([xmalloc], [], [
    AC_MSG_NOTICE([Defining xmalloc as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM([
            #include <stdlib.h>
            void *xmalloc(size_t size) {
                void *ptr = malloc(size);
                if (!ptr) {
                    exit(EXIT_FAILURE);
                }
                return ptr;
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define xmalloc])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([xrealloc], [], [
    AC_MSG_NOTICE([Defining xrealloc as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM([
            #include <stdlib.h>
            void *xrealloc(void *ptr, size_t size) {
                void *new_ptr = realloc(ptr, size);
                if (!new_ptr) {
                    exit(EXIT_FAILURE);
                }
                return new_ptr;
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define xrealloc])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([rpl_stpcpy], [], [
    AC_MSG_NOTICE([Defining rpl_stpcpy as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM([
            #include <string.h>
            char *rpl_stpcpy(char *dest, const char *src) {
                return stpcpy(dest, src);
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define rpl_stpcpy])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([xalloc_die], [], [
    AC_MSG_NOTICE([Defining xalloc_die as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM([
            #include <stdio.h>
            void xalloc_die() {
                fprintf(stderr, "Memory allocation failed\n");
                exit(EXIT_FAILURE);
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define xalloc_die])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([safe_write], [], [
    AC_MSG_NOTICE([Defining safe_write as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM([
            #include <unistd.h>
            ssize_t safe_write(int fd, const void *buf, size_t count) {
                ssize_t result = write(fd, buf, count);
                if (result < 0) {
                    // handle error
                }
                return result;
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define safe_write])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([at_fatal_signal], [], [
    AC_MSG_NOTICE([Defining at_fatal_signal as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM([
            #include <signal.h>
            void at_fatal_signal(void (*handler)(int)) {
                signal(SIGTERM, handler);
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define at_fatal_signal])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([styled_ostream_create], [], [
    AC_MSG_NOTICE([Defining styled_ostream_create as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM([
            void *styled_ostream_create() {
                return NULL; // placeholder implementation
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define styled_ostream_create])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([styled_ostream_begin_use_class], [], [
    AC_MSG_NOTICE([Defining styled_ostream_begin_use_class as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM([
            void styled_ostream_begin_use_class() {
                // placeholder implementation
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define styled_ostream_begin_use_class])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([styled_ostream_set_hyperlink], [], [
    AC_MSG_NOTICE([Defining styled_ostream_set_hyperlink as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM([
            void styled_ostream_set_hyperlink(void *stream, const char *url) {
                // placeholder implementation
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define styled_ostream_set_hyperlink])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([file_ostream_create], [], [
    AC_MSG_NOTICE([Defining file_ostream_create as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM([
            void *file_ostream_create(const char *filename) {
                return NULL; // placeholder implementation
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define file_ostream_create])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([html_styled_ostream_create], [], [
    AC_MSG_NOTICE([Defining html_styled_ostream_create as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM([
            void *html_styled_ostream_create() {
                return NULL; // placeholder implementation
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define html_styled_ostream_create])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([get_fatal_signals], [], [
    AC_MSG_NOTICE([Defining get_fatal_signals as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM([
            void get_fatal_signals() {
                // placeholder implementation
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define get_fatal_signals])
    ])
    AC_LANG_POP
])

(오류)
checking for xgethostname... no
configure: Defining xgethostname as a placeholder
configure: error: Failed to define xgethostname
(수정)
include "xgethostname.h" 체크
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'xgethostname' ./lib
./lib/term-ostream.c:50:#include "xgethostname.h"       // 호스트 이름 얻기
./lib/term-ostream.oo.c:53:#include "xgethostname.h"       // 호스트 이름 얻기

configure.ac 수
# 체크하고 없을 경우 오류출력 lib/xgethostname.h, lib/xgethostname.c 있음
AC_CHECK_FUNC([xgethostname], [], [AC_MSG_ERROR([xgethostname not found])])

Makefile.am 수정
# DLL 추가
lib_LTLIBRARIES = libtextstyle.la #공유 라이브러리로 설정
libtextstyle_la_SOURCES = \ #라이브러리에 포함될 소스 파일 목록을 나열
lib/color.c \
lib/gl_array_list.c \
lib/term-ostream.c \
lib/ostream.c \
lib/concat-filename.c \
lib/xconcat-filename.c \
lib/xsize.c \
lib/error.c \
lib/full-write.c \
lib/term-style-control.c \
lib/fsync.c \
lib/xstrdup.c \
lib/xgethostname.c #추가

configure.ac 수정
#AC_CHECK_FUNC([xgethostname], [], [
#    AC_MSG_NOTICE([Defining xgethostname as a placeholder])
#    AC_LANG_PUSH([C])
#    AC_COMPILE_IFELSE([
#        AC_LANG_PROGRAM([
#            #include <unistd.h>
#            int xgethostname(char *name, size_t len) {
#                return gethostname(name, len);
#            }
#        ])
#    ], [], [
#        AC_MSG_ERROR([Failed to define xgethostname])
#    ])
#    AC_LANG_POP
#])

# GNULIB 모듈 정의
GNULIB_MODULES="
ncurses \
terminfo \
xmalloc \
xrealloc \
xgethostname \ # 확인
_gl_nothrow_get_osfhandle \
fsync \
getprogname \
_get_osfhandle  
"

Makefile.am 수정
libtextstyle_la_SOURCES = \ #라이브러리에 포함될 소스 파일 목록을 나열
lib/color.c \
lib/gl_array_list.c \
lib/term-ostream.c \
lib/ostream.c \
lib/concat-filename.c \
lib/xconcat-filename.c \
lib/xsize.c \
lib/error.c \
lib/full-write.c \
lib/term-style-control.c \
lib/fsync.c \
lib/xstrdup.c \
lib/xgethostname.c #확

lib/xgethostname.c 가 구현이 안돼어있음 확인됐으나.
xgethostname.c는 이미 올바르게 구현되어 있으며,
xgetaname-impl.h를 포함하여 gethostname 함수의 래퍼로 작동하도록 설계됨

configure.ac 수정
# xgethostname 함수 확인
AC_CHECK_HEADERS([xgethostname.h])
AC_CHECK_FUNCS([xgethostname])

xgethostname은 시스템 라이브러리 함수가 아니므로 AC_CHECK_FUNCS를 사용하는 것은 적절하지 않음
AC_CHECK_FUNCS([xgethostname]) # 제거 

xgethostname 계속 인식을 못할경우..
xgethostname을 추가하기 위해선 이 테이블이 빌드 시스템에서 인식되도록 설정되어 있어야 함
추가적으로, Gnulib 모듈이 필요할 경우 gnulib-tool --import 명령어를 사용해 xgethostname 모듈을 가져오는 것이 필요
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# /c/gnulib/gnulib-tool --import xgethostname
(xgethostname설치확인)
/c/gnulib/modules/xgethostname 파일이 있어야 합니다. ("C:\gnulib\modules\xgethostname")
/c/libidn2/gettext-0.22.5/libtextstyle/lib/xgethostname.c 또는 lib/xgethostname.h 파일이 있는지 확인

configure.ac 수정
CPPFLAGS="$CPPFLAGS -I/mingw64/include -I/c/libidn2/gettext-0.22.5/libtextstyle/lib -DNEED_MACRO"
AC_SUBST([CPPFLAGS])

# xgethostname 함수 확인
AC_CHECK_HEADERS([xgethostname.h xgetaname-impl.h])
AC_CHECK_FUNC([XGETANAME], [], [AC_MSG_ERROR([XGETANAME not found])])

(오류)
checking for _get_osfhandle... no
configure: Defining _gl_nothrow_get_osfhandle as a wrapper for _get_osfhandle
configure: error: Failed to define _gl_nothrow_get_osfhandle
(수정)
_get_osfhandle 함수는 Windows에서 사용되며, io.h 헤더 파일에 정의되어 있다.
#include <io.h>가 제대로 추가되어 있는지 확인

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn '_get_osfhandle' ./lib

check_io_h.sh 생성(<io.h>가 없으면 파일 최상단에 #include <io.h>를 넣어주도록 함)
#!/bin/bash

# 찾은 파일 목록
files=(
  ./lib/accept4.c
  ./lib/dup2.c
  ./lib/error.c
  ./lib/execute.c
  ./lib/fcntl.c
  ./lib/flock.c
  ./lib/fstat.c
  ./lib/ftruncate.c
  ./lib/ioctl.c
  ./lib/isapipe.c
  ./lib/isatty.c
  ./lib/lseek.c
  ./lib/msvc-nothrow.c
  ./lib/nonblocking.c
  ./lib/poll.c
  ./lib/read.c
  ./lib/select.c
  ./lib/spawn-pipe.c
  ./lib/stdio-read.c
  ./lib/stdio-write.c
  ./lib/term-ostream.c
  ./lib/utimens.c
  ./lib/w32sock.h
  ./lib/windows-spawn.c
  ./lib/write.c
)

# 각각의 파일을 검사하고 없을 경우 최상단에 #include <io.h> 추가
for file in "${files[@]}"
do
  if grep -q '<io.h>' "$file"; then
    echo "'<io.h>' exists in $file."
  else
    echo "'<io.h>' does NOT exist in $file. Adding it..."
    # 파일의 최상단에 #include <io.h> 추가
    sed -i '1i#include <io.h>' "$file"
  fi
done

echo "Check and update complete."

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./check_io_h.sh
...
'<io.h>' does NOT exist in ./lib/msvc-nothrow.c. Adding it...
'<io.h>' exists in ./lib/nonblocking.c.
'<io.h>' exists in ./lib/poll.c.
'<io.h>' exists in ./lib/read.c.
...
Check and update complete.

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./check_io_h.sh
...
'<io.h>' exists in ./lib/msvc-nothrow.c.
'<io.h>' exists in ./lib/nonblocking.c.
'<io.h>' exists in ./lib/poll.c.
'<io.h>' exists in ./lib/read.c.
...
Check and update complete.

configure.ac 수정
AC_CHECK_FUNCS([_get_osfhandle)

# 체크하고 없을 경우 선언하기
#AC_CHECK_FUNC([_get_osfhandle], [], [
#    AC_MSG_NOTICE([Defining _gl_nothrow_get_osfhandle as a wrapper for _get_osfhandle])
#    AC_DEFINE([GL_NOTHROW_GET_OSFHANDLE_NOT_FOUND], [1], [Define to 1 if _gl_nothrow_get_osfhandle is not available])
#
#    AC_LANG_PUSH([C])
#    AC_COMPILE_IFELSE([
#        AC_LANG_PROGRAM([
#            #include <unistd.h>
#            int _gl_nothrow_get_osfhandle(int fd) {
#                return _get_osfhandle(fd);
#            }
#        ])
#    ], [
#        # 성공적으로 컴파일된 경우에 대한 추가 작업
#    ], [
#        # 컴파일 실패 시 메시지
#        AC_MSG_ERROR([Failed to define _gl_nothrow_get_osfhandle])
#    ])
#    AC_LANG_POP
#])

(빌드오류)
1. { aclocal --verbose; aclocal; } 2>&1 | tee aclocal_log.log
(오류)
aclocal-1.16: m4/gnulib-common.m4 is already included by configure.ac
aclocal-1.16: m4/gnulib-tool.m4 is already included by configure.ac
(수정)
configure.ac 수정
#m4_include([m4/gnulib-common.m4])
#m4_include([m4/gnulib-tool.m4])
2. { autoconf --verbose; autoconf; } 2>&1 | tee autoconf_log.log
autom4te: formatting traces for '/tmp/am4tVLxt1g/warnings': _m4_warn
autom4te: reading /tmp/am4tVLxt1g/warnings
3. { autoheader --verbose; autoheader; } 2>&1 | tee autoheader_log.log
autom4te: formatting traces for '/tmp/am4tcapTH0/dependencies': include, m4_include
autom4te: up_to_date (autom4te.cache/traces.1): up to date
autom4te: formatting traces for '/tmp/am4tcapTH0/warnings': _m4_warn
autom4te: reading /tmp/am4tcapTH0/warnings
autoheader: 'config.h.in' is unchanged
4. { automake --add-missing --verbose; automake; } 2>&1 | tee automake_log.log
(오류)
automake-1.16: DEFAULT_INCLUDES:
automake-1.16:   {
automake-1.16:     TRUE => {
automake-1.16:       type: =
automake-1.16:       where: Makefile.am:29: (여기)
automake-1.16:       comment:
automake-1.16: #TEXI2DVI = texi2dvi # 추가
automake-1.16: #TEXI2PDF = $(TEXI2DVI) --pdf # 추가
automake-1.16: #DVIPS = dvips -D600 # 추가
automake-1.16:
automake-1.16: #DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/lib -I$(top_builddir) # Include directory 설정 추가
automake-1.16:
automake-1.16:       value: -I$(srcdir) -I.
automake-1.16:       owner: Makefile
automake-1.16:     }
automake-1.16:   }
automake-1.16: with 'TRUE' => '-I.@am__isrc@'
(수정)
where: Makefile.am:29:
Makefile.am 수정
#DEFAULT_INCLUDES = -I$(srcdir) -I.
(오류)
automake-1.16: thread 0: refusing to override the user definition of:
automake-1.16: TEXI2DVI:
automake-1.16:   {
automake-1.16:     TRUE => {
automake-1.16:       type: =
automake-1.16:       where: doc/Makefile.am:80: (여기)
automake-1.16:       comment:
automake-1.16: # Documentation in DVI format.
automake-1.16:
automake-1.16: # Override of automake's definition:
automake-1.16: #TEXI2DVI = @TEXI2DVI@
automake-1.16:
automake-1.16:       value: @TEXI2DVI@ $(TEXINCLUDES)
automake-1.16:       owner: Makefile
automake-1.16:     }
automake-1.16:   }
automake-1.16: with 'TRUE' => 'texi2dvi'
(수정)
doc/Makefile.am:80
doc/Makefile.am 수정
#TEXI2DVI = @TEXI2DVI@ $(TEXINCLUDES)
(오류)
automake-1.16: thread 0: refusing to override the user definition of:
automake-1.16: TEXI2PDF:
automake-1.16:   {
automake-1.16:     TRUE => {
automake-1.16:       type: =
automake-1.16:       where: doc/Makefile.am:113: (요기)
automake-1.16:       comment:
automake-1.16: # Documentation in Portable Document Format.
automake-1.16:
automake-1.16: # Override of automake's definition:
automake-1.16: #TEXI2PDF = @TEXI2DVI@ --pdf
automake-1.16:
automake-1.16:       value: @TEXI2DVI@ --pdf $(TEXINCLUDES)
automake-1.16:       owner: Makefile
automake-1.16:     }
automake-1.16:   }
automake-1.16: with 'TRUE' => '$(TEXI2DVI) --pdf --batch'
(수정)
automake-1.16:       where: doc/Makefile.am:113:
doc/Makefile.am 수정
#TEXI2PDF = @TEXI2DVI@ --pdf $(TEXINCLUDES)
(오류)
automake-1.16: thread 0: refusing to override the user definition of:
automake-1.16: DVIPS:
automake-1.16:   {
automake-1.16:     TRUE => {
automake-1.16:       type: =
automake-1.16:       where: doc/Makefile.am:95: (요기)
automake-1.16:       comment:
automake-1.16: # Documentation in Postscript format.
automake-1.16:
automake-1.16: # Override of automake's definition:
automake-1.16: #DVIPS = @DVIPS@
automake-1.16:
automake-1.16:       value: @DVIPS@ -D600
automake-1.16:       owner: Makefile
automake-1.16:     }
automake-1.16:   }
automake-1.16: with 'TRUE' => 'dvips'
(수정)
where: doc/Makefile.am:95
doc/Makefile.am 수정
#DVIPS = @DVIPS@ -D600
(오류)
automake-1.16: thread 0: refusing to override the user definition of:
automake-1.16: DEFAULT_INCLUDES:
automake-1.16:   {
automake-1.16:     TRUE => {
automake-1.16:       type: =
automake-1.16:       where: tests/Makefile.am:25: (요기)
automake-1.16:       comment:
automake-1.16: # Ensure that ../lib/config.h is seen before ../config.h.
automake-1.16:
automake-1.16:       value: -I. -I$(srcdir) -I$(top_builddir)/lib -I$(top_builddir)
automake-1.16:       owner: Makefile
automake-1.16:     }
automake-1.16:   }
automake-1.16: with 'TRUE' => '-I.@am__isrc@ -I$(top_builddir)'
(수정)
where: tests/Makefile.am:25:
tests/Makefile.am 수정
#DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/lib -I$(top_builddir)
(오류)
automake-1.16: TEXI2DVI:
automake-1.16:   {
automake-1.16:     TRUE => {
automake-1.16:       type: =
automake-1.16:       where: configure.ac:901: (요기)
automake-1.16:       comment:
automake-1.16:       value: @TEXI2DVI@
automake-1.16:       owner: Configure
automake-1.16:     }
automake-1.16:   }
automake-1.16: with 'TRUE' => 'texi2dvi'
(수정)
where: configure.ac:901:
configure.ac 수정
#AC_PATH_PROG([TEXI2DVI], [texi2dvi], [$ac_aux_dir_abs/missing texi2dvi])
(오류)
automake-1.16: thread 0: refusing to override the user definition of:
automake-1.16: DVIPS:
automake-1.16:   {
automake-1.16:     TRUE => {
automake-1.16:       type: =
automake-1.16:       where: configure.ac:902: (요기)
automake-1.16:       comment:
automake-1.16:       value: @DVIPS@
automake-1.16:       owner: Configure
automake-1.16:     }
automake-1.16:   }
automake-1.16: with 'TRUE' => 'dvips'
(수정)
where: configure.ac:902: 
configure.ac 수정
#AC_PATH_PROG([DVIPS], [dvips], [$ac_aux_dir_abs/missing dvips])
(오류)
automake-1.16: DEFAULT_INCLUDES:
automake-1.16:   {
automake-1.16:     TRUE => {
automake-1.16:       type: =
automake-1.16:       where: Makefile.am:29: (요기)
automake-1.16:       comment:
automake-1.16: #TEXI2DVI = texi2dvi # 추가
automake-1.16: #TEXI2PDF = $(TEXI2DVI) --pdf # 추가
automake-1.16: #DVIPS = dvips -D600 # 추가
automake-1.16:
automake-1.16: #DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/lib -I$(top_builddir) # Include directory 설정 추가
automake-1.16:
automake-1.16:       value: -I$(srcdir) -I.
automake-1.16:       owner: Makefile
automake-1.16:     }
automake-1.16:   }
automake-1.16: with 'TRUE' => '-I.@am__isrc@'
(수정)
where: Makefile.am:29:
Makefile.am 수정
#DEFAULT_INCLUDES = -I$(srcdir) -I.

(빌드명령어)
2>&1 표준 오류 출력을 표준 출력으로 리다이렉트하라
tee 데이터를 처리하면서 동시에 그 결과를 파일에 저장
{ aclocal --verbose; aclocal; } 2>&1 | tee aclocal_log.log 
{ autoconf --verbose; autoconf; } 2>&1 | tee autoconf_log.log
{ autoheader --verbose; autoheader; } 2>&1 | tee autoheader_log.log
{ automake --add-missing --verbose; automake; } 2>&1 | tee automake_log.log
{ libtoolize --verbose; libtoolize; } 2>&1 | tee libtoolize_log.log

(오류)
libtoolize: Not copying 'm4/ltargz.m4', libltdl not used.
libtoolize: Not copying 'm4/ltdl.m4', libltdl not used.
(수정)
configure.ac 수정
# Initialize Automake
AM_INIT_AUTOMAKE([1.13 silent-rules]) #gl_INIT_PACKAGE보다 먼저 선언되면 안됨

# Additional configuration for libraries and tools
LT_INIT([win32-dll], [dlopen], [libltdl]) # 중복선언안됨. dlopen 모드를 활성화하여 libltdl 사용. win32-dll과 dlopen을 동시에 초기화
LT_LANG([C])
LT_LANG([C++])
LT_LANG([Windows Resource])

Makefile.am 수정
lib_LTLIBRARIES = libtextstyle.la #공유 라이브러리로 설정
libtextstyle_la_SOURCES = \ #라이브러리에 포함될 소스 파일 목록을 나열
lib/color.c \
lib/gl_array_list.c \
lib/term-ostream.c \
lib/ostream.c \
lib/concat-filename.c \
lib/xconcat-filename.c \
lib/xsize.c \
lib/error.c \
lib/full-write.c \
lib/term-style-control.c \
lib/fsync.c \
lib/xstrdup.c \
lib/xgethostname.c
libtextstyle_la_LDFLAGS = -shared -Wl,--out-implib=libtextstyle.dll.a -lltdl $(LDFLAGS) #DLL을 생성하기 위한 필수 플래그를 추가

(빌드)
{ aclocal --verbose; aclocal; } 2>&1 | tee aclocal_log.log &&
{ autoconf --verbose; autoconf; } 2>&1 | tee autoconf_log.log &&
{ autoheader --verbose; autoheader; } 2>&1 | tee autoheader_log.log &&
{ automake --add-missing --verbose; automake; } 2>&1 | tee automake_log.log &&
{ libtoolize --verbose; libtoolize; } 2>&1 | tee libtoolize_log.log

libltdl 설치 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Ss libltdl
clangarm64/mingw-w64-clang-aarch64-libltdl 2.4.7-2
    A system independent dlopen wrapper for GNU libtool
mingw32/mingw-w64-i686-libltdl 2.4.7-2
    A system independent dlopen wrapper for GNU libtool
mingw64/mingw-w64-x86_64-libltdl 2.4.7-2 [설치함]
    A system independent dlopen wrapper for GNU libtool
ucrt64/mingw-w64-ucrt-x86_64-libltdl 2.4.7-2
    A system independent dlopen wrapper for GNU libtool
clang32/mingw-w64-clang-i686-libltdl 2.4.7-2
    A system independent dlopen wrapper for GNU libtool
clang64/mingw-w64-clang-x86_64-libltdl 2.4.7-2
    A system independent dlopen wrapper for GNU libtool
msys/libltdl 2.4.7-4 [설치함]
    A system independent dlopen wrapper for GNU libtool

libltdl 설치 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Q | grep libltdl
libltdl 2.4.7-4
mingw-w64-x86_64-libltdl 2.4.7-2

파일 위치 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l /mingw64/include/ltdl.h
-rw-r--r-- 1 nayou nayou 5709  8월 27 20:52 /mingw64/include/ltdl.h

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l /mingw64/lib/libltdl.a
-rw-r--r-- 1 nayou nayou 199018  8월 27 20:52 /mingw64/lib/libltdl.a

m4 디렉토리에 ltargz.m4와 ltdl.m4 파일이 있는지 확인
"C:\msys64\usr\share\aclocal\ltargz.m4"
"C:\msys64\usr\share\aclocal\ltdl.m4"

환경변수확인(/mingw64/bin, /usr/share/aclocal이 포함)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# echo $PATH
/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/usr/local/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312

두 번 실행하라고 한 이유
필수 설정: 각 단계에서 필요로 하는 파일이나 설정이 없을 수 있습니다. 예를 들어, libtoolize, aclocal, autoconf, autoheader, automake 등의 명령어가 처음 실행할 때 필요한 파일을 생성하거나 업데이트하는데, 이 과정에서 종속성이나 다른 설정이 제대로 반영되지 않을 수 있습니다.
의존성 해결: 첫 번째 실행에서 발생한 경고나 오류가 다음 실행에 영향을 미칠 수 있기 때문에, 모든 명령어를 한 번 실행한 후에 그 결과를 바탕으로 다시 실행하여 필요한 설정이나 파일을 모두 생성하게끔 합니다.
반복적인 구성 과정: 특정 도구들이 서로 연관된 작업을 하기 때문에, 한 번의 실행만으로는 모든 설정이 완료되지 않을 수 있습니다. 따라서 이러한 도구들을 두 번 실행함으로써, 첫 번째 실행에서의 결과를 두 번째 실행에서 활용할 수 있습니다.
{ libtoolize --verbose; libtoolize; } 2>&1 | tee libtoolize_log.log
{ aclocal --verbose; aclocal; } 2>&1 | tee aclocal_log.log 
{ autoconf --verbose; autoconf; } 2>&1 | tee autoconf_log.log
{ autoheader --verbose; autoheader; } 2>&1 | tee autoheader_log.log
{ automake --add-missing --verbose; automake; } 2>&1 | tee automake_log.log
{ ./configure --enable-shared --enable-static; ./configure; } 2>&1 | tee configure_log.log

autoreconf는 libtoolize, aclocal, autoconf, autoheader, automake의 여러 단계를 자동으로 실행해주는 유틸리티

{ autoreconf -i --verbose; } 2>&1 | tee autoreconf_log.log &&
{ ./configure --enable-shared --enable-static; } 2>&1 | tee configure_log.log

autoreconf -i --verbose 2>&1 | tee autoreconf_log.log
autoreconf -i --verbose:

1. autoreconf는 자동으로 configure 스크립트 생성
-i : 필요한 파일을 자동 생성
--verbose : 실행 중에 더 많은 정보를 출력
2>&1: 표준 오류(에러 메시지)를 표준 출력으로 리다이렉트. 명령어의 오류 메시지가 
표준 출력과 동일한 스트림으로 전송. 오류 메시지도 tee로 전달.
| tee autoreconf_log.log:파이프(|)는 왼쪽 명령어의 출력을 오른쪽 명령어의 입력으로 전달
tee는 입력으로 받은 내용을 화면에 출력하는 동시에 autoreconf_log.log라는 파일에 기록
실시간으로 진행 상황을 확인하면서도 나중에 로그를 볼수있음.

2. ./configure --enable-shared --enable-static 2>&1 | tee configure_log.log
./configure --enable-shared --enable-static:소스 코드의 설정을 구성하는 스크립트
--enable-shared: 공유 라이브러리 생성을 활성화
--enable-static: 정적 라이브러리 생성을 활성화
2>&1 | tee configure_log.log: 오류 메시지를 표준 출력으로 리다이렉트하고, 
tee를 사용하여 화면에 출력하면서 configure_log.log 파일에 기록.

(오류)
configure.ac:611: error: possibly undefined macro: AC_MSG_WARN
      If this token and others are legitimate, please use m4_pattern_allow.
      See the Autoconf documentation.
(수정)
configure.ac 수정
m4_pattern_allow([AC_MSG_WARN])

(오류)
./configure: line 34032: syntax error near unexpected token `[_GL_NOTHROW_GET_OSFHANDLE],'
./configure: line 34032: `  AC_DEFINE([_GL_NOTHROW_GET_OSFHANDLE], [1], [Define if _get_osfhandle is available])'
(수정)
AC_CHECK_FUNCS
(
 [
  _get_osfhandle
 ],
 [
  AC_DEFINE([_GL_NOTHROW_GET_OSFHANDLE], [1], [Define if _get_osfhandle is available])
 ],
...
빈칸,개행없이 수정
AC_CHECK_FUNCS([_get_osfhandle],
 [AC_DEFINE([_GL_NOTHROW_GET_OSFHANDLE], [1], [Define if _get_osfhandle is available])],
 [AC_DEFINE([_GL_NOTHROW_GET_OSFHANDLE], [0], [Define if _get_osfhandle is not available])
...
(오류)
./configure: line 38257: warning: here-document at line 34042 delimited by end-of-file (wanted `END')
./configure: line 38258: syntax error: unexpected end of file
(수정)
configure.ac 수정
AC_CHECK_FUNCS([_get_osfhandle],
 [AC_DEFINE([_GL_NOTHROW_GET_OSFHANDLE], [1], [Define if _get_osfhandle is available])],
 [AC_DEFINE([_GL_NOTHROW_GET_OSFHANDLE], [0], [Define if _get_osfhandle is not available])
  AC_MSG_WARN([_get_osfhandle not found. Defining _gl_nothrow_get_osfhandle as a no-op.])
	# Provide a fallback implementation
	AC_MSG_NOTICE([Providing a fallback implementation for _gl_nothrow_get_osfhandle])

	# Create the fallback code in conftest.c
	cat >> conftest.c <<END 
	#include <stdio.h>
	#include <stdlib.h>

	// Fallback implementation
	int _gl_nothrow_get_osfhandle(int fd) {
		fprintf(stderr, "Warning: _get_osfhandle is not available. Returning -1 as a fallback.\n");
		return -1; // Return -1 or any appropriate error code
	}
END
])

(오류)
autoreconf 경고
autoreconf: not using Gettext
autoreconf: not using Intltool
autoreconf: not using Gtkdoc
(수정)
해당 도구들이 시스템에 설치되어 있지 않거나, 필요하지 않다고 판단되어 사용되지 않음을 의미

[Gettext: 다양한 언어로 메시지를 번역하는 데 사용됨]
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Qs gettext
local/gettext 0.22.4-1
    GNU internationalization library
local/gettext-devel 0.22.4-1 (development)
    GNU Internationalization development utilities
local/libgettextpo 0.22.4-1 (libraries)
    GNU Internationalization runtime library
local/mingw-w64-x86_64-gettext-runtime 0.22.5-2
    GNU internationalization runtime library (mingw-w64)
local/mingw-w64-x86_64-gettext-tools 0.22.5-2
    GNU internationalization tools (mingw-w64)

[Intltool: 다국어 지원을 위한 도구]
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Qs intltool
local/intltool 0.51.0-3
    The internationalization tool collection

[Gtkdoc: GTK 및 Gnome 라이브러리에 대한 문서 생성을 지원]
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Qs gtk-doc
local/gtk-doc 1.34.0-1
    Documentation tool for public library API

GETTEXT, INTLTOOL, GTKDOC 설정확인
configure.ac 수정
AM_GNU_GETTEXT([external]) # GNU Gettext의 사용을 활성화
IT_PROG_INTLTOOL([0.50]) # intltool의 버전을 확인하고 필요한 경우 설치
GTK_DOC_CHECK([1.34])  # Gtkdoc 버전 요구 사항을 설정합니다.

autoconf, automake 버전확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# autoconf --version
autoconf (GNU Autoconf) 2.72
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+/Autoconf: GNU GPL version 3 or later
<https://gnu.org/licenses/gpl.html>, <https://gnu.org/licenses/exceptions.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David J. MacKenzie and Akim Demaille.

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# automake --version
automake (GNU automake) 1.16.5
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv2+: GNU GPL version 2 or later <https://gnu.org/licenses/gpl-2.0.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Tom Tromey <tromey@redhat.com>
       and Alexandre Duret-Lutz <adl@gnu.org>.

[gettext.pc 파일이 없음]
설치확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Qs gettext

local/gettext 0.22.4-1
    GNU internationalization library
local/gettext-devel 0.22.4-1 (development)
    GNU Internationalization development utilities
local/libgettextpo 0.22.4-1 (libraries)
    GNU Internationalization runtime library
local/mingw-w64-x86_64-gettext-runtime 0.22.5-2
    GNU internationalization runtime library (mingw-w64)
local/mingw-w64-x86_64-gettext-tools 0.22.5-2
    GNU internationalization tools (mingw-w64)

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Ql mingw-w64-x86_64-gettext-runtime
=> 없음

패키지 데이터베이스 업데이트
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Sy
:: 꾸러미 데이터베이스 동기화 중...
 clangarm64                     420.1 KiB  26.0 KiB/s 00:16 [###############################] 100%
 mingw32                        209.7 KiB  19.4 KiB/s 00:11 [###############################] 100%
 mingw64                        448.1 KiB   122 KiB/s 00:04 [###############################] 100%
 ucrt64                         476.5 KiB  40.3 KiB/s 00:12 [###############################] 100%
 clang32                        104.9 KiB  21.2 KiB/s 00:05 [###############################] 100%
 clang64                        460.6 KiB  35.1 KiB/s 00:13 [###############################] 100%
 msys                           305.1 KiB   616 KiB/s 00:00 [###############################] 100%

(오류)
autoreconf: warning: AM_GNU_GETTEXT is used, but not AM_GNU_GETTEXT_VERSION or AM_GNU_GETTEXT_REQUIRE_VERSION
(수정)
AM_GNU_GETTEXT가 사용되었지만, AM_GNU_GETTEXT_VERSION 또는 AM_GNU_GETTEXT_REQUIRE_VERSION이 정의되지 않음
configure.ac 수정
AM_GNU_GETTEXT([external]) # GNU Gettext의 사용을 활성화
AM_GNU_GETTEXT_VERSION([0.22.4])
AM_GNU_GETTEXT([prefer-ngettext])

(오류)
cp: cannot create regular file 'po/Makefile.in.in': No such file or directory
intltoolize: cannot copy '/usr/share/intltool/Makefile.in.in' to 'po/Makefile.in.in'
autoreconf: error: intltoolize failed with exit status: 1
(수정)
intltoolize가 /usr/share/intltool/Makefile.in.in 파일을 po 디렉토리로 복사할 수 없다
intltoolize 실행 실패

po 디렉토리 생성
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# mkdir -p po

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -S mingw-w64-x86_64-intltool
오류: 대상이 없습니다: mingw-w64-x86_64-intltool

intltool 패키지가 mingw-w64 환경에서 사용 가능한지 확인(패키지 이름이 다른 형식일 수 있음)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Ss intltool
msys/intltool 0.51.0-3 [설치함]
    The internationalization tool collection

MSYS2 업데이트
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Sy
:: 꾸러미 데이터베이스 동기화 중...
 clangarm64는 최신입니다
 mingw32는 최신입니다
 mingw64는 최신입니다
 ucrt64는 최신입니다
 clang32는 최신입니다
 clang64는 최신입니다
 msys는 최신입니다

(오류)
autoreconf: export WARNINGS=
autoreconf: Entering directory '.'
autoreconf: running: autopoint
autopoint: *** AM_GNU_GETTEXT without 'external' argument is no longer supported in version 0.22.4
autopoint: *** Stop.
autoreconf: error: autopoint failed with exit status: 1
(수정)
AM_GNU_GETTEXT 매크로가 external 인수 없이 사용되었지만, 
버전 0.22.4에서는 더 이상 지원되지 않습니다. 이로 인해 autopoint가 실패

버전확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# autoconf --version
automake --version
gettext --version
autoconf: 2.72
automake: 1.16.5
gettext: 0.22.5

AM_GNU_GETTEXT 매크로 확인
configure.ac 수정
AM_GNU_GETTEXT([external])

intltool 설치 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Qs intltool
local/intltool 0.51.0-3
    The internationalization tool collection

po 디렉토리 및 파일 확인
POTFILES.in 파일은 gettext를 사용하여 소프트웨어 프로젝트에서 번역할 문자열을 추출하는 데 필요한 파일 목록을 지정합니다. 
주로 .c 파일에 포함된 번역 대상 문자열을 수집하기 위해 사용
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l po
합계 8
-rw-r--r-- 1 nayou nayou 7150 10월  1 19:05 Makefile.in.in
po 디렉토리에는 Makefile.in.in 파일이 존재하지만, po 디렉토리의 구조와 내용이 불완전
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# cd po

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle/po
# intltool-update --pot
intltool-update: POTFILES.in not found.

po/POTFILES.in 생성
lib/*.h
lib/*.c
tests/*.h
tests/*.c
examples/*.h
examples/*.c
adhoc-tests/*.h
adhoc-tests/*.c

#lib/bitset/*.h
#lib/bitset/*.c
#gnulib-local/lib/*.h
#gnulib-local/lib/*.c
#*.h
#*.c

intltool-update --pot 명령을 실행하여 .pot 파일이 잘 생성되는지 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle/po
# intltool-update --pot

(오류)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle/po
# intltool-update --pot
C:\msys64\mingw64\bin\xgettext.exe: error while opening "../lib/*.h" for reading: Invalid argument
ERROR: xgettext failed to generate PO template file. Please consult
       error message above if there is any.

(수정)
지정한 패턴이 유효하지 않다는 것을 의미
xgettext는 와일드카드(*)를 지원하지 않기 때문에 파일 경로에 이러한 패턴을 사용할 수 없음
파일에 와일드카드 대신 실제 파일 경로를 나열
POTFILES.in에 자동으로 추가하기 위해서는 다음과 같은 find 명령어를 사용

po/POTFILES.in 빈파일로만듬
주요 코드 디렉토리에서 .c 파일만을 선택하여 자동으로 POTFILES.in에 기록하는 간단한 방법입니다. 
.h 파일은 번역과 관련이 없으므로 이 검색에서는 제외
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find lib -name '*.c' > po/POTFILES.in

(결과) 너무많아 임의로 나머지 삭제
lib/abort-debug.c
lib/accept.c
lib/accept4.c
lib/access.c
lib/acl-errno-valid.c
lib/acl-internal.c
lib/acl_entries.c
lib/acosf.c
lib/acosl.c
lib/af_alg.c

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# cd po

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle/po
# intltool-update --pot

POTFILES.in 생성완료
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle/po
# ls
Makefile.in.in  POTFILES.in

po 디렉토리를 SUBDIRS에 추가
Makefile.am 수정
# The list of subdirectories containing Makefiles.
SUBDIRS = po lib tests adhoc-tests doc

(빌드)
{ autoreconf -i --verbose; } 2>&1 | tee autoreconf_log.log &&
{ ./configure --enable-shared --enable-static; } 2>&1 | tee configure_log.log

(오류)
autoreconf: export WARNINGS=
autoreconf: Entering directory '.'
autoreconf: running: autopoint
autopoint: *** AM_GNU_GETTEXT without 'external' argument is no longer supported in version 0.22.4
autopoint: *** Stop.
autoreconf: error: autopoint failed with exit status: 1

(수정)
configure.ac 수정
AC_INIT([libtextstyle], [1.0], [bug-libtextstyle@example.com])
AM_GNU_GETTEXT([external]) # GNU Gettext의 사용을 활성화, AC_INIT 바로 아래에 위치

버전확인
autoconf: 2.72
automake: 1.16.5
gettext: 0.22.5

autopoint 도구 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# which autopoint
/mingw64/bin/autopoint

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# git submodule update --init --recursive

nayou@kimnayooung MINGW64 /c/gnulib
# git submodule update --init --recursive

(오류)
autopoint: *** AM_GNU_GETTEXT without 'external' argument is no longer supported in version 0.22.4
autopoint: *** Stop.
autoreconf: error: autopoint failed with exit status: 1
(수정)
gettext 버전 0.22.4부터는 AM_GNU_GETTEXT를 호출할 때 반드시 'external' 인자를 포함해야 한다.
그렇지 않으면 이 매크로가 제대로 작동하지 않으며, 그 결과로 autopoint가 실패함
configure.ac 수정
AM_GNU_GETTEXT([external]) # GNU Gettext의 사용을 활성화, AC_INIT 바로 아래에 위치
AM_GNU_GETTEXT_VERSION([0.22.4])
#AM_GNU_GETTEXT([prefer-ngettext]) <= 주석처리

(오류)
autopoint: File build-aux/config.rpath has been locally modified.
autopoint: File m4/build-to-host.m4 has been locally modified.
autopoint: File m4/gettext.m4 has been locally modified.
autopoint: File m4/host-cpu-c-abi.m4 has been locally modified.
autopoint: File m4/iconv.m4 has been locally modified.
autopoint: File m4/intlmacosx.m4 has been locally modified.
autopoint: File m4/lib-ld.m4 has been locally modified.
autopoint: File m4/lib-link.m4 has been locally modified.
autopoint: File m4/lib-prefix.m4 has been locally modified.
autopoint: File m4/nls.m4 has been locally modified.
autopoint: File m4/po.m4 has been locally modified.
autopoint: File m4/progtest.m4 has been locally modified.
autopoint: File po/Makefile.in.in has been locally modified.
autopoint: *** Some files have been locally modified. Not overwriting them because --force has not been specified. For your convenience, you find the local modifications in the file '/tmp/ar7Gt9ZV/gtFlJ9Y5/autopoint.diff'.
autopoint: *** Stop.
autoreconf: error: autopoint failed with exit status: 1
(수정)
로컬에서 수정된 파일을 감지했으며, --force 옵션을 지정하지 않았기 때문에 덮어쓰지 않음
백업
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# mkdir -p backup_autopoint/build-aux backup_autopoint/m4 backup_autopoint/po

cp build-aux/config.rpath backup_autopoint/build-aux/
cp m4/build-to-host.m4 backup_autopoint/m4/
cp m4/gettext.m4 backup_autopoint/m4/
cp m4/host-cpu-c-abi.m4 backup_autopoint/m4/
cp m4/iconv.m4 backup_autopoint/m4/
cp m4/intlmacosx.m4 backup_autopoint/m4/
cp m4/lib-ld.m4 backup_autopoint/m4/
cp m4/lib-link.m4 backup_autopoint/m4/
cp m4/lib-prefix.m4 backup_autopoint/m4/
cp m4/nls.m4 backup_autopoint/m4/
cp m4/po.m4 backup_autopoint/m4/
cp m4/progtest.m4 backup_autopoint/m4/
cp po/Makefile.in.in backup_autopoint/po/

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l backup_autopoint
합계 4
drwxr-xr-x 1 nayou nayou 0 10월  2 06:59 build-aux
drwxr-xr-x 1 nayou nayou 0 10월  2 06:59 m4
drwxr-xr-x 1 nayou nayou 0 10월  2 06:59 po

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l backup_autopoint/m4
합계 144
-rw-r--r-- 1 nayou nayou  3237 10월  2 06:59 build-to-host.m4
-rw-r--r-- 1 nayou nayou 15489 10월  2 06:59 gettext.m4
-rw-r--r-- 1 nayou nayou 17140 10월  2 06:59 host-cpu-c-abi.m4
-rw-r--r-- 1 nayou nayou 10998 10월  2 06:59 iconv.m4
-rw-r--r-- 1 nayou nayou  3506 10월  2 06:59 intlmacosx.m4
-rw-r--r-- 1 nayou nayou  5386 10월  2 06:59 lib-ld.m4
-rw-r--r-- 1 nayou nayou 35742 10월  2 06:59 lib-link.m4
-rw-r--r-- 1 nayou nayou 12528 10월  2 06:59 lib-prefix.m4
-rw-r--r-- 1 nayou nayou  1236 10월  2 06:59 nls.m4
-rw-r--r-- 1 nayou nayou 19021 10월  2 06:59 po.m4
-rw-r--r-- 1 nayou nayou  3091 10월  2 06:59 progtest.m4

(빌드)
{ autopoint --force; } 2>&1 | tee autopoint_log.log && 
{ autoreconf -i --verbose; } 2>&1 | tee autoreconf_log.log && 
{ ./configure --enable-shared --enable-static; } 2>&1 | tee configure_log.log
Copying file ABOUT-NLS
Copying file build-aux/config.rpath
Copying file m4/build-to-host.m4
Copying file m4/gettext.m4
Copying file m4/host-cpu-c-abi.m4
Copying file m4/iconv.m4
Copying file m4/intlmacosx.m4
Copying file m4/lib-ld.m4
Copying file m4/lib-link.m4
Copying file m4/lib-prefix.m4
Copying file m4/nls.m4
Copying file m4/po.m4
Copying file m4/progtest.m4
Copying file po/Makefile.in.in
Copying file po/Makevars.template
Copying file po/Rules-quot
Copying file po/boldquot.sed
Copying file po/en@boldquot.header
Copying file po/en@quot.header
Copying file po/insert-header.sin
Copying file po/quot.sed
Copying file po/remove-potcdate.sin

(오류)
intltoolize: 'po/Makefile.in.in' exists: use '--force' to overwrite
intltoolize: 'po/Makefile.in.in' is out of date: use '--force' to overwrite
autoreconf: error: intltoolize failed with exit status: 1
(수정)
삭제 및 백업 po/Makefile.in.in_back
(빌드 명령어 수정)
1. autopoint --force
--force: 이 옵션은 autopoint가 수정된 파일을 덮어쓰도록 강제한다.
기본적으로 수정된 파일이 있으면 경고를 표시하고 작업을 중단.
--force를 사용하면 이 경고를 무시하고 파일을 덮어쓴다.
2. intltoolize --copy --force
--copy: 이 옵션은 intltoolize가 필요한 파일을 복사하도록 지시.
복사하는 이유는 원본 파일을 보존하고, 새로운 파일을 생성하여 충돌을 피하기 위해서
--force: 이 옵션은 intltoolize가 기존의 파일을 덮어쓰도록 강제. 수정된 파일이 있을 경우 경고 없이 덮어씀.
3. rm po/Makefile.in.in
rm: 이 명령은 파일을 삭제, 여기서는 po/Makefile.in.in 파일을 삭제하여, 
이후의 autoreconf 실행 시 충돌 문제를 피하고 새롭게 생성된 파일을 반영할 수 있도록 한다.
4. autoreconf -i --verbose
-i: 이 옵션은 필요한 파일들을 초기화하고 생성하는 데 사용.
autoreconf가 configure.ac 및 Makefile.am 파일을 읽고 필요한 파일들을 자동으로 생성
--verbose: 이 옵션은 autoreconf의 실행 과정을 상세히 출력하도록 함
5. ./configure --enable-shared --enable-static
--enable-shared: 이 옵션은 공유 라이브러리 생성을 활성화.
이는 프로그램이 여러 프로세스에서 메모리를 공유할 수 있도록 함
--enable-static: 이 옵션은 정적 라이브러리 생성을 활성화. 
정적 라이브러리는 프로그램이 실행될 때 프로그램과 함께 결합되어 독립적으로 실행될 수 있다.
6. aclocal -I m4 -I gnulib-m4 -I /mingw64/share/aclocal
m4, gnulib-m4, 그리고 /mingw64/share/aclocal 디렉토리에서 매크로 파일을 찾는다.
주어진 매크로 경로에서 매크로를 수집하여 aclocal.m4 파일을 생성

(빌드명령어 수정)
{ autopoint --force; } 2>&1 | tee autopoint_log.log && \
{ rm po/Makefile.in.in; } && \
{ aclocal -I m4 -I gnulib-m4 -I /mingw64/share/aclocal; } 2>&1 | tee aclocal_log.log && \
{ libtoolize --copy --force --verbose; } 2>&1 | tee libtoolize_log.log && \
{ autoconf --verbose; } 2>&1 | tee autoconf_log.log && \
{ autoheader --verbose; } 2>&1 | tee autoheader_log.log && \
{ automake --add-missing --force --verbose; } 2>&1 | tee automake_log.log && \
{ ./configure --enable-shared --enable-static; } 2>&1 | tee configure_log.log


(오류)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# libtoolize --copy --force --verbose;
libtoolize: Not copying 'm4/ltargz.m4', libltdl not used.
libtoolize: Not copying 'm4/ltdl.m4', libltdl not used.
(수정)
libltdl 설치확인
C:\libidn2\libtool-2.4.6\libltdl
"C:\libidn2\libtool-2.4.6\libltdl\ltdl.h"
"C:\libidn2\libtool-2.4.6\libltdl\ltdl.c"

nayou@kimnayooung MINGW64 /c/libidn2/libtool-2.4.6/libltdl
# ./configure

nayou@kimnayooung MINGW64 /c/libidn2/libtool-2.4.6/libltdl
# make
  GEN      libltdl/lt__argz.h
make  all-am
make[1]: 디렉터리 '/c/libidn2/libtool-2.4.6/libltdl' 들어감
  CC       loaders/loadlibrary.lo
  CCLD     loadlibrary.la
C:\msys64\mingw64\bin\ar.exe: `u' modifier ignored since `D' is the default (see `U')
  CC       loaders/libltdlc_la-preopen.lo
  CC       libltdlc_la-lt__alloc.lo
  CC       libltdlc_la-lt_dlloader.lo
  CC       libltdlc_la-lt_error.lo
  CC       libltdlc_la-ltdl.lo
  CC       libltdlc_la-slist.lo
  CC       lt__argz.lo
  CC       lt__strl.lo
  CCLD     libltdlc.la
C:\msys64\mingw64\bin\ar.exe: `u' modifier ignored since `D' is the default (see `U')
make[1]: 디렉터리 '/c/libidn2/libtool-2.4.6/libltdl' 나감

(오류)
ltdl.o가 생성이 안됌
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/libtool-2.4.6/libltdl
# ls  | grep -E 'lt__alloc.c|lt__argz.c|lt_dlloader.c|lt_error.c|ltdl.c|slist.c'
lt__alloc.c
lt__argz.c
lt_dlloader.c
lt_error.c
ltdl.c
slist.c

Makefile.am에서 ltdl.o 설정 확인
libtextstyle_la_SOURCES = \ #라이브러리에 포함될 소스 파일 목록을 나열
lib/color.c \
lib/gl_array_list.c \
lib/term-ostream.c \
lib/ostream.c \
lib/concat-filename.c \
lib/xconcat-filename.c \
lib/xsize.c \
lib/error.c \
lib/full-write.c \
lib/term-style-control.c \
lib/fsync.c \
lib/xstrdup.c \
lib/xgethostname.c \
libltdl/lt__alloc.c \
libltdl/lt__argz.c \
libltdl/lt_dlloader.c \
libltdl/lt_error.c \
libltdl/ltdl.c \
libltdl/slist.c

libtextstyle_la_LIBS = -lncurses $(GNULIB_LIBS) # libtextstyle 라이브러리에 링크할 라이브러리들
libtextstyle_la_LDFLAGS = -shared -Wl,--out-implib=libtextstyle.dll.a -lltdl #DLL을 생성하기 위한 필수 플래그를 추가

configure.ac 수정 ( [NCURSES], [ncurses] 체크)
PKG_CHECK_MODULES([ITL], [libintl], [NCURSES], [ncurses], [have_ncurses=yes], [have_ncurses=no])
LT_INIT # ltdl 모듈 초기화

libltdl 관련 파일을 프로젝트에 복사(새로운 파일로 덮어쓰기)
nayou@kimnayooung MINGW64 /c
# cp /c/libidn2/libtool-2.4.6/libltdl/*.* /c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl 
덮어쓰기를 방지하고 싶다면: -n
덮어쓰기 전에 확인하고 싶다면: -i
(참고 폴더생성복사)
mkdir -p /c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl && cp /c/libidn2/libtool-2.4.6/libltdl/*.* /c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl
rsync -a /c/libidn2/libtool-2.4.6/libltdl/*.* /c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl

(빌드)
{ autopoint --force; } 2>&1 | tee autopoint_log.log && \
{ rm -f po/Makefile.in.in; } && \
{ aclocal -I m4 -I gnulib-m4 -I /mingw64/share/aclocal; } 2>&1 | tee aclocal_log.log && \
{ libtoolize --copy --force --verbose; } 2>&1 | tee libtoolize_log.log && \
{ autoconf --verbose; } 2>&1 | tee autoconf_log.log && \
{ autoheader --verbose; } 2>&1 | tee autoheader_log.log && \
{ automake --add-missing --force --verbose; } 2>&1 | tee automake_log.log && \
{ ./configure --enable-shared --enable-static; } 2>&1 | tee configure_log.log

(오류)
libtoolize: Not copying 'm4/ltargz.m4', libltdl not used.
libtoolize: Not copying 'm4/ltdl.m4', libltdl not used.
(수정)
#libltdlc 라이브러리 설정
lib_LTLIBRARIES = ${lib_LTLIBRARIES} libltdlc.la
libltdlc_la_SOURCES = \
  libltdl/lt__alloc.c \
  libltdl/lt__argz.c \
  libltdl/lt_dlloader.c \
  libltdl/lt_error.c \
  libltdl/ltdl.c \
  libltdl/slist.c
libltdlc_la_LIBS = $(LIBS_la_)
libltdlc_la_LIBADD = $(LIBADD_la_)
libltdlc_la_LDFLAGS = $(LDFLAGS_la_)

파일존재확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l m4/ltargz.m4 m4/ltdl.m4
ls: cannot access 'm4/ltargz.m4': No such file or directory
ls: cannot access 'm4/ltdl.m4': No such file or directory

autopoint --force && rm -f po/Makefile.in.in && ls -l m4/ltargz.m4 m4/ltdl.m4;
aclocal -I m4 -I gnulib-m4 -I /mingw64/share/aclocal && ls -l m4/ltargz.m4 m4/ltdl.m4;

libtoolize --copy --force --verbose && ls -l m4/ltargz.m4 m4/ltdl.m4;

configure.ac 수정
LT_WITH_LTDL #LT_INIT바로아래설정
LT_CONFIG_LTDL_DIR([libltdl])

Makefile.am 수정
#libltdlc 라이브러리 설정
lib_LTLIBRARIES = ${lib_LTLIBRARIES} libltdlc.la
libltdlc_la_SOURCES = \
  libltdl/lt__alloc.c \
  libltdl/lt__argz.c \
  libltdl/lt_dlloader.c \
  libltdl/lt_error.c \
  libltdl/ltdl.c \
  libltdl/slist.c
libltdlc_la_LIBS = -lncurses $(GNULIB_LIBS)
libltdlc_la_LIBADD = -lltdl
libltdlc_la_LDFLAGS = -shared -Wl,--out-implib=libltdlc.dll.a

(빌드)
{ autopoint --force; } 2>&1 | tee autopoint_log.log && \
{ rm -f po/Makefile.in.in; } && \
{ aclocal -I m4 -I gnulib-m4 -I /mingw64/share/aclocal; } 2>&1 | tee aclocal_log.log && \
{ libtoolize --copy --force --verbose; } 2>&1 | tee libtoolize_log.log && \
{ autoconf --verbose; } 2>&1 | tee autoconf_log.log

(오류)
autom4te: up_to_date (autom4te.cache/traces.2): outdated: aclocal.m4
(수정)
aclocal.m4 파일이 최신 상태가 아님. aclocal이 실행되어야 함
aclocal.m4를 업데이트
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# aclocal

(오류)
autom4te: up_to_date (autom4te.cache/traces.2): outdated
(수정)
configure.ac 파일이 최신 상태가 아님
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# libtoolize --force

(오류)
Makefile.am:62: warning: lib_LTLIBRARIES multiply defined in condition TRUE ...
Makefile.am:35: ... 'lib_LTLIBRARIES' previously defined here
Makefile.am:62: error: variable 'lib_LTLIBRARIES' recursively defined
(수정)
Makefile.am 수정
lib_LTLIBRARIES가 여러 번 정의되었습니다. 이로 인해 재귀적으로 정의된 오류가 발생
# 공유 라이브러리로 설정
lib_LTLIBRARIES = libtextstyle.la libltdlc.la
#lib_LTLIBRARIES = libtextstyle.la
#lib_LTLIBRARIES = ${lib_LTLIBRARIES} libltdlc.la

(오류)
Makefile.am:22: warning: 'CFLAGS' is a user variable, you should not override it;
Makefile.am:22: use 'AM_CFLAGS' instead
(수정)
CFLAGS는 사용자가 정의한 변수로, 직접 덮어쓰지 말고 AM_CFLAGS를 사용
#CFLAGS = -Wall -Wextra -Wpedantic -fdiagnostics-show-option # 모든 경고와 추가적인 경고를 활성화
AM_CFLAGS = -Wall -Wextra -Wpedantic -fdiagnostics-show-option # 모든 경고와 추가적인 경고를 활성화

(오류)
Makefile.am:65: warning: lib_LTLIBRARIES multiply defined in condition TRUE ...
Makefile.am:36: ... 'lib_LTLIBRARIES' previously defined here
Makefile.am:65: error: variable 'lib_LTLIBRARIES' recursively defined
Makefile.am:39: warning: variable 'libtextstyle_la_SOURCES' is defined but no program or
Makefile.am:39: library has 'libtextstyle_la' as canonical name (possible typo)
Makefile.am:58: warning: variable 'libtextstyle_la_LIBADD' is defined but no program or
Makefile.am:58: library has 'libtextstyle_la' as canonical name (possible typo)
Makefile.am:60: warning: variable 'libtextstyle_la_LDFLAGS' is defined but no program or
Makefile.am:60: library has 'libtextstyle_la' as canonical name (possible typo)
autoreconf: error: automake failed with exit status: 1

(빌드)
{ autopoint --force; } 2>&1 | tee autopoint_log.log && \
{ rm -f po/Makefile.in.in; } && \
{ aclocal -I m4 -I gnulib-m4 -I /mingw64/share/aclocal; } 2>&1 | tee aclocal_log.log && \
{ libtoolize --copy --force --verbose; } 2>&1 | tee libtoolize_log.log && \
{ autoconf --verbose; } 2>&1 | tee autoconf_log.log

(오류)
autom4te: up_to_date (autom4te.cache/traces.2): outdated: m4/libtool.m4
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l ./m4/libtool.m4
-rw-r--r-- 1 nayou nayou 307384 10월  2 14:09 ./m4/libtool.m4

libtool.m4 파일 업데이트(m4 디렉토리의 libtool.m4 파일을 최신 상태로 덮어씌움)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# libtoolize --copy --force --verbose;

autom4te.cache 폴더 삭제
rm -rf autom4te.cache

autoreconf 다시 실행
autoreconf -ivf

(오류)
libtoolize: Remember to add 'LTDL_INIT' to configure.ac.
libtoolize: Consider adding 'AC_CONFIG_MACRO_DIRS([../m4])' to configure.ac,
libtoolize: and rerunning libtoolize and aclocal.

(수정)
configure.ac 수정
AC_INIT([libtextstyle], [1.0], [bug-libtextstyle@example.com])
LTDL_INIT #라이브러리 동적 로딩을 위한 초기화
AC_CONFIG_MACRO_DIRS([m4]) 

(빌드명령어)
autopoint --force :  gettext 관련 파일을 자동으로 생성. po/Makefile.in.in: gettext에서 사용할 메시지 파일의 템플릿. 추가 .po 파일과 관련된 기타 파일을 생성
aclocal -I m4 -I gnulib-m4 -I /mingw64/share/aclocal -v : m4 매크로 파일을 찾고 aclocal.m4 파일을 생성. aclocal.m4: configure.ac에서 사용하는 매크로 정의를 포함
libtoolize --copy --force --verbose : libtool과 관련된 파일을 준비. Makefile.am, Makefile.in: 자동화된 빌드를 위한 메이크파일. ltmain.sh, compile, config.guess, config.sub, install-sh, missing: libtool의 지원 파일들
autoconf -v : configure 스크립트를 생성
autoheader -v : config.h.in 파일을 생성. #define과 관련된 변수를 정의하는 템플릿 파일
automake --add-missing --copy --verbose : Makefile.in 파일을 생성하고, 필요한 파일을 추가. Makefile.in: 최종 Makefile 생성을 위한 템플릿.
./configure --enable-debug : 프트웨어의 컴파일 및 설치를 위한 설정을 구성. config.status: 설정 후의 상태를 기록하는 스크립트. config.h: configure 스크립트에 의해 생성된 C/C++ 헤더 파일
make -B VERBOSE=1  : 소스 코드를 컴파일. 바이너리 실행 파일과 라이브러리. Makefile에서 정의된 대로 생성된 출력 파일들.
-j4 : 병렬로 빌드를 수행하여 여러 작업을 동시에 실행. N은 병렬로 실행할 작업의 수를 지정. N 값을 지정하지 않으면 가능한 모든 CPU 코어를 사용
-k : 하나의 작업에서 오류가 발생해도 다른 작업을 계속 진행
-i : 빌드 중에 발생한 오류를 무시하고 작업을 계속 진행
-n : 실제로 빌드를 실행하지 않고, 어떤 명령어가 실행될지 미리 출력
-s : make 명령어가 실행 중인 명령어를 출력하지 않음(출력량 줄일경우)
-r : C 소스 파일을 컴파일하는 기본 규칙을 무시하고 수동으로 제어할 때 유용. 기본적으로 제공되는 내장 규칙을 사용하지 않도록 함
-B : 파일의 타임스탬프에 관계없이 항상 모든 대상(target)을 다시 빌드
-C : 지정한 디렉토리로 이동하여 빌드를 실행
-f : 사용할 Makefile을 지정
VERBOSE=1 : 자세한 컴파일 명령을 보고 싶을 때 사용
make install : 컴파일된 프로그램, 라이브러리, 문서 등을 지정된 디렉토리에 설치. /usr/local/bin 에 복사. 
동적 라이브러리(예: .so 파일)나 정적 라이브러리(예: .a 파일)가 시스템의 라이브러리 경로(예: /usr/local/lib)에 설치. 
C/C++ 헤더 파일이 포함된 디렉토리(예: /usr/local/include)에 복사. README 파일 등이 /usr/local/share/doc와 같은 경로에 설치. 
./configure --prefix=/usr/local # 설치 경로를 지정 PREFIX(프로그램을 설치할 기본 경로), LIBDIR(라이브러리를 설치할 디렉토리), 
BINDIR(실행파일설치할 디렉토리), MANDIR(매뉴얼 페이지를 설치할 디렉토리), DATADIR(데이터 파일을 설치할 디렉토리)

(개별빌드)
autopoint --force &&  
aclocal -I m4 -I gnulib-m4 -I /mingw64/share/aclocal -v && 
libtoolize --copy --force --verbose && 
autoconf -v && 
autoheader -v && 
automake --add-missing --copy --verbose && 
./configure --enable-debug && 
make -B VERBOSE=1 && 
make install

(묶음빌드)
autoreconf -ivf  
./configure --enable-debug && 
make -B VERBOSE=1 && 
make install

(configure.ac/Makefile.am 수정 후 빌드)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# autopoint --force &&
aclocal -I m4 -I gnulib-m4 -I /mingw64/share/aclocal &&
libtoolize --copy --force --verbose &&
autoconf -v &&
autoheader -v &&
automake --add-missing --copy --verbose

(오류)
configure.ac:35: warning: AC_COMPILE_IFELSE was called before AC_USE_SYSTEM_EXTENSIONS
./lib/autoconf/specific.m4:541: AC_USE_SYSTEM_EXTENSIONS is expanded from...
configure.ac:35: the top level
(수정)
직/간접호출에 포함되어있는 AC_COMPILE_IFELSE가 AC_USE_SYSTEM_EXTENSIONS이 매크로보다 먼저나와 경고
AC_USE_SYSTEM_EXTENSIONS은 AC_INIT 다음에 위치시킬것
AC_INIT([libtextstyle], [1.0], [bug-libtextstyle@example.com])
# Enable system extensions before other checks
AC_USE_SYSTEM_EXTENSIONS # AC_INIT 보다 먼저 호출하면 안됨

(오류)
configure.ac:50: warning: LTDL_INIT was called before LT_INIT
m4/libtool.m4:62: LT_INIT is expanded from...
configure.ac:50: the top level
(수정)
LTDL_INIT이 LT_INIT보다 먼저 호출되었다는 경고
configure.ac 수정
LT_INIT
LTDL_INIT #라이브러리 동적 로딩을 위한 초기화, LT_INIT보다 먼저 선언되면 안됨

(오류)
configure.ac:52: warning: The macro 'LT_WITH_LTDL' is obsolete.
configure.ac:52: You should run autoupdate.
m4/ltdl.m4:355: LT_WITH_LTDL is expanded from...
configure.ac:52: the top level
(수정)
LT_WITH_LTDL 매크로는 더 이상 사용되지 않는 구식 매크로 이다.
이를 제거하거나 대체하라.
LT_WITH_LTDL를 사용하는 구문을 제거하고 autoupdate 명령을 실행하여 최신 형태로 업데이트된 configure.ac를 생성

configure.ac 수정
# LT_WITH_LTDL # 더이상 제공되지 않음

(오류)
configure.ac:53: warning: LTDL_INIT was called before LT_CONFIG_LTDL_DIR
m4/ltdl.m4:17: LT_CONFIG_LTDL_DIR is expanded from...
configure.ac:53: the top level
(수정)
LT_INIT
LT_CONFIG_LTDL_DIR([libltdl]) #libltdl의 경로를 설정
LTDL_INIT #라이브러리 동적 로딩을 위한 초기화, LT_INIT보다 먼저 선언되면 안됨

(오류)
autom4te: forbidden token : ^LIBOBJS$ => do not use LIBOBJS directly, use AC_LIBOBJ (see section 'AC_LIBOBJ vs LIBOBJS'
(수정)
LIBOBJS 토큰이 직접 사용되었다는 경고
LIBOBJS는 내부적으로 자동 생성된 오브젝트 파일 목록을 참조하는 데 사용되지만, 직접 사용하면 예기치 않은 결과를 초래할 수 있음
AC_LIBOBJ 매크로를 사용해야 함. AC_LIBOBJ는 Libtool이 오브젝트 파일을 올바르게 생성하고 관리하도록 도와줌
configure.ac, Makefile.am 확인 
LIBOBJS 사용안함

configure.ac 수정
# gl_LIBOBJS 설정
if test -n "$gl_LIBOBJS"; then
    AC_SUBST([GL_LIBOBJS], ["$gl_LIBOBJS"])
fi

# _LT_LIBOBJS 설정
if test -n "$_LT_LIBOBJS"; then
    AC_SUBST([LT_LIBOBJS], ["$_LT_LIBOBJS"])
fi

Makefile.am 수정
libtextstyle_la_LIBS = -lncurses $(GNULIB_LIBS) $(GL_LIBOBJS) $(LTDLIBS) $(LT_LIBOBJS) # libtextstyle 라이브러리에 링크할 라이브러리들
libltdlc_la_LIBS = -lncurses $(GNULIB_LIBS) $(GL_LIBOBJS) $(LTDLIBS) $(LT_LIBOBJS)

(오류)
/usr/bin/m4:aclocal.m4:1729: cannot open m4/ltdl.m4': No such file or directory
(수정)
파일위치확인
"C:\libidn2\gettext-0.22.5\libtextstyle\lib\ltdl\m4\ltdl.m4"
"C:\msys64\usr\share\aclocal\ltdl.m4"
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find /usr/share/aclocal -name ltdl.m4
/usr/share/aclocal/ltdl.m4
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l /usr/share/aclocal/ltdl.m4
-rw-r--r-- 1 nayou nayou 30069  7월  5 17:31 /usr/share/aclocal/ltdl.m4

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# notepad ~/.bashrc
export ACLOCAL_PATH="/c/msys64/usr/share/aclocal:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/m4"
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# source ~/.bashrc
configure.ac 수정
LT_INIT #Libtool을 초기화

(오류)
configure.ac:65: error: possibly undefined macro: _LT_LIBOBJS
      If this token and others are legitimate, please use m4_pattern_allow.
      See the Autoconf documentation.
(수정)
_LT_LIBOBJS 매크로가 정의되지 않았음을 나타냄
필요한 libtool 매크로가 제대로 포함되지 않았거나 libtool이 올바르게 초기화되지 않았을 때 발생
configure.ac 수정
LT_INIT([win32-dll], [dlopen], [libltdl]) # 중복선언안됨. dlopen 모드를 활성화하여 libltdl 사용. win32-dll과 dlopen을 동시에 초기화
m4_pattern_allow([_LT_LIBOBJS])

매크로 파일이 있는지 확인(m4 디렉터리에 libtool 매크로 파일이 있는지 확인)
libtool.m4, ltoptions.m4, ltsugar.m4, ltversion.m4
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l ./m4/libtool.m4 ./m4/ltoptions.m4 ./m4/ltsugar.m4 ./m4/ltversion.m4
-rw-r--r-- 1 nayou nayou 307384 10월  2 18:47 ./m4/libtool.m4
-rw-r--r-- 1 nayou nayou  14537 10월  2 18:47 ./m4/ltoptions.m4
-rw-r--r-- 1 nayou nayou   4395 10월  2 18:47 ./m4/ltsugar.m4
-rw-r--r-- 1 nayou nayou    714 10월  2 18:47 ./m4/ltversion.m4

(오류)
autom4te: forbidden token : ^LIBOBJS$ => do not use LIBOBJS directly, use AC_LIBOBJ (see section 'AC_LIBOBJ vs LIBOBJS'
(수정)
LIBOBJS를 사용한 부분을 찾아 AC_LIBOBJ로 변경하세요.
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'LIBOBJS' ./lib
./lib/ltdl/ChangeLog.old:1178:  (LTDL_SUBDIR_LIBOBJS): Remove now-obsolete conditional and
./lib/ltdl/ChangeLog.old:4894:  ltdl_LIBOBJS automake macro, instead of the global LIBOBJS
./lib/ltdl/ChangeLog.old:4901:  initialise ltdl_LIBOBJS and ltdl_LTLIBOBJS.
./lib/ltdl/ChangeLog.old:4902:  * libtoolize.m4sh (func_fixup_Makefile): Substitute ltdl_LIBOBJS
./lib/ltdl/ChangeLog.old:4903:  and ltdl_LTLIBOBJS for LIBOBJS and LTLIBOBJS during copying
./lib/ltdl/ChangeLog.old:8055:  (SUBDIR_LIBOBJS): Renamed from this...
....

LIBOBJS를 사용하여 객체 파일을 지정하는 대신 AC_LIBOBJ를 사용하여 객체 파일을 설정하는 방법
configure.ac 수정
AC_CONFIG_HEADERS([config.h]) # config.h.in => config.h 생성

AC_LIBOBJ([color])
AC_LIBOBJ([gl_array_list])
AC_LIBOBJ([term-ostream])
AC_LIBOBJ([ostream])
AC_LIBOBJ([concat-filename])
AC_LIBOBJ([xconcat-filename])
AC_LIBOBJ([xsize])
AC_LIBOBJ([error])
AC_LIBOBJ([full-write])
AC_LIBOBJ([term-style-control])
AC_LIBOBJ([fsync])
AC_LIBOBJ([xstrdup])
AC_LIBOBJ([xgethostname])
AC_LIBOBJ([lt__alloc]) 
AC_LIBOBJ([lt__argz])
AC_LIBOBJ([lt_dlloader])
AC_LIBOBJ([lt_error])
AC_LIBOBJ([ltdl])
AC_LIBOBJ([slist])

AC_OUTPUT
Makefile.am 수정
# 공유 라이브러리로 설정
lib_LTLIBRARIES = libtextstyle.la libltdlc.la

# libtextstyle 라이브러리 설정
libtextstyle_la_SOURCES = \ #라이브러리에 포함될 소스 파일 목록을 나열
	lib/color.c \
	lib/gl_array_list.c \
	lib/term-ostream.c \
	lib/ostream.c \
	lib/concat-filename.c \
	lib/xconcat-filename.c \
    lib/xsize.c \
	lib/error.c \
	lib/full-write.c \
	lib/term-style-control.c \
	lib/fsync.c \
	lib/xstrdup.c \
	lib/xgethostname.c

# libtextstyle 라이브러리에 사용할 객체 파일을 지정
#libtextstyle_la_LDADD = \
#    color$(EXEEXT) \
#    gl_array_list$(EXEEXT) \
#    term-ostream$(EXEEXT) \
#    ostream$(EXEEXT) \
#    concat-filename$(EXEEXT) \
#    xconcat-filename$(EXEEXT) \
#    xsize$(EXEEXT) \
#    error$(EXEEXT) \
#    full-write$(EXEEXT) \
#    term-style-control$(EXEEXT) \
#    fsync$(EXEEXT) \
#    xstrdup$(EXEEXT) \
#    xgethostname$(EXEEXT)

#bin_PROGRAMS = libtextstyle_la 실행가능한 프로그램인 경우
libtextstyle_la_LIBS = -lncurses $(GNULIB_LIBS) $(GL_LIBOBJS) $(LTDLIBS) $(LT_LIBOBJS) # libtextstyle 라이브러리에 링크할 라이브러리들
#libtextstyle_la_SOURCES = libtextstyle.o
#libtextstyle_la_LDADD = libtextstyle.la -L/c/libidn2/gettext-0.22.5/gettext-runtime/intl/.libs -lintl
libtextstyle_la_LIBADD = $(NCURSES_LIBS) #ncurses 라이브러리를 링크하기 위해 $(NCURSES_LIBS)를 사용# 설치할 라이브러리의 위치
#libtextstyle_la_LDFLAGS = -shared -Wl,--out-implib=libtextstyle.dll.a -lltdl $(LDFLAGS) #DLL을 생성하기 위한 필수 플래그를 추가
libtextstyle_la_LDFLAGS = -shared -Wl,--out-implib=libtextstyle.dll.a -lltdl #DLL을 생성하기 위한 필수 플래그를 추가
# -shared는 공유 라이브러리를 생성하는 옵션이며, 
# -Wl, --out-implib=libtextstyle.dll.a는 DLL의 import 라이브러리를 생성

#libltdlc 라이브러리 설정
libltdlc_la_SOURCES = \
  libltdl/lt__alloc.c \
  libltdl/lt__argz.c \
  libltdl/lt_dlloader.c \
  libltdl/lt_error.c \
  libltdl/ltdl.c \
  libltdl/slist.c

# libltdlc 라이브러리에 사용할 객체 파일을 지정
#libltdlc_la_LDADD = \
#    lt__alloc$(EXEEXT) \
#    lt__argz$(EXEEXT) \
#    lt_dlloader$(EXEEXT) \
#    lt_error$(EXEEXT) \
#    ltdl$(EXEEXT) \
#    slist$(EXEEXT)
	
libltdlc_la_LIBS = -lncurses $(GNULIB_LIBS) $(GL_LIBOBJS) $(LTDLIBS) $(LT_LIBOBJS)
libltdlc_la_LIBADD = -lltdl
libltdlc_la_LDFLAGS = -shared -Wl,--out-implib=libltdlc.dll.a

(오류)
libtoolize: Not copying 'm4/ltargz.m4', libltdl not used.
libtoolize: Not copying 'm4/ltdl.m4', libltdl not used.
(수정)
configure.ac 수정
# LT_INIT 삭제
LT_INIT([win32-dll], [dlopen], [libltdl]) # 중복선언안됨. dlopen 모드를 활성화하여 libltdl 사용. win32-dll과 dlopen을 동시에 초기화
LT_WITH_LTDL([libltdl])
LT_CONFIG_LTDL_DIR([libltdl]) #libltdl의 경로를 설정

(빌드)
libtoolize가 자동으로 m4/ltargz.m4 및 m4/ltdl.m4 파일을 복사해야 함
libtoolize --force --copy --install --verbose

자동 생성 캐시 정리 추가
{ autopoint --force; } 2>&1 | tee autopoint_log.log && { rm -f po/Makefile.in.in; } && \
{ rm -rf autom4te.cache; } && \
{ aclocal -I m4 -I gnulib-m4 -I /mingw64/share/aclocal; } 2>&1 | tee aclocal_log.log && \
{ libtoolize --copy --force --verbose; } 2>&1 | tee libtoolize_log.log && \
{ autoconf --verbose; } 2>&1 | tee autoconf_log.log

(오류)
/usr/bin/m4:aclocal.m4:1729: cannot open `m4/ltdl.m4': No such file or directory
(수정)
autom4te가 aclocal.m4 파일의 1729번째 줄에서 m4/ltdl.m4 파일을 찾을 수 없음 경고

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# which aclocal
/usr/bin/aclocal
=>m4/ltdl.m4 없음

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find / -name aclocal.m4 2>/dev/null
/home/nayou/_bazel_nayou/4yp365mj/external/protobuf~/aclocal.m4
/home/nayou/_bazel_nayou/4yp365mj/external/protobuf~/third_party/googletest/aclocal.m4
/home/nayou/_bazel_nayou/4yp365mj/external/protobuf~/third_party/googletest/googlemock/aclocal.m4
/home/nayou/_bazel_nayou/4yp365mj/external/protobuf~/third_party/googletest/googletest/aclocal.m4
/mingw64/share/libtool/aclocal.m4
/usr/share/libtool/aclocal.m4
=> /mingw64/share/libtool/aclocal.m4
=> /usr/share/libtool/aclocal.m4

aclocal.m4
"C:\libidn2\gettext-0.22.5\libtextstyle\lib\ltdl\aclocal.m4"
"C:\libidn2\gettext-0.22.5\libtextstyle\libltdl\aclocal.m4"
"C:\libidn2\gettext-0.22.5\libtextstyle\aclocal.m4"

m4/ltdl.m4
"C:\libidn2\gettext-0.22.5\libtextstyle\lib\ltdl\m4\ltdl.m4"
"C:\msys64\usr\share\aclocal\ltdl.m4"

결과적으로 
"C:\libidn2\gettext-0.22.5\libtextstyle\lib\ltdl\aclocal.m4"
"C:\libidn2\gettext-0.22.5\libtextstyle\lib\ltdl\m4\ltdl.m4"

환경변수설정&적용
notepad ~/.bashrc
export ACLOCAL_PATH="/c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl:/c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl/m4:/c/msys64/usr/share/aclocal:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/m4"
source ~/.bashrc

(오류)
undefine=__m4_version__ aclocal.m4 /mingw64/share/autoconf/autoconf/trailer.m4 configure.ac > autom4te.cache/output.1t
(수정)
aclocal.m4 파일에서 __m4_version__ 변수를 정의하지 않았다
M4의 버전 정의가 누락되었거나 aclocal.m4를 찾을 수 없는 경우에 발생
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# m4 --version
m4 (GNU M4) 1.4.19
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by René Seindal.

파일이 없어서 복사실패 파일을 미리 복사해 놓음
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# cp /c/msys64/usr/share/aclocal/ltdl.m4 ./m4
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# cp /c/msys64/usr/share/aclocal/ltargz.m4 ./m4

(오류)
/usr/bin/m4:aclocal.m4:1729: cannot open `m4/ltdl.m4': No such file or directory
autom4te: error: /usr/bin/m4 failed with exit status: 1
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# cp /c/msys64/usr/share/aclocal/ltargz.m4 /usr/bin/m4                        
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# cp /c/msys64/usr/share/aclocal/ltdl.m4 /usr/bin/m4

(빌드)
{ autopoint --force; } 2>&1 | tee autopoint_log.log && 
{ rm -f po/Makefile.in.in; } &&
{ rm -rf autom4te.cache; } &&
{ aclocal -I m4 -I gnulib-m4 -I /mingw64/share/aclocal; } 2>&1 | tee aclocal_log.log && 
{ libtoolize --copy --force --verbose; } 2>&1 | tee libtoolize_log.log && 
{ autoconf --verbose; } 2>&1 | tee autoconf_log.log

(오류)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# { autopoint --force; } 2>&1 | tee autopoint_log.log &&
{ rm -f po/Makefile.in.in; } &&
{ rm -rf autom4te.cache; } &&
{ aclocal -I m4 -I gnulib-m4 -I /mingw64/share/aclocal; } 2>&1 | tee aclocal_log.log &&
{ libtoolize --copy --force --verbose; } 2>&1 | tee libtoolize_log.log &&
{ autoconf --verbose; } 2>&1 | tee autoconf_log.log
autom4te: error: need GNU m4 1.4 or later: /usr/bin/m4
Copying file po/Makefile.in.in
autom4te: error: need GNU m4 1.4 or later: /usr/bin/m4
aclocal-1.16: error: autom4te failed with exit status: 1
libtoolize: found 'configure.ac'
libtoolize:   error: One of these is required:
libtoolize:                 gm4 gnum4 m4
libtoolize:   error: Please install GNU M4, or 'export M4=/path/to/gnu/m4'.
autoconf: running /mingw64/bin/autom4te --verbose '--language=autoconf' '--output=configure' /mingw64/share/autoconf/autoconf/trailer.m4 configure.ac
autom4te: error: need GNU m4 1.4 or later: /usr/bin/m4
(수정)
m4의 버전이 낮거나 설치되어 있지 않아서 발생
GNU m4 1.4 이상 버전이 필요
GNU M4 설치 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# m4 --version
/usr/bin/m4: 줄 17: 예기치 않은 토큰 `[LT_CONFIG_LTDL_DIR],' 근처에서 문법 오류
/usr/bin/m4: 줄 17: `AC_DEFUN([LT_CONFIG_LTDL_DIR],'

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l /mingw64/bin/m4
ls: cannot access '/mingw64/bin/m4': No such file or directory

패키지업데이트
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Sy
:: 꾸러미 데이터베이스 동기화 중...
 clangarm64            420.3 KiB   108 KiB/s 00:04 [#######################] 100%
 mingw32               209.8 KiB   115 KiB/s 00:02 [#######################] 100%
 mingw64               448.1 KiB   201 KiB/s 00:02 [#######################] 100%
 ucrt64                476.4 KiB   251 KiB/s 00:02 [#######################] 100%
 clang32               104.8 KiB  35.4 KiB/s 00:03 [#######################] 100%
 clang64               460.7 KiB   272 KiB/s 00:02 [#######################] 100%
 msys는 최신입니다

pacman에서 제공하는 m4 관련 패키지를 검색
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Ss m4
clangarm64/mingw-w64-clang-aarch64-gtkmm-4.0 4.16.0-1
    C++ bindings for GTK+4 (mingw-w64)
mingw32/mingw-w64-i686-gtkmm-4.0 4.16.0-1
    C++ bindings for GTK+4 (mingw-w64)
mingw64/mingw-w64-x86_64-gtkmm-4.0 4.16.0-1
    C++ bindings for GTK+4 (mingw-w64)
ucrt64/mingw-w64-ucrt-x86_64-gtkmm-4.0 4.16.0-1
    C++ bindings for GTK+4 (mingw-w64)
clang64/mingw-w64-clang-x86_64-gtkmm-4.0 4.16.0-1
    C++ bindings for GTK+4 (mingw-w64)
msys/m4 1.4.19-2 [설치함]
    The GNU macro processor
=> 이미 msys/m4 패키지가 설치된 상태
경로 설정을 확인하여 MSYS2의 m4가 올바르게 사용되도록 해야 함
autom4te 및 autoconf와 같은 도구들이 m4 경로를 찾지 못하는 경우일 수 있음
(M4 환경 변수를 설정)
MinGW64 환경에서 사용하려는 m4는 /mingw64/bin/m4가 아니라 
MSYS2 환경에서 설치된 /usr/bin/m4

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l /usr/bin/m4
-rwxr-xr-x 1 nayou nayou 30069 10월  3 12:28 /usr/bin/m4

(MSYS2 환경: /usr/bin 디렉토리에 GNU 도구들이 위치하며, bash, autoconf, m4 등의 도구가 이 환경에서 기본적으로 제공됩니다. 이 환경은 Unix-like 환경으로 Windows에서 POSIX 호환 작업을 쉽게 처리할 수 있게 합니다.)
(MinGW64 환경: /mingw64/bin 경로는 MinGW64 툴체인을 위한 환경으로, Windows 네이티브 응용 프로그램을 만들 때 사용됩니다. MinGW64에서는 POSIX 호환성보다는 Windows에서 직접 실행 가능한 바이너리를 생성하는 데 초점이 맞춰져 있습니다.)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# notepad ~/.bashrc
export M4=/usr/bin/m4
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# source ~/.bashrc

Libtool 및 libltdl 설치 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -S libtool
경고: libtool-2.4.7-4는 최신 버전입니다.

configure.ac 수정
#LT_CONFIG_LTDL_DIR([libltdl]) #libltdl의 경로를 설정
LT_CONFIG_LTDL_DIR([/c/libidn2/gettext-0.22.5/libtextstyle/libltdl])

libtool 매크로 파일 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls /usr/share/aclocal/libtool.m4
/usr/share/aclocal/libtool.m4

(빌드) /usr/share/aclocal 변경
{ autopoint --force; } 2>&1 | tee autopoint_log.log && 
{ rm -f po/Makefile.in.in; } &&
{ rm -rf autom4te.cache; } &&
{ aclocal -I m4 -I gnulib-m4 -I /usr/share/aclocal; } 2>&1 | tee aclocal_log.log && 
{ libtoolize --copy --force --verbose; } 2>&1 | tee libtoolize_log.log && 
{ autoconf --verbose; } 2>&1 | tee autoconf_log.log

(오류)
autom4te: error: need GNU m4 1.4 or later: /usr/bin/m4
Copying file po/Makefile.in.in
autom4te: error: need GNU m4 1.4 or later: /usr/bin/m4
aclocal-1.16: error: autom4te failed with exit status: 1
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# /usr/bin/m4 --version
/usr/bin/m4: 줄 17: 예기치 않은 토큰 `[LT_CONFIG_LTDL_DIR],' 근처에서 문법 오류
/usr/bin/m4: 줄 17: `AC_DEFUN([LT_CONFIG_LTDL_DIR],'

재설치
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -R m4
의존성 검사 중...
오류: 트랜잭션 준비에 실패했습니다(의존성이 만족되지 못하였습니다.)
:: m4 제거로 의존성 'm4'(autoconf2.13가 요구)가 깨집니다
:: m4 제거로 의존성 'm4'(autoconf2.69가 요구)가 깨집니다
:: m4 제거로 의존성 'm4'(autoconf2.71가 요구)가 깨집니다
:: m4 제거로 의존성 'm4'(autoconf2.72가 요구)가 깨집니다
:: m4 제거로 의존성 'm4'(bison가 요구)가 깨집니다
:: m4 제거로 의존성 'm4'(flex가 요구)가 깨집니다

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -S m4 --noconfirm

M4 경로 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# which m4
/usr/bin/m4

환경변수확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# echo $M4
/usr/bin/m4

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# $M4 --version
m4 (GNU M4) 1.4.19
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by René Seindal.

(오류)
libtoolize: Not copying 'm4/ltargz.m4', libltdl not used.
libtoolize: Not copying 'm4/ltdl.m4', libltdl not used.
(수정)
복사를 해놓아도 계속 삭제가되어 빌드과정에 복사를 넣음
빌드명령어 수정
# 로그 디렉토리 생성
mkdir -p ./log

# autopoint 실행 및 로그 저장
{ autopoint --force; } 2>&1 | tee ./log/autopoint.log && 

# Makefile.in.in 파일 삭제
{ rm -f po/Makefile.in.in; } && 

# autom4te 캐시 삭제
{ rm -rf autom4te.cache; } && 

# aclocal 실행 및 로그 저장
{ aclocal -I m4 -I gnulib-m4 -I /usr/share/aclocal; } 2>&1 | tee ./log/aclocal.log && 

# 필요한 m4 파일 복사
{ cp /c/msys64/usr/share/aclocal/ltargz.m4 /c/libidn2/gettext-0.22.5/libtextstyle/m4/; cp /c/msys64/usr/share/aclocal/ltdl.m4 /c/libidn2/gettext-0.22.5/libtextstyle/m4/; } && 

# libtoolize 실행 및 로그 저장
{ libtoolize --copy --force --verbose; } 2>&1 | tee ./log/libtoolize.log && 

# autoconf 실행 및 로그 저장
{ autoconf --verbose; } 2>&1 | tee ./log/autoconf.log && 

# autoheader 실행 및 로그 저장
{ autoheader; } 2>&1 | tee ./log/autoheader.log && 

# automake 실행 및 로그 저장
{ automake --add-missing --force-missing; } 2>&1 | tee ./log/automake.log && 

# configure 실행 및 로그 저장
{ ./configure; } 2>&1 | tee ./log/configure.log && 

# make 실행 및 로그 저장
{ make; } 2>&1 | tee ./log/make.log

(빌드명령어)
{ autopoint --force; } 2>&1 | tee ./log/autopoint.log && 
{ rm -f po/Makefile.in.in; } && 
{ rm -rf autom4te.cache; } && 
{ aclocal -I m4 -I gnulib-m4 -I /usr/share/aclocal; } 2>&1 | tee ./log/aclocal.log && 
{ libtoolize --copy --force --verbose; } 2>&1 | tee ./log/libtoolize.log && 
{ cp /c/msys64/usr/share/aclocal/ltargz.m4 /c/libidn2/gettext-0.22.5/libtextstyle/m4/; cp /c/msys64/usr/share/aclocal/ltdl.m4 /c/libidn2/gettext-0.22.5/libtextstyle/m4/; } &&
{ autoconf --verbose; } 2>&1 | tee ./log/autoconf.log && 
{ autoheader; } 2>&1 | tee ./log/autoheader.log && 
{ automake --add-missing --force-missing; } 2>&1 | tee ./log/automake.log && 
{ ./configure; } 2>&1 | tee ./log/configure.log && 
{ make; } 2>&1 | tee ./log/make.log

(오류)
libtoolize: Not copying 'm4/ltargz.m4', libltdl not used.
libtoolize: Not copying 'm4/ltdl.m4', libltdl not used.
(수정)
libtoolize가 m4/ltargz.m4와 m4/ltdl.m4 파일을 삭제하는 이유는 libltdl이 사용되지 않기 때문
configure.ac 파일 수정
# LT_INIT([libltdl]) #libtool을 초기화할 때 libltdl을 포함하도록 지시
LT_INIT([win32-dll], [dlopen], [libltdl]) # 중복선언안됨. dlopen 모드를 활성화하여 libltdl 사용. win32-dll과 dlopen을 동시에 초기화

필요한 패키지 설치 확인
pacman -S mingw-w64-x86_64-libtool

libltdl을 사용하도록 설정
Makefile.am
lib_LTLIBRARIES = libmylibrary.la
libmylibrary_la_LDFLAGS = -version-info 1:0:0

libtoolize를 실행하여 자동으로 파일을 생성하도록 한다.

(최종 빌드명령어)
{ autopoint --force; } 2>&1 | tee ./log/autopoint.log && 
{ rm -f po/Makefile.in.in; } && 
{ rm -rf autom4te.cache; } && 
{ aclocal -I m4 -I gnulib-m4 -I /usr/share/aclocal; } 2>&1 | tee ./log/aclocal.log && 
{ libtoolize --copy --force --verbose; } 2>&1 | tee ./log/libtoolize.log && 
{ autoconf --verbose; } 2>&1 | tee ./log/autoconf.log && 
{ autoheader; } 2>&1 | tee ./log/autoheader.log && 
{ automake --add-missing --force-missing; } 2>&1 | tee ./log/automake.log && 
{ ./configure; } 2>&1 | tee ./log/configure.log && 
{ make; } 2>&1 | tee ./log/make.log

(오류)
autom4te: error: need GNU m4 1.4 or later: /usr/bin/m4
(수정)
GNU m4 1.4 또는 그 이상의 버전이 필요(M4가 잘 깨짐)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -S m4
경고: m4-1.4.19-2는 최신 버전입니다. -- 재설치
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# m4 --version
m4 (GNU M4) 1.4.19
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by René Seindal.

(오류)
checking for glib-2.0 >= 2.10.0 gobject-2.0  >= 2.10.0... no
./configure: line 18507: syntax error near unexpected token `2.0'
./configure: line 18507: `GL_REQUIRE_VERSION(2.0)'
make: *** [Makefile:843: config.status] 오류 2
(수정)
패키지 데이터베이스 업데이트
pacman -Syu
필요한 패키지 설치: 필요한 개발 패키지를 설치
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -S mingw-w64-x86_64-glib2 mingw-w64-x86_64-gcc
경고: mingw-w64-x86_64-gcc-14.2.0-1는 최신 버전입니다. -- 재설치
의존성 해결 중...
꾸러미 충돌을 찾는 중...

꾸러미 (5) mingw-w64-x86_64-pcre2-10.44-1
           mingw-w64-x86_64-python-packaging-24.1-1
           mingw-w64-x86_64-wineditline-2.206-1  mingw-w64-x86_64-gcc-14.2.0-1
           mingw-w64-x86_64-glib2-2.82.1-1

총 다운로드 크기:        6.23 MiB
총 설치 크기:          269.13 MiB
알짜 업그레이드 크기:   44.30 MiB

:: 설치를 진행하시겠습니까? [Y/n] y
:: 꾸러미 가져오는 중...
 mingw-w64-x86_64...  1077.2 KiB   445 KiB/s 00:02 [#######################] 100%
 mingw-w64-x86_64...    59.2 KiB  24.1 KiB/s 00:02 [#######################] 100%
 mingw-w64-x86_64...   102.3 KiB  39.7 KiB/s 00:03 [#######################] 100%
 mingw-w64-x86_64...     5.0 MiB  1251 KiB/s 00:04 [#######################] 100%
 총합 (4/4)              6.2 MiB  1403 KiB/s 00:05 [#######################] 100%
(5/5) 키링의 키를 검사 중                          [#######################] 100%
(5/5) 꾸러미 무결성 검사 중                        [#######################] 100%
(5/5) 꾸러미 파일 불러오는 중                      [#######################] 100%
(5/5) 파일 충돌 검사 중                            [#######################] 100%
(5/5) 사용 가능한 디스크 공간 검사 중              [#######################] 100%
:: 꾸러미 변경사항을 처리 중...
(1/5) 설치 중 mingw-w64-x86_64-wineditline         [#######################] 100%
(2/5) 설치 중 mingw-w64-x86_64-pcre2               [#######################] 100%
(3/5) 설치 중 mingw-w64-x86_64-python-packaging    [#######################] 100%
(4/5) 설치 중 mingw-w64-x86_64-glib2               [#######################] 100%
(5/5) 재설치 중 mingw-w64-x86_64-gcc               [#######################] 100%

환경 변수 설정
export PKG_CONFIG_PATH="/c/Program\ Files/GLib/lib/pkgconfig:/c/libidn2/gettext-0.22.5/gettext-runtime/intl:/mingw64/lib/pkgconfig:/usr/lib/pkgconfig"

glib-2.0 라이브러리의 버전을 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pkg-config --modversion glib-2.0
2.82.1
=> glib-2.0이 필요한 프로그램이나 라이브러리를 구성하는 데 충분

configure.ac 수정
GL_REQUIRE_VERSION"([2.0])" # GLib의 최소 버전

(오류)
onfigure.ac:23: warning: Unknown LT_INIT option 'libltdl'
(수정)
#LT_INIT([libltdl]) # 단독으로 썼을경우 인식안될 수 있음 
LT_INIT([win32-dll], [dlopen], [libltdl])

(오류)
libtoolize: Not copying 'm4/ltargz.m4', libltdl not used.
libtoolize: Not copying 'm4/ltdl.m4', libltdl not used.
(수정)
configure.ac 수정
LT_INIT([dlopen])
LTDL_INIT([libltdl])

(오류)
configure.ac:24: warning: Unknown LTDL_INIT option 'dlopen'
(수정)
configure.ac 수정
LT_INIT([win32-dll], [dlopen])
LTDL_INIT([libltdl])

(오류)
configure.ac:26: error: multiple libltdl directories: 
'libltdl', '/c/libidn2/gettext-0.22.5/libtextstyle/libltdl'
(수정)
"C:\libidn2\gettext-0.22.5\libtextstyle\libltdl\libltdl"
"C:\libidn2\gettext-0.22.5\libtextstyle\lib\ltdl\libltdl\libltdl"
"C:\libidn2\gettext-0.22.5\libtextstyle\libltdl"
"C:\libidn2\gettext-0.22.5\libtextstyle\lib\ltdl\libltdl" 

configure.ac 수정
LT_INIT([win32-dll], [dlopen])
LTDL_INIT([libltdl])
LT_CONFIG_LTDL_DIR([/c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl])

(오류)
configure.ac:24: warning: Unknown LTDL_INIT option 'libltdl'
(수정)
LT_INIT: 라이브러리 설정을 위한 기본 매크로입니다.
LTDL_INIT: libltdl을 설정하기 위한 매크로로, 옵션 없이 사용해야 합니다.
configure.ac 수정
LT_INIT([win32-dll], [dlopen])
LTDL_INIT
LT_CONFIG_LTDL_DIR([libltdl])

[동적 라이브러리를 쉽게 관리하고 로드할 수 있는 환경을 구성]
LT_INIT([win32-dll], [dlopen])
LTDL_INIT
LT_CONFIG_LTDL_DIR([libltdl])

(빌드)
{ autopoint --force; } 2>&1 | tee ./log/autopoint.log && 
{ rm -f po/Makefile.in.in; } && 
{ rm -rf autom4te.cache; } && 
{ aclocal -I m4 -I gnulib-m4 -I /usr/share/aclocal; } 2>&1 | tee ./log/aclocal.log && 
{ libtoolize --copy --force --verbose; } 2>&1 | tee ./log/libtoolize.log && 
{ autoconf --verbose; } 2>&1 | tee ./log/autoconf.log && 
{ autoheader; } 2>&1 | tee ./log/autoheader.log && 
{ automake --add-missing --force-missing; } 2>&1 | tee ./log/automake.log && 
{ ./configure; } 2>&1 | tee ./log/configure.log && 
{ make; } 2>&1 | tee ./log/make.log

(오류)
autom4te: forbidden token : ^LIBOBJS$ => do not use LIBOBJS directly, 
use AC_LIBOBJ (see section 'AC_LIBOBJ vs LIBOBJS'
(수정)
LIBOBJS를 직접 사용하지 말고, 대신 AC_LIBOBJ를 사용하라

Makefile.am 수정
#libltdlc_la_LIBS = -lncurses $(GNULIB_LIBS) $(GL_LIBOBJS) $(LTDLIBS) $(LT_LIBOBJS)
libltdlc_la_LIBS = -lncurses $(GNULIB_LIBS) $(AC_LIBOBJ(GL_LIBS)) $(LTDLIBS) $(AC_LIBOBJ(LT_LIBS))

(오류)
autom4te: forbidden token : ^LIBOBJS$ => do not use LIBOBJS directly, use AC_LIBOBJ (see section 'AC_LIBOBJ vs LIBOBJS'
Makefile.am:99: warning: AC_LIBOBJ(GL_LIBS: non-POSIX variable name
Makefile.am:99: warning: AC_LIBOBJ(LT_LIBS: non-POSIX variable name
(수정)
LIBOBJS라는 변수를 직접 사용하면 안 되며, 대신 AC_LIBOBJ를 사용해야 한다는 경고
AC_LIBOBJ(GL_LIBS) 및 AC_LIBOBJ(LT_LIBS)에서 비-포지스 이름 경고가 발생

Makefile.am 수정
#libltdlc_la_LIBS = -lncurses $(GNULIB_LIBS) $(AC_LIBOBJ(GL_LIBS)) $(LTDLIBS) $(AC_LIBOBJ(LT_LIBS))
libltdlc_la_LIBS = -lncurses $(GNULIB_LIBS) $(AC_LIBOBJ(GL_LIBS)) $(LTDLIBS) $(AC_LIBOBJ(LT_LIBS))

configure.ac 수정
# gl_LIBOBJS 설정
#if test -n "$gl_LIBOBJS"; then
#    AC_SUBST([GL_LIBOBJS], ["$gl_LIBOBJS"])
#fi

# _LT_LIBOBJS 설정
#if test -n "$_LT_LIBOBJS"; then
#    AC_SUBST([LT_LIBOBJS], ["$_LT_LIBOBJS"])
#fi

# gl_libs 설정
if test -n "$gl_libs"; then
    AC_SUBST([GL_LIBS], ["$gl_libs"])
fi

# lt_libs 설정
if test -n "$_lt_libs"; then
    AC_SUBST([LT_LIBS], ["$_lt_libs"])
fi

(오류)
configure.ac:27: warning: LTDL_INIT was called before LT_CONFIG_LTDL_DIR
m4/ltdl.m4:17: LT_CONFIG_LTDL_DIR is expanded from...
(수정)
LT_CONFIG_LTDL_DIR([libltdl])
LT_INIT([win32-dll], [dlopen])
LTDL_INIT
L_INLTDIT #라이브러리 동적 로딩을 위한 초기화, LT_INIT보다 먼저 선언되면 안됨

(오류)
autom4te: forbidden token : ^LIBOBJS$ => do not use LIBOBJS directly, use AC_LIBOBJ (see section 'AC_LIBOBJ vs LIBOBJS'
(수정)
LIBOBJS->AC_LIBOBJ 수정
추출한 파일명들을 정렬하고, 중복되는 파일명을 제거하여 최종 결과로 고유한 파일명만 출력
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'LIBOBJS' ./lib | awk -F: '{print $1}' | sort -u
./lib/ltdl/ChangeLog.old
./lib/ltdl/config.log
./lib/ltdl/config.status
./lib/ltdl/configure
./lib/ltdl/doc/libtool.texi
./lib/ltdl/libltdl/ltdl.mk
./lib/ltdl/libtoolize.in
./lib/ltdl/m4/ltdl.m4
./lib/ltdl/mail/LTLIBOBJ
./lib/ltdl/Makefile.am
./lib/ltdl/Makefile.in
./lib/Makefile
./lib/Makefile.am
./lib/Makefile.am~
./lib/Makefile.gnulib
./lib/Makefile.in
Binary file ./lib/ltdl/.git/objects/pack/pack-19f43a0211c8d07d4c0843d649b1b8b4074e6434.pack matches

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# notepad change_LIBOBJS_to_AC_LIBOBJ.sh

#!/bin/bash

# 파일 경로
file_path="./lib/ltdl/ChangeLog.old"

# 'LIBOBJS'를 'AC_LIBOBJ'로 변경
sed -i 's/LIBOBJS/AC_LIBOBJ/g' "$file_path"

echo "$file_path 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다."

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./change_LIBOBJS_to_AC_LIBOBJ.sh
./lib/ltdl/ChangeLog.old 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다.

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'LIBOBJS' ./lib | awk -F: '{print $1}' | sort | uniq -d
./lib/ltdl/config.log
./lib/ltdl/config.status
./lib/ltdl/configure
./lib/ltdl/doc/libtool.texi
./lib/ltdl/libltdl/ltdl.mk
./lib/ltdl/libtoolize.in
./lib/ltdl/m4/ltdl.m4
./lib/ltdl/mail/LTLIBOBJ
./lib/ltdl/Makefile.am
./lib/ltdl/Makefile.in
./lib/Makefile
./lib/Makefile.am
./lib/Makefile.am~
./lib/Makefile.gnulib
./lib/Makefile.in

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# notepad change_LIBOBJS_to_AC_LIBOBJ.sh
#!/bin/bash

# 변경할 파일 목록
files=(
  "./lib/ltdl/ChangeLog.old"
  "./lib/ltdl/config.log"
  "./lib/ltdl/config.status"
  "./lib/ltdl/configure"
  "./lib/ltdl/doc/libtool.texi"
  "./lib/ltdl/libltdl/ltdl.mk"
  "./lib/ltdl/libtoolize.in"
  "./lib/ltdl/m4/ltdl.m4"
  "./lib/ltdl/mail/LTLIBOBJ"
  "./lib/ltdl/Makefile.am"
  "./lib/ltdl/Makefile.in"
  "./lib/Makefile"
  "./lib/Makefile.am"
  "./lib/Makefile.am~"
  "./lib/Makefile.gnulib"
  "./lib/Makefile.in"
)

# 각 파일에서 'LIBOBJS'를 'AC_LIBOBJ'로 변경
for file in "${files[@]}"; do
  if [ -f "$file" ]; then
    sed -i 's/LIBOBJS/AC_LIBOBJ/g' "$file"
    echo "$file 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다."
  else
    echo "$file 파일을 찾을 수 없습니다."
  fi
done

스크립트에 실행 권한을 부여
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# chmod +x change_LIBOBJS_to_AC_LIBOBJ.sh

스크립트를 실행
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./change_LIBOBJS_to_AC_LIBOBJ.sh
./lib/ltdl/ChangeLog.old 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다.
./lib/ltdl/config.log 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다.
./lib/ltdl/config.status 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다.
./lib/ltdl/configure 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다.
./lib/ltdl/doc/libtool.texi 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다.
./lib/ltdl/libltdl/ltdl.mk 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다.
./lib/ltdl/libtoolize.in 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다.
./lib/ltdl/m4/ltdl.m4 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다.
./lib/ltdl/mail/LTLIBOBJ 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다.
./lib/ltdl/Makefile.am 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다.
./lib/ltdl/Makefile.in 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다.
./lib/Makefile 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다.
./lib/Makefile.am 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다.
./lib/Makefile.am~ 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다.
./lib/Makefile.gnulib 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다.
./lib/Makefile.in 에서 모든 'LIBOBJS'를 'AC_LIBOBJ'로 변경했습니다.

(결과확인)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn 'LIBOBJS' ./lib | awk -F: '{print $1}' | sort | uniq -d

[무조건 바꾸면 안돼서 하나씩 체크하면서 변경]

(오류)
autom4te: forbidden token : ^LIBOBJS$ => do not use LIBOBJS directly, use AC_LIBOBJ (see section 'AC_LIBOBJ vs LIBOBJS'

(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -rn "\<LIBOBJS\>" ./lib

./lib/ltdl/Makefile.am 수정
#m4_pushdef([LIBOBJS], m4_defn([_LT_LIBOBJ]))
m4_pushdef([AC_LIBOBJ], m4_defn([_LT_LIBOBJ]))

#AC_CHECK_FUNCS([closedir opendir readdir], [], [LIBOBJS([lt__dirent])])
AC_CHECK_FUNCS([closedir opendir readdir], [], [AC_LIBOBJ([lt__dirent])])
#AC_CHECK_FUNCS([strlcat strlcpy], [], [LIBOBJS([lt__strl])])
AC_CHECK_FUNCS([strlcat strlcpy], [], [AC_LIBOBJ([lt__strl])])

./lib/ltdl/Makefile.am 수정
#CLEANFILES	       += $(LIBOBJS) $(LTLIBOBJS)
CLEANFILES	       += $(AC_LIBOBJ) $(LTLIBOBJS)

./lib/ltdl/libltdl/ltdl.mk 수정
#CLEANFILES	       += $(LIBOBJS) $(LTLIBOBJS)
CLEANFILES	       += $(AC_LIBOBJ) $(LTLIBOBJS)

./lib/ltdl/Makefile.in 수정
#LIBOBJS = @LIBOBJS@
LIBOBJS = @AC_LIBOBJ@

Makefile.am 수정
libtextstyle_la_LIBS = -lncurses $(GNULIB_LIBS) $(GL_LIBOBJS) $(LTDLIBS) $(LT_LIBOBJS) -lltdl # libtextstyle 라이브러리에 링크할 라이브러리들

(오류)
autom4te: forbidden token : ^LIBOBJS$ => do not use LIBOBJS directly, use AC_LIBOBJ (see section 'AC_LIBOBJ vs LIBOBJS'
(수정)
./adhoc-tests/Makefile 수정
#LIBOBJS =
AC_LIBOBJ =  

./adhoc-tests/Makefile.in 수정
#LIBOBJS = @LIBOBJS@
AC_LIBOBJ = @AC_LIBOBJ@

./doc/Makefile 수정
#LIBOBJS = 
AC_LIBOBJ = 

./doc/Makefile.in 수정
#LIBOBJS = @LIBOBJS@
AC_LIBOBJ = @AC_LIBOBJ@

Makefile.am 수정
libtextstyle_la_LIBOBJS = $(LIBOBJS)
libltdlc_la_LIBOBJS = $(LIBOBJS)

#포함된 객체 파일의 최적화를 설정
libtextstyle_la_CFLAGS = -g -02
libltdlc_la_CFLAGS = -g -02

# 헤더 파일을 설치할 디렉토리
include_HEADERS = \
    foo.h \
    bar.h \
    color.h \
    gl_array_list.h \
    term-ostream.h \
    ostream.h \
    concat-filename.h \
    xconcat-filename.h \
    xsize.h \
    error.h \
    full-write.h \
    term-style-control.h \
    fsync.h \
    xstrdup.h \
    xgethostname.h

(오류)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# aclocal
configure.ac:25: error: m4_popdef: undefined macro: LIBOBJS
/c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl/m4/ltdl.m4:226: LTDL_INIT is expanded from...
configure.ac:25: the top level
autom4te: error: /usr/bin/m4 failed with exit status: 1
aclocal-1.16: error: autom4te failed with exit status: 1
(수정)
 aclocal -I m4 -I gnulib-m4 -I /usr/share/aclocal; 

[./configure;]
(오류)
/mingw64/bin/gcc option to enable C23 features... unsupported
configure.ac:71: warning: The macro 'AC_LANG_C' is obsolete.
configure.ac:71: You should run autoupdate.
./lib/autoconf/c.m4:72: AC_LANG_C is expanded from...
configure.ac:71: the top level
configure.ac:76: warning: The macro 'AC_LANG_CPLUSPLUS' is obsolete.
configure.ac:76: You should run autoupdate.
./lib/autoconf/c.m4:270: AC_LANG_CPLUSPLUS is expanded from...
configure.ac:76: the top level
(수정)
MinGW의 GCC가 C23 기능을 지원하지 않습니다
C23 기능이 필요한 경우, GCC의 최신 버전을 설치하거나, C11 또는 C17과 같은 이전 표준으로 코드를 조정하는 방법을 고려해야 함.

configure.ac 확인 및 수정
# Set C standard to C23
#AC_LANG_C # 더 이상 사용되지 않는다는 경고
CFLAGS="$CFLAGS -std=c23" # C 표준을 C23으로 설정
AC_SUBST(CFLAGS) # Makefile에 전달

# Set C++ standard to C++17
#AC_LANG_CPLUSPLUS # 더 이상 사용되지 않는다는 경고
CXXFLAGS="$CXXFLAGS -std=c++17" # C++ 표준을 C++17로 설정
AC_SUBST(CXXFLAGS) # Makefile에 전달 

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# gcc --version
gcc.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
=> C23 표준을 지원

(참고  CMakeLists.txt)
# C와 C++ 표준 설정
set(CMAKE_C_STANDARD 23)
set(CMAKE_CXX_STANDARD 17)

(오류)
checking for netdb.h... no
(수정)
netdb.h 헤더 파일이 발견되지 않음
네트워크 데이터베이스에 대한 정의를 포함

MinGW는 Windows에서 POSIX 호환 라이브러리를 제공하는 툴
mingw32에서 netdb.h가 포함된 패키지를 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Ss netdb.h

기본 개발 패키지를 설치
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -S mingw-w64-x86_64-toolchain

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find /mingw64/include -name winsock2.h
/mingw64/include/winsock2.h

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find /mingw64/include -name netdb.h
netdb.h는 POSIX 시스템에서 네트워크 데이터베이스 관련 함수들을 제공하는 헤더 파일로, 
일반적으로 Windows 환경에서는 기본적으로 제공되지 않음
POSIX 호환성을 추가적으로 제공하는 MSYS2 환경을 사용하여 netdb.h를 설치하는 것이 좋다.
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -S mingw-w64-x86_64-libwinpthread-git
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find /mingw64/include -name netdb.h

mingw-w64-x86_64-libwinpthread-git 패키지를 성공적으로 재설치했지만, 
여전히 netdb.h 파일을 찾을 수 없는 것 같습니다. 
이는 mingw-w64 환경에서 기본적으로 netdb.h를 제공하지 않기 때문입니다. 
대신, Winsock API를 사용하는 것이 일반적이므로 netdb.h 대신 
winsock2.h와 Winsock 관련 함수로 대체하는 것이 권장된다.

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep -r '#include <netdb.h>' .
./config.log:   49 | #include <netdb.h>
./config.log:| #include <netdb.h>
./lib/canon-host.c:#include <netdb.h>
./lib/gai_strerror.c:#include <netdb.h>
./lib/getaddrinfo.c:#include <netdb.h>
./lib/libxml/nanoftp.c:#include <netdb.h>
./lib/libxml/nanohttp.c:#include <netdb.h>
./m4/getaddrinfo.m4:#include <netdb.h>
./m4/getaddrinfo.m4:#include <netdb.h>
./m4/getaddrinfo.m4:#include <netdb.h>
./m4/getaddrinfo.m4:#include <netdb.h>
./m4/getaddrinfo.m4:#include <netdb.h>
./m4/getaddrinfo.m4:#include <netdb.h>
./m4/getaddrinfo.m4:#include <netdb.h>
./m4/getdomainname.m4:      #include <netdb.h>
./m4/getdomainname.m4:              #include <netdb.h>
./m4/netdb_h.m4:  gl_WARN_ON_USE_PREPARE([[#include <netdb.h>]],
./macro_calls.txt:m4/netdb_h.m4:  gl_WARN_ON_USE_PREPARE([[#include <netdb.h>]],
./tests/test-getaddrinfo.c:#include <netdb.h>
./tests/test-netdb-c++.cc:#include <netdb.h>
./tests/test-netdb.c:#include <netdb.h>

(수정)
소스 파일
lib/canon-host.c
lib/gai_strerror.c
lib/getaddrinfo.c
lib/libxml/nanoftp.c
lib/libxml/nanohttp.c
tests/test-getaddrinfo.c
tests/test-netdb-c++.cc
tests/test-netdb.c
매크로 파일
m4/getaddrinfo.m4
m4/getdomainname.m4
m4/netdb_h.m4

수정 방법
[공통수정]
#include <netdb.h>를 #include <winsock2.h>와 #include <ws2tcpip.h>로 변경
#ifdef _WIN32
#include <winsock2.h>
#include <ws2tcpip.h>
#else
#include <netdb.h>
#endif

gl_CHECK_NEXT_HEADERS([winsock2.h])

[/c/libidn2/gettext-0.22.5/libtextstyle]
======================================================================================
[lib/canon-host.c 수정]
======================================================================================
char *
canon_host_r (char const *host, int *cherror)
{

else if (cherror)
  {
      // Windows에서는 getaddrinfo가 다르게 오류를 반환할 수 있음
      #ifdef _WIN32
      *cherror = WSAGetLastError(); // Windows 오류 코드 가져오기
      #else
      *cherror = status; // POSIX 시스템의 경우
      #endif
  }
  //else if (cherror)
  //  *cherror = status;
}
======================================================================================
[lib/gai_strerror.c 수정]
======================================================================================
{ WSAEAFNOSUPPORT, N_("Address family for hostname not supported") },  // EAI_ADDRFAMILY
{ WSAHOST_NOT_FOUND, N_("Temporary failure in name resolution") },     // EAI_AGAIN
{ WSA_INVALID_PARAMETER, N_("Bad value for ai_flags") },              // EAI_BADFLAGS
{ WSAEFAULT, N_("Non-recoverable failure in name resolution") },      // EAI_FAIL
{ WSANO_DATA, N_("No address associated with hostname") },            // EAI_NODATA
{ WSANOTINITIALISED, N_("Name or service not known") },              // EAI_NONAME
{ WSAEINPROGRESS, N_("Processing request in progress") },           // EAI_INPROGRESS
{ WSAEWOULDBLOCK, N_("Request canceled") },                          // EAI_CANCELED
{ WSAENOTCONN, N_("Request not canceled") },                         // EAI_NOTCANCELED
{ WSAEINTR, N_("Interrupted by a signal") },                        // EAI_INTR
{ WSAENOMORE, N_("All requests done") }                              // EAI_ALLDONE

//     { EAI_ADDRFAMILY, N_("Address family for hostname not supported") },
//     { EAI_AGAIN, N_("Temporary failure in name resolution") },
//     { EAI_BADFLAGS, N_("Bad value for ai_flags") },
//     { EAI_FAIL, N_("Non-recoverable failure in name resolution") },
//     { EAI_FAMILY, N_("ai_family not supported") },
//     { EAI_MEMORY, N_("Memory allocation failure") },
//     { EAI_NODATA, N_("No address associated with hostname") },
//     { EAI_NONAME, N_("Name or service not known") },
//     { EAI_SERVICE, N_("Servname not supported for ai_socktype") },
//     { EAI_SOCKTYPE, N_("ai_socktype not supported") },
//     { EAI_SYSTEM, N_("System error") },
//     { EAI_OVERFLOW, N_("Argument buffer too small") },
// #ifdef EAI_INPROGRESS
//     { EAI_INPROGRESS, N_("Processing request in progress") },
//     { EAI_CANCELED, N_("Request canceled") },
//     { EAI_NOTCANCELED, N_("Request not canceled") },
//     { EAI_ALLDONE, N_("All requests done") },
//     { EAI_INTR, N_("Interrupted by a signal") },
//     { EAI_IDN_ENCODE, N_("Parameter string not correctly encoded") }
// #endif

======================================================================================
[lib/getaddrinfo.c 수정]
======================================================================================
/*netdb->winsock2 수정*/
/* Get address information (partial implementation).
   Copyright (C) 1997, 2001-2002, 2004-2024 Free Software Foundation, Inc.
   Contributed by Simon Josefsson <simon@josefsson.org>.

   This file is free software: you can redistribute it and/or modify
   it under the terms of the GNU Lesser General Public License as
   published by the Free Software Foundation; either version 2.1 of
   the License, or (at your option) any later version.

   This file is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */

/* 이 컴파일 단위에서 __attribute__ __nonnull__ 사용하지 않음.
   그렇지 않으면 gcc가 아래 sa == NULL 검사를 최적화해버림.  */
#define _GL_ARG_NONNULL(params)

#include <config.h>

#ifdef _WIN32
#include <winsock2.h>
#include <ws2tcpip.h>
#else
#include <netdb.h>
#endif

#if HAVE_NETINET_IN_H
# include <netinet/in.h>
#endif

/* inet_ntop을 가져옴.  */
#include <arpa/inet.h>

/* calloc을 가져옴. */
#include <stdlib.h>

/* memcpy, strdup을 가져옴. */
#include <string.h>

/* snprintf을 가져옴. */
#include <stdio.h>

#include "gettext.h"
#define _(String) gettext (String)
#define N_(String) String

/* BeOS는 AF_INET이 있지만 PF_INET은 없음.  */
#ifndef PF_INET
# define PF_INET AF_INET
#endif
/* BeOS는 PF_UNSPEC도 없음.  */
#ifndef PF_UNSPEC
# define PF_UNSPEC 0
#endif

#if HAVE_GETADDRINFO

/* cdecl 호출 규약으로 재정의.  */
int
getaddrinfo (const char *restrict nodename,
             const char *restrict servname,
             const struct addrinfo *restrict hints,
             struct addrinfo **restrict res)
# undef getaddrinfo
{
  return getaddrinfo (nodename, servname, hints, res);
}

/* 주소 정보 해제 함수.  */
void
freeaddrinfo (struct addrinfo *ai)
# undef freeaddrinfo
{
  freeaddrinfo (ai);
}

#else

# if defined _WIN32 && !defined __CYGWIN__
#  define WINDOWS_NATIVE
# endif

/* gl_sockets_startup */
# include "sockets.h"

# ifdef WINDOWS_NATIVE

/* UNICODE가 정의되지 않았다고 가정하지 않음.  */
#  undef GetModuleHandle
#  define GetModuleHandle GetModuleHandleA

#  if !(_WIN32_WINNT >= _WIN32_WINNT_WINXP)

/* gcc -Wcast-function-type에서 경고를 피하기 위해.  */
#   define GetProcAddress \
     (void *) GetProcAddress

/* 함수 포인터 정의.  */
typedef int (WSAAPI *getaddrinfo_func) (const char*, const char*,
                                        const struct addrinfo*,
                                        struct addrinfo**);
typedef void (WSAAPI *freeaddrinfo_func) (struct addrinfo*);
typedef int (WSAAPI *getnameinfo_func) (const struct sockaddr*,
                                        socklen_t, char*, DWORD,
                                        char*, DWORD, int);

/* 함수 포인터 초기화.  */
static getaddrinfo_func getaddrinfo_ptr = NULL;
static freeaddrinfo_func freeaddrinfo_ptr = NULL;
static getnameinfo_func getnameinfo_ptr = NULL;

/* Win32 함수 사용 여부 판단.  */
static int
use_win32_p (void)
{
  static int done = 0;
  HMODULE h;

  if (done)
    return getaddrinfo_ptr ? 1 : 0;

  done = 1;

  h = GetModuleHandle ("ws2_32.dll");

  if (h)
    {
      /* 함수 포인터 초기화.  */
      getaddrinfo_ptr = (getaddrinfo_func) GetProcAddress (h, "getaddrinfo");
      freeaddrinfo_ptr = (freeaddrinfo_func) GetProcAddress (h, "freeaddrinfo");
      getnameinfo_ptr = (getnameinfo_func) GetProcAddress (h, "getnameinfo");
    }

  /* 어떤 것이 없으면 이상함. */
  if (!getaddrinfo_ptr || !freeaddrinfo_ptr || !getnameinfo_ptr)
    {
      getaddrinfo_ptr = NULL;
      freeaddrinfo_ptr = NULL;
      getnameinfo_ptr = NULL;
      return 0;
    }

  gl_sockets_startup (SOCKETS_1_1);

  return 1;
}

#  else

/* Win32가 아닐 경우. */
static int
use_win32_p (void)
{
  static int done = 0;

  if (!done)
    {
      done = 1;

      gl_sockets_startup (SOCKETS_1_1);
    }

  return 1;
}

/* 함수 포인터를 직접 함수로 정의.  */
#   define getaddrinfo_ptr getaddrinfo
#   define freeaddrinfo_ptr freeaddrinfo
#   define getnameinfo_ptr getnameinfo

#  endif
# endif

/* 주소 패밀리 검증.  */
static bool
validate_family (int family)
{
  /* FIXME: 더 많은 패밀리 지원. */
# if HAVE_IPV4
     if (family == PF_INET)
       return true;
# endif
# if HAVE_IPV6
     if (family == PF_INET6)
       return true;
# endif
     if (family == PF_UNSPEC)
       return true;
     return false;
}

/* 서비스 위치의 이름을 번역하고 소켓 주소 세트를 설정. */
int
getaddrinfo (const char *restrict nodename,
             const char *restrict servname,
             const struct addrinfo *restrict hints,
             struct addrinfo **restrict res)
#undef getaddrinfo
{
  struct addrinfo *tmp;
  int port = 0;
  struct hostent *he; // 이 부분은 필요 없을 수 있음.
  void *storage;
  size_t size;
# if HAVE_IPV6
  struct v6_pair {
    struct addrinfo addrinfo;
    struct sockaddr_in6 sockaddr_in6;
  };
# endif
# if HAVE_IPV4
  struct v4_pair {
    struct addrinfo addrinfo;
    struct sockaddr_in sockaddr_in;
  };
# endif

# ifdef WINDOWS_NATIVE
  if (use_win32_p ())
    return getaddrinfo_ptr (nodename, servname, hints, res);
# endif

  /* flags 검증.  */
  if (hints && (hints->ai_flags & ~(AI_CANONNAME|AI_PASSIVE)))
    return EAI_BADFLAGS;

  /* family 검증.  */
  if (hints && !validate_family (hints->ai_family))
    return EAI_FAMILY;

  /* socket type 검증.  */
  if (hints &&
      hints->ai_socktype != SOCK_STREAM && hints->ai_socktype != SOCK_DGRAM)
    return EAI_SOCKTYPE; /* FIXME: 더 나은 반환 코드? */

  /* nodename이 NULL인 경우 처리.  */
  if (!nodename)
    {
      if (!(hints->ai_flags & AI_PASSIVE))
        return EAI_NONAME;

# ifdef HAVE_IPV6
      nodename = (hints->ai_family == AF_INET6) ? "::" : "0.0.0.0";
# else
      nodename = "0.0.0.0";
# endif
    }

  /* servname이 존재하는 경우 처리.  */
  if (servname)
    {
      struct servent *se = NULL;
      const char *proto =
        (hints && hints->ai_socktype == SOCK_DGRAM) ? "udp" : "tcp";

      if (hints == NULL || !(hints->ai_flags & AI_NUMERICSERV))
        /* FIXME: getservbyname_r 사용. */
        se = getservbyname (servname, proto);

      if (se)
        port = ntohs (se->s_port);
      else
        {
          char *endptr;
          long p = strtol (servname, &endptr, 10);
          if (endptr != servname && *endptr == '\0')
            {
              if (p < 0 || p > 65535)
                return EAI_SERVICE;
              port = (int) p;
            }
          else
            return EAI_SERVICE;
        }
    }

  /* tmp 주소 할당.  */
  tmp = (struct addrinfo *) calloc (1, sizeof (struct addrinfo));
  if (!tmp)
    return EAI_MEMORY;

  /* 부모 주소 설정.  */
  if (hints)
    memcpy (tmp, hints, sizeof (struct addrinfo));

  /* 주소 패밀리 및 소켓 타입 설정.  */
  if (hints)
    {
      tmp->ai_family = hints->ai_family;
      tmp->ai_socktype = hints->ai_socktype;
    }
  else
    {
      tmp->ai_family = PF_UNSPEC;
      tmp->ai_socktype = SOCK_STREAM;
    }

  /* 주소 집합 설정.  */
  tmp->ai_addr = (struct sockaddr *) &storage;
  if (tmp->ai_family == AF_INET)
    {
      size = sizeof (struct sockaddr_in);
      storage = calloc (1, sizeof (struct sockaddr_in));
      if (!storage)
        return EAI_MEMORY;

      struct sockaddr_in *addr = (struct sockaddr_in *) storage;
      addr->sin_family = AF_INET;
      addr->sin_port = htons (port);
      /* nodename을 문자열에서 주소로 변환.  */
      if (!inet_pton (AF_INET, nodename, &addr->sin_addr))
        {
          /* hostent 사용이 필요할 수 있음. */
          he = gethostbyname (nodename);
          if (!he)
            return EAI_NONAME;
          memcpy (&addr->sin_addr, he->h_addr_list[0], sizeof (struct in_addr));
        }
      size = sizeof (struct sockaddr_in);
      tmp->ai_addrlen = size;
    }
# if HAVE_IPV6
  else if (tmp->ai_family == AF_INET6)
    {
      size = sizeof (struct sockaddr_in6);
      storage = calloc (1, sizeof (struct sockaddr_in6));
      if (!storage)
        return EAI_MEMORY;

      struct sockaddr_in6 *addr6 = (struct sockaddr_in6 *) storage;
      addr6->sin6_family = AF_INET6;
      addr6->sin6_port = htons (port);
      if (!inet_pton (AF_INET6, nodename, &addr6->sin6_addr))
        {
          /* hostent 사용이 필요할 수 있음. */
          he = gethostbyname (nodename);
          if (!he)
            return EAI_NONAME;
          memcpy (&addr6->sin6_addr, he->h_addr_list[0], sizeof (struct in6_addr));
        }
      size = sizeof (struct sockaddr_in6);
      tmp->ai_addrlen = size;
    }
# endif
  else
    {
      free (tmp);
      return EAI_FAMILY;
    }

  /* 반환 주소 설정.  */
  tmp->ai_next = NULL;
  *res = tmp;
  return 0;
}

#endif
======================================================================================
[lib/libxml/nanoftp.c 수정]
======================================================================================
/*netdb->winsock2 수정*/
#include "config.h"
/* libxml2 - Library for parsing XML documents
 * Copyright (C) 2006-2019 Free Software Foundation, Inc.
 *
 * This file is not part of the GNU gettext program, but is used with
 * GNU gettext.
 *
 * The original copyright notice is as follows:
 */

/*
 * Copyright (C) 1998-2012 Daniel Veillard.  All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is fur-
 * nished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FIT-
 * NESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/*
 * nanoftp.c: basic FTP client support
 *
 *  Reference: RFC 959
 */

#ifdef TESTING
#define STANDALONE
#define HAVE_STDLIB_H
#define HAVE_UNISTD_H
#define HAVE_SYS_SOCKET_H
#define HAVE_NETINET_IN_H
//#define HAVE_NETDB_H     // Commented out
#define HAVE_SYS_TIME_H
#endif /* TESTING */

#define IN_LIBXML
#include "libxml.h"

#ifdef LIBXML_FTP_ENABLED
#include <string.h>

#ifdef HAVE_STDLIB_H
#include <stdlib.h>
#endif
#ifdef HAVE_UNISTD_H
#include <unistd.h>
#endif
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#ifdef HAVE_ARPA_INET_H
#include <arpa/inet.h>
#endif
#ifdef HAVE_SYS_TIME_H
#include <sys/time.h>
#endif
#ifdef HAVE_SYS_SELECT_H
#include <sys/select.h>
#endif

// Replace <netdb.h> with Winsock headers
#ifdef _WIN32
#include <winsock2.h>
#include <ws2tcpip.h>
#else
#include <netdb.h>
#endif
#include <libxml/xmlmemory.h>
#include <libxml/parser.h>
#include <libxml/xmlerror.h>
#include <libxml/uri.h>
#include <libxml/nanoftp.h>
#include <libxml/globals.h>

/* #define DEBUG_FTP 1  */
#ifdef STANDALONE
#ifndef DEBUG_FTP
#define DEBUG_FTP 1
#endif
#endif

#if defined(_WIN32) && !defined(__CYGWIN__)
#include <wsockcompat.h>
#endif

/**
 * A couple portability macros
 */
#ifndef _WINSOCKAPI_
#if !defined(__BEOS__) || defined(__HAIKU__)
#define closesocket(s) close(s)  // No change required
#endif
#endif

#ifdef __BEOS__
#ifndef PF_INET
#define PF_INET AF_INET
#endif
#endif

#ifdef _AIX
#ifdef HAVE_BROKEN_SS_FAMILY
#define ss_family __ss_family
#endif
#endif

#ifndef XML_SOCKLEN_T
#define XML_SOCKLEN_T int   // Change to int for Winsock
#endif

#define FTP_COMMAND_OK		200
#define FTP_SYNTAX_ERROR	500
#define FTP_GET_PASSWD		331
#define FTP_BUF_SIZE		1024

#define XML_NANO_MAX_URLBUF	4096

typedef struct xmlNanoFTPCtxt {
    char *protocol;	/* the protocol name */
    char *hostname;	/* the host name */
    int port;		/* the port */
    char *path;		/* the path within the URL */
    char *user;		/* user string */
    char *passwd;	/* passwd string */
#ifdef SUPPORT_IP6
    struct sockaddr_storage ftpAddr; /* this is large enough to hold IPv6 address*/
#else
    struct sockaddr_in ftpAddr; /* the socket address struct */
#endif
    int passive;	/* currently we support only passive !!! */
    SOCKET controlFd;	/* the file descriptor for the control socket */
    SOCKET dataFd;	/* the file descriptor for the data socket */
    int state;		/* WRITE / READ / CLOSED */
    int returnValue;	/* the protocol return value */
    /* buffer for data received from the control connection */
    char controlBuf[FTP_BUF_SIZE + 1];
    int controlBufIndex;
    int controlBufUsed;
    int controlBufAnswer;
} xmlNanoFTPCtxt, *xmlNanoFTPCtxtPtr;

static int initialized = 0;
static char *proxy = NULL;	/* the proxy name if any */
static int proxyPort = 0;	/* the proxy port if any */
static char *proxyUser = NULL;	/* user for proxy authentication */
static char *proxyPasswd = NULL;/* passwd for proxy authentication */
static int proxyType = 0;	/* uses TYPE or a@b ? */

#ifdef SUPPORT_IP6
static
int have_ipv6(void) {
    int s;

    s = socket (AF_INET6, SOCK_STREAM, 0);
    if (s != INVALID_SOCKET) {  // Change to INVALID_SOCKET for Winsock
	closesocket(s);  // No change required
	return (1);
    }
    return (0);
}
#endif

/**
 * xmlFTPErrMemory:
 * @extra:  extra informations
 *
 * Handle an out of memory condition
 */
static void
xmlFTPErrMemory(const char *extra)
{
    __xmlSimpleError(XML_FROM_FTP, XML_ERR_NO_MEMORY, NULL, NULL, extra);
}

/**
 * xmlNanoFTPInit:
 *
 * Initialize the FTP protocol layer.
 * Currently it just checks for proxy informations,
 * and get the hostname
 */

void
xmlNanoFTPInit(void) {
    const char *env;
#ifdef _WINSOCKAPI_
    WSADATA wsaData;
#endif

    if (initialized)
	return;

#ifdef _WINSOCKAPI_
    if (WSAStartup(MAKEWORD(1, 1), &wsaData) != 0)
	return;
#endif

    proxyPort = 21;
    env = getenv("no_proxy");
    if (env && ((env[0] == '*' ) && (env[1] == 0)))
	return;
    env = getenv("ftp_proxy");
    if (env != NULL) {
	xmlNanoFTPScanProxy(env);
    } else {
	env = getenv("FTP_PROXY");
	if (env != NULL) {
	    xmlNanoFTPScanProxy(env);
	}
    }
    env = getenv("ftp_proxy_user");
    if (env != NULL) {
	proxyUser = xmlMemStrdup(env);
    }
    env = getenv("ftp_proxy_password");
    if (env != NULL) {
	proxyPasswd = xmlMemStrdup(env);
    }
    initialized = 1;
}

/**
 * xmlNanoFTPCleanup:
 *
 * Cleanup the FTP protocol layer. This cleanup proxy informations.
 */

void
xmlNanoFTPCleanup(void) {
    if (proxy != NULL) {
	xmlFree(proxy);
	proxy = NULL;
    }
    if (proxyUser != NULL) {
	xmlFree(proxyUser);
	proxyUser = NULL;
    }
    if (proxyPasswd != NULL) {
	xmlFree(proxyPasswd);
	proxyPasswd = NULL;
    }
#ifdef _WINSOCKAPI_
    if (initialized)
	WSACleanup();
#endif
    initialized = 0;
}

void* xmlNanoFTPNewCtxt(const char *URL) {
    WSADATA wsaData;
    if (WSAStartup(MAKEWORD(2, 2), &wsaData) != 0) {
        fprintf(stderr, "WSAStartup failed\n");
        return NULL; // Handle error appropriately
    }

    xmlNanoFTPCtxtPtr ret;
    char *unescaped;

    ret = (xmlNanoFTPCtxtPtr) xmlMalloc(sizeof(xmlNanoFTPCtxt));
    if (ret == NULL) {
        xmlFTPErrMemory("allocating FTP context");
        WSACleanup(); // Cleanup Winsock
        return NULL;
    }

    memset(ret, 0, sizeof(xmlNanoFTPCtxt));
    ret->port = 21;
    ret->passive = 1;
    ret->returnValue = 0;
    ret->controlBufIndex = 0;
    ret->controlBufUsed = 0;
    ret->controlFd = INVALID_SOCKET;

    unescaped = xmlURIUnescapeString(URL, 0, NULL);
    if (unescaped != NULL) {
        xmlNanoFTPScanURL(ret, unescaped);
        xmlFree(unescaped);
    } else if (URL != NULL) {
        xmlNanoFTPScanURL(ret, URL);
    }

    // Cleanup Winsock before returning
    WSACleanup(); 
    return ret;
}

/**
 * xmlNanoFTPFreeCtxt:
 * @ctx:  an FTP context
 *
 * Frees the context after closing the connection.
 */
void
xmlNanoFTPFreeCtxt(void * ctx) {
    xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;
    if (ctxt == NULL) return;
    if (ctxt->hostname != NULL) xmlFree(ctxt->hostname);
    if (ctxt->protocol != NULL) xmlFree(ctxt->protocol);
    if (ctxt->path != NULL) xmlFree(ctxt->path);
    if (ctxt->user != NULL) xmlFree(ctxt->user);
    if (ctxt->passwd != NULL) xmlFree(ctxt->passwd);
    ctxt->passive = 1;

    if (ctxt->controlFd != INVALID_SOCKET) 
        closesocket(ctxt->controlFd);  // Close the socket
    ctxt->controlFd = INVALID_SOCKET;
    ctxt->controlBufIndex = -1;
    ctxt->controlBufUsed = -1;
    xmlFree(ctxt);
}

/**
 * xmlNanoFTPParseResponse:
 * @buf:  the buffer containing the response
 * @len:  the buffer length
 *
 * Parsing of the server answer, we just extract the code.
 *
 * returns 0 for errors
 *     +XXX for last line of response
 *     -XXX for response to be continued
 */
static int
xmlNanoFTPParseResponse(char *buf, int len) {
    int val = 0;

    if (len < 3) return(-1);
    if ((*buf >= '0') && (*buf <= '9'))
        val = val * 10 + (*buf - '0');
    else
        return(0);
    buf++;
    if ((*buf >= '0') && (*buf <= '9'))
        val = val * 10 + (*buf - '0');
    else
        return(0);
    buf++;
    if ((*buf >= '0') && (*buf <= '9'))
        val = val * 10 + (*buf - '0');
    else
        return(0);
    buf++;
    if (*buf == '-')
        return(-val);
    return(val);
}

/**
 * xmlNanoFTPGetMore:
 * @ctx:  an FTP context
 *
 * Read more information from the FTP control connection
 * Returns the number of bytes read, < 0 indicates an error
 */
static int
xmlNanoFTPGetMore(void *ctx) {
    xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;
    int len;
    int size;

    if ((ctxt == NULL) || (ctxt->controlFd == INVALID_SOCKET)) return(-1);

    if ((ctxt->controlBufIndex < 0) || (ctxt->controlBufIndex > FTP_BUF_SIZE)) {
#ifdef DEBUG_FTP
        xmlGenericError(xmlGenericErrorContext,
		"xmlNanoFTPGetMore : controlBufIndex = %d\n",
		ctxt->controlBufIndex);
#endif
	return(-1);
    }

    if ((ctxt->controlBufUsed < 0) || (ctxt->controlBufUsed > FTP_BUF_SIZE)) {
#ifdef DEBUG_FTP
        xmlGenericError(xmlGenericErrorContext,
		"xmlNanoFTPGetMore : controlBufUsed = %d\n",
		ctxt->controlBufUsed);
#endif
	return(-1);
    }
    if (ctxt->controlBufIndex > ctxt->controlBufUsed) {
#ifdef DEBUG_FTP
        xmlGenericError(xmlGenericErrorContext,
		"xmlNanoFTPGetMore : controlBufIndex > controlBufUsed %d > %d\n",
	       ctxt->controlBufIndex, ctxt->controlBufUsed);
#endif
	return(-1);
    }

    /*
     * First pack the control buffer
     */
    if (ctxt->controlBufIndex > 0) {
	memmove(&ctxt->controlBuf[0], &ctxt->controlBuf[ctxt->controlBufIndex],
		ctxt->controlBufUsed - ctxt->controlBufIndex);
	ctxt->controlBufUsed -= ctxt->controlBufIndex;
	ctxt->controlBufIndex = 0;
    }
    size = FTP_BUF_SIZE - ctxt->controlBufUsed;
    if (size == 0) {
#ifdef DEBUG_FTP
        xmlGenericError(xmlGenericErrorContext,
		"xmlNanoFTPGetMore : buffer full %d \n", ctxt->controlBufUsed);
#endif
	return(0);
    }

    /*
     * Read the amount left on the control connection
     */
    if ((len = recv(ctxt->controlFd, &ctxt->controlBuf[ctxt->controlBufIndex],
		    size, 0)) < 0) {
	__xmlIOErr(XML_FROM_FTP, 0, "recv failed");
	closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;
        return(-1);
    }
#ifdef DEBUG_FTP
    xmlGenericError(xmlGenericErrorContext,
	    "xmlNanoFTPGetMore : read %d [%d - %d]\n", len,
	   ctxt->controlBufUsed, ctxt->controlBufUsed + len);
#endif
    ctxt->controlBufUsed += len;
    ctxt->controlBuf[ctxt->controlBufUsed] = 0;

    return(len);
}

/**
 * xmlNanoFTPReadResponse:
 * @ctx:  an FTP context
 *
 * Read the response from the FTP server after a command.
 * Returns the code number
 */
static int
xmlNanoFTPReadResponse(void *ctx) {
    xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;
    char *ptr, *end;
    int len;
    int res = -1, cur = -1;

    if ((ctxt == NULL) || (ctxt->controlFd == INVALID_SOCKET)) return(-1);

get_more:
    /*
     * Assumes everything up to controlBuf[controlBufIndex] has been read
     * and analyzed.
     */
    len = xmlNanoFTPGetMore(ctx);
    if (len < 0) {
        return(-1);
    }
    if ((ctxt->controlBufUsed == 0) && (len == 0)) {
        return(-1);
    }
    ptr = &ctxt->controlBuf[ctxt->controlBufIndex];
    end = &ctxt->controlBuf[ctxt->controlBufUsed];

#ifdef DEBUG_FTP
    xmlGenericError(xmlGenericErrorContext,
	    "\n<<<\n%s\n--\n", ptr);
#endif
    while (ptr < end) {
        cur = xmlNanoFTPParseResponse(ptr, end - ptr);
	if (cur > 0) {
	    /*
	     * Successfully scanned the control code, scratch
	     * till the end of the line, but keep the index to be
	     * able to analyze the result if needed.
	     */
	    res = cur;
	    ptr += 3;
	    ctxt->controlBufAnswer = ptr - ctxt->controlBuf;
	    while ((ptr < end) && (*ptr != '\n')) ptr++;
	    if (*ptr == '\n') ptr++;
	    if (*ptr == '\r') ptr++;
	    break;
	}
	while ((ptr < end) && (*ptr != '\n')) ptr++;
	if (ptr >= end) {
	    ctxt->controlBufIndex = ctxt->controlBufUsed;
	    goto get_more;
	}
	if (*ptr != '\r') ptr++;
    }

    if (res < 0) goto get_more;
    ctxt->controlBufIndex = ptr - ctxt->controlBuf;
#ifdef DEBUG_FTP
    ptr = &ctxt->controlBuf[ctxt->controlBufIndex];
    xmlGenericError(xmlGenericErrorContext, "\n---\n%s\n--\n", ptr);
#endif

#ifdef DEBUG_FTP
    xmlGenericError(xmlGenericErrorContext, "Got %d\n", res);
#endif
    return(res / 100);
}

/**
 * xmlNanoFTPGetResponse:
 * @ctx:  an FTP context
 *
 * Get the response from the FTP server after a command.
 * Returns the code number
 */

int
xmlNanoFTPGetResponse(void *ctx) {
    int res;

    res = xmlNanoFTPReadResponse(ctx);

    return(res);
}

/**
 * xmlNanoFTPCheckResponse:
 * @ctx:  an FTP context
 *
 * Check if there is a response from the FTP server after a command.
 * Returns the code number, or 0
 */

int
xmlNanoFTPCheckResponse(void *ctx) {
    xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;
    int res;

    if ((ctxt == NULL) || (ctxt->controlFd == INVALID_SOCKET)) return(-1);
    if (ctxt->controlBufIndex >= 0) {
        res = xmlNanoFTPReadResponse(ctx);
        if (res >= 0)
            return res;
    }
    return (xmlNanoFTPGetResponse(ctx));
}

/**
 * xmlNanoFTPInit:
 * @ctx:  an FTP context
 *
 * Initializes the FTP context
 */
void
xmlNanoFTPInit(void *ctx) {
    xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;
    if (ctxt == NULL) return;

    // Additional initialization code for the context if needed
}

static int xmlNanoFTPSendUser(void *ctx) {
    XmlNanoFTPCtxt *ctxt = (XmlNanoFTPCtxt *)ctx;
    char buf[200];
    int len;
    int res;

    if (ctxt->user == NULL)
        snprintf(buf, sizeof(buf), "USER anonymous\r\n");
    else
        snprintf(buf, sizeof(buf), "USER %s\r\n", ctxt->user);

    len = strlen(buf);
#ifdef DEBUG_FTP
    fprintf(stderr, "%s", buf);  // xmlGenericError 대신 fprintf 사용
#endif
    res = send(ctxt->controlFd, buf, len, 0);
    if (res < 0) {
        fprintf(stderr, "send failed\n");  // __xmlIOErr 대신 사용
        return res;
    }
    return 0;
}

static int xmlNanoFTPSendPasswd(void *ctx) {
    XmlNanoFTPCtxt *ctxt = (XmlNanoFTPCtxt *)ctx;
    char buf[200];
    int len;
    int res;

    if (ctxt->passwd == NULL)
        snprintf(buf, sizeof(buf), "PASS anonymous@\r\n");
    else
        snprintf(buf, sizeof(buf), "PASS %s\r\n", ctxt->passwd);

    len = strlen(buf);
#ifdef DEBUG_FTP
    fprintf(stderr, "%s", buf);  // xmlGenericError 대신 fprintf 사용
#endif
    res = send(ctxt->controlFd, buf, len, 0);
    if (res < 0) {
        fprintf(stderr, "send failed\n");  // __xmlIOErr 대신 사용
        return res;
    }
    return 0;
}

int xmlNanoFTPQuit(void *ctx) {
    XmlNanoFTPCtxt *ctxt = (XmlNanoFTPCtxt *)ctx;
    char buf[200];
    int len, res;

    if (ctxt == NULL || ctxt->controlFd == -1) return -1;

    snprintf(buf, sizeof(buf), "QUIT\r\n");
    len = strlen(buf);
#ifdef DEBUG_FTP
    fprintf(stderr, "%s", buf);  // xmlGenericError 대신 fprintf 사용
#endif
    res = send(ctxt->controlFd, buf, len, 0);
    if (res < 0) {
        fprintf(stderr, "send failed\n");  // __xmlIOErr 대신 사용
        return res;
    }
    return 0;
}

int xmlNanoFTPConnect(void *ctx) {
    XmlNanoFTPCtxt *ctxt = (XmlNanoFTPCtxt *)ctx;
    struct hostent *hp;
    int port = 21; // FTP 기본 포트
    int res;
    int addrlen = sizeof(struct sockaddr_in);

    if (ctxt == NULL)
        return -1;
    if (ctxt->user == NULL)
        return -1;

    // FTP 서버 주소 설정
    memset(&ctxt->ftpAddr, 0, sizeof(ctxt->ftpAddr));
    ctxt->ftpAddr.sin_family = AF_INET;
    ctxt->ftpAddr.sin_port = htons(port);
    
    // FTP 서버 IP 주소 확인
    hp = gethostbyname("ftp.example.com");  // FTP 서버 도메인으로 변경하세요.
    if (hp == NULL) {
        fprintf(stderr, "gethostbyname failed\n"); // __xmlIOErr 대신 사용
        return -1;
    }
    
    memcpy(&ctxt->ftpAddr.sin_addr, hp->h_addr, hp->h_length);

    // 소켓 생성
    ctxt->controlFd = socket(AF_INET, SOCK_STREAM, 0);
    if (ctxt->controlFd < 0) {
        fprintf(stderr, "socket failed\n");  // __xmlIOErr 대신 사용
        return -1;
    }

    // FTP 서버에 연결
    if (connect(ctxt->controlFd, (struct sockaddr *)&ctxt->ftpAddr, addrlen) < 0) {
        fprintf(stderr, "Failed to create a connection\n");  // __xmlIOErr 대신 사용
        close(ctxt->controlFd);  // 소켓 닫기
        return -1;
    }

    // 서버로부터 응답 대기 (예: 220 Welcome 메시지)
    char response[512];
    res = recv(ctxt->controlFd, response, sizeof(response) - 1, 0);
    if (res < 0) {
        fprintf(stderr, "recv failed\n");  // __xmlIOErr 대신 사용
        close(ctxt->controlFd);  // 소켓 닫기
        return -1;
    }
    response[res] = '\0'; // 문자열 종료
    printf("Response: %s", response);

    return 0;
}

int main() {
    XmlNanoFTPCtxt ftpCtx;
    ftpCtx.user = "your_username";  // 사용자 이름 입력
    ftpCtx.passwd = "your_password"; // 비밀번호 입력
    ftpCtx.controlFd = -1;

    if (xmlNanoFTPConnect(&ftpCtx) < 0) {
        fprintf(stderr, "Failed to connect to FTP server\n");
        return EXIT_FAILURE;
    }

    if (xmlNanoFTPSendUser(&ftpCtx) < 0) {
        fprintf(stderr, "Failed to send user command\n");
        xmlNanoFTPQuit(&ftpCtx);
        return EXIT_FAILURE;
    }

    if (xmlNanoFTPSendPasswd(&ftpCtx) < 0) {
        fprintf(stderr, "Failed to send password command\n");
        xmlNanoFTPQuit(&ftpCtx);
        return EXIT_FAILURE;
    }

    // 추가 명령어 및 처리 로직을 여기에 추가하세요.

    xmlNanoFTPQuit(&ftpCtx);
    close(ftpCtx.controlFd); // 소켓 닫기
    return EXIT_SUCCESS;
}

void* xmlNanoFTPConnectTo(const char *server, int port) {
    xmlNanoFTPCtxtPtr ctxt;
    int res;

    xmlNanoFTPInit(); // 초기화 함수가 정의되어 있어야 합니다.
    if (server == NULL)
        return NULL;
    if (port <= 0)
        return NULL;

    ctxt = (xmlNanoFTPCtxtPtr) xmlNanoFTPNewCtxt(NULL); // 새로운 FTP 컨텍스트 생성
    if (ctxt == NULL)
        return NULL;

    ctxt->hostname = _strdup(server); // Windows에서는 _strdup 사용
    if (ctxt->hostname == NULL) {
        xmlNanoFTPFreeCtxt(ctxt); // 메모리 해제 함수 정의 필요
        return NULL;
    }

    if (port != 0)
        ctxt->port = port;

    res = xmlNanoFTPConnect(ctxt); // 연결 함수가 정의되어 있어야 합니다.
    if (res < 0) {
        xmlNanoFTPFreeCtxt(ctxt);
        return NULL;
    }
    return ctxt;
}

int xmlNanoFTPCwd(void *ctx, const char *directory) {
    xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;
    char buf[400];
    int len;
    int res;

    if ((ctxt == NULL) || (ctxt->controlFd == INVALID_SOCKET)) return -1;
    if (directory == NULL) return 0;

    snprintf(buf, sizeof(buf), "CWD %s\r\n", directory);
    buf[sizeof(buf) - 1] = 0;
    len = strlen(buf);
#ifdef DEBUG_FTP
    printf("%s", buf); // xmlGenericError 대신 printf로 변경
#endif
    res = send(ctxt->controlFd, buf, len, 0);
    if (res < 0) {
        __xmlIOErr(XML_FROM_FTP, 0, "send failed"); // 오류 처리 함수 정의 필요
        return res;
    }
    res = xmlNanoFTPGetResponse(ctxt); // 응답을 가져오는 함수가 정의되어 있어야 합니다.
    if (res == 4) {
        return -1;
    }
    if (res == 2) return 1;
    if (res == 5) {
        return 0;
    }
    return 0;
}

int xmlNanoFTPDele(void *ctx, const char *file) {
    xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;
    char buf[400];
    int len;
    int res;

    if ((ctxt == NULL) || (ctxt->controlFd == INVALID_SOCKET) || (file == NULL)) return -1;

    snprintf(buf, sizeof(buf), "DELE %s\r\n", file);
    buf[sizeof(buf) - 1] = 0;
    len = strlen(buf);
#ifdef DEBUG_FTP
    printf("%s", buf); // xmlGenericError 대신 printf로 변경
#endif
    res = send(ctxt->controlFd, buf, len, 0);
    if (res < 0) {
        __xmlIOErr(XML_FROM_FTP, 0, "send failed"); // 오류 처리 함수 정의 필요
        return res;
    }
    res = xmlNanoFTPGetResponse(ctxt); // 응답을 가져오는 함수가 정의되어 있어야 합니다.
    if (res == 4) {
        return -1;
    }
    if (res == 2) return 1;
    if (res == 5) {
        return 0;
    }
    return 0;
}

SOCKET xmlNanoFTPGetConnection(void *ctx) {
    xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;
    char buf[200], *cur;
    int len, i;
    int res;
    unsigned char ad[6], *adp, *portp;
    unsigned int temp[6];
    struct sockaddr_in dataAddr;
    int dataAddrLen = sizeof(dataAddr);

    if (ctxt == NULL) return INVALID_SOCKET;

    memset(&dataAddr, 0, sizeof(dataAddr));

    ctxt->dataFd = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
    if (ctxt->dataFd == INVALID_SOCKET) {
        __xmlIOErr(XML_FROM_FTP, 0, "socket failed"); // 오류 처리 함수 정의 필요
        return INVALID_SOCKET;
    }

    if (ctxt->passive) {
        snprintf(buf, sizeof(buf), "PASV\r\n");
        len = strlen(buf);
#ifdef DEBUG_FTP
        printf("%s", buf); // xmlGenericError 대신 printf로 변경
#endif
        res = send(ctxt->controlFd, buf, len, 0);
        if (res < 0) {
            __xmlIOErr(XML_FROM_FTP, 0, "send failed"); // 오류 처리 함수 정의 필요
            closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;
            return INVALID_SOCKET;
        }
        res = xmlNanoFTPReadResponse(ctx); // 응답을 읽는 함수가 정의되어 있어야 합니다.
        if (res != 2) {
            closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;
            return INVALID_SOCKET;
        }
        
        cur = &ctxt->controlBuf[ctxt->controlBufAnswer];
        if (sscanf(cur, "%u,%u,%u,%u,%u,%u", &temp[0], &temp[1], &temp[2], &temp[3], &temp[4], &temp[5]) != 6) {
            __xmlIOErr(XML_FROM_FTP, XML_FTP_PASV_ANSWER, "Invalid answer to PASV\n"); // 오류 처리 함수 정의 필요
            closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;
            return INVALID_SOCKET;
        }
        
        for (i = 0; i < 6; i++) ad[i] = (unsigned char)(temp[i] & 0xff);
        memcpy(&dataAddr.sin_addr, &ad[0], 4);
        dataAddr.sin_port = htons((unsigned short)((temp[4] << 8) + temp[5])); // 포트 설정
    } else {
        getsockname(ctxt->dataFd, (struct sockaddr*)&dataAddr, &dataAddrLen);
        dataAddr.sin_port = 0;

        if (bind(ctxt->dataFd, (struct sockaddr*)&dataAddr, dataAddrLen) < 0) {
            __xmlIOErr(XML_FROM_FTP, 0, "bind failed"); // 오류 처리 함수 정의 필요
            closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;
            return INVALID_SOCKET;
        }
        if (listen(ctxt->dataFd, 1) < 0) {
            __xmlIOErr(XML_FROM_FTP, 0, "listen failed"); // 오류 처리 함수 정의 필요
            closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;
            return INVALID_SOCKET;
        }
    }

    // 연결
    if (connect(ctxt->dataFd, (struct sockaddr*)&dataAddr, dataAddrLen) < 0) {
        __xmlIOErr(XML_FROM_FTP, 0, "Failed to create a data connection"); // 오류 처리 함수 정의 필요
        closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;
        return INVALID_SOCKET;
    }

    return ctxt->dataFd;
}

int xmlNanoFTPCloseConnection(void *ctx) {
    xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;
    int res;
    fd_set rfd, efd;
    struct timeval tv;

    if ((ctxt == NULL) || (ctxt->controlFd == INVALID_SOCKET)) return(-1);

    closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;
    tv.tv_sec = 15;
    tv.tv_usec = 0;
    FD_ZERO(&rfd);
    FD_SET(ctxt->controlFd, &rfd);
    FD_ZERO(&efd);
    FD_SET(ctxt->controlFd, &efd);
    res = select(ctxt->controlFd + 1, &rfd, NULL, &efd, &tv);
    if (res < 0) {
#ifdef DEBUG_FTP
        perror("select");
#endif
        closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;
        return(-1);
    }
    if (res == 0) {
#ifdef DEBUG_FTP
        fprintf(stderr, "xmlNanoFTPCloseConnection: timeout\n");
#endif
        closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;
    } else {
        res = xmlNanoFTPGetResponse(ctxt);
        if (res != 2) {
            closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;
            return(-1);
        }
    }
    return(0);
}

static int xmlNanoFTPParseList(const char *list, ftpListCallback callback, void *userData) {
    const char *cur = list;
    char filename[151];
    char attrib[11];
    char owner[11];
    char group[11];
    char month[4];
    int year = 0;
    int minute = 0;
    int hour = 0;
    int day = 0;
    unsigned long size = 0;
    int links = 0;
    int i;

    if (!strncmp(cur, "total", 5)) {
        cur += 5;
        while (*cur == ' ') cur++;
        while ((*cur >= '0') && (*cur <= '9'))
            links = (links * 10) + (*cur++ - '0');
        while ((*cur == ' ') || (*cur == '\n')  || (*cur == '\r'))
            cur++;
        return(cur - list);
    } else if (*list == '+') {
        return(0);
    } else {
        while ((*cur == ' ') || (*cur == '\n')  || (*cur == '\r'))
            cur++;
        if (*cur == 0) return(0);
        i = 0;
        while (*cur != ' ') {
            if (i < 10)
                attrib[i++] = *cur;
            cur++;
            if (*cur == 0) return(0);
        }
        attrib[10] = 0;
        while (*cur == ' ') cur++;
        if (*cur == 0) return(0);
        while ((*cur >= '0') && (*cur <= '9'))
            links = (links * 10) + (*cur++ - '0');
        while (*cur == ' ') cur++;
        if (*cur == 0) return(0);
        i = 0;
        while (*cur != ' ') {
            if (i < 10)
                owner[i++] = *cur;
            cur++;
            if (*cur == 0) return(0);
        }
        owner[i] = 0;
        while (*cur == ' ') cur++;
        if (*cur == 0) return(0);
        i = 0;
        while (*cur != ' ') {
            if (i < 10)
                group[i++] = *cur;
            cur++;
            if (*cur == 0) return(0);
        }
        group[i] = 0;
        while (*cur == ' ') cur++;
        if (*cur == 0) return(0);
        while ((*cur >= '0') && (*cur <= '9'))
            size = (size * 10) + (*cur++ - '0');
        while (*cur == ' ') cur++;
        if (*cur == 0) return(0);
        i = 0;
        while (*cur != ' ') {
            if (i < 3)
                month[i++] = *cur;
            cur++;
            if (*cur == 0) return(0);
        }
        month[i] = 0;
        while (*cur == ' ') cur++;
        if (*cur == 0) return(0);
        while ((*cur >= '0') && (*cur <= '9'))
            day = (day * 10) + (*cur++ - '0');
        while (*cur == ' ') cur++;
        if (*cur == 0) return(0);
        if ((cur[1] == 0) || (cur[2] == 0)) return(0);
        if ((cur[1] == ':') || (cur[2] == ':')) {
            while ((*cur >= '0') && (*cur <= '9'))
                hour = (hour * 10) + (*cur++ - '0');
            if (*cur == ':') cur++;
            while ((*cur >= '0') && (*cur <= '9'))
                minute = (minute * 10) + (*cur++ - '0');
        } else {
            while ((*cur >= '0') && (*cur <= '9'))
                year = (year * 10) + (*cur++ - '0');
        }
        while (*cur == ' ') cur++;
        if (*cur == 0) return(0);
        i = 0;
        while ((*cur != '\n')  && (*cur != '\r')) {
            if (i < 150)
                filename[i++] = *cur;
            cur++;
            if (*cur == 0) return(0);
        }
        filename[i] = 0;
        if ((*cur != '\n') && (*cur != '\r'))
            return(0);
        while ((*cur == '\n')  || (*cur == '\r'))
            cur++;
    }
    if (callback != NULL) {
        callback(userData, filename, attrib, owner, group, size, links,
            year, month, day, hour, minute);
    }
    return(cur - list);
}

int xmlNanoFTPList(void *ctx, ftpListCallback callback, void *userData, const char *filename) {
    xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;
    char buf[4096 + 1];
    int len, res;
    int indx = 0, base;
    fd_set rfd, efd;
    struct timeval tv;

    if (ctxt == NULL) return (-1);
    if (filename == NULL) {
        if (xmlNanoFTPCwd(ctxt, ctxt->path) < 1)
            return(-1);
        ctxt->dataFd = xmlNanoFTPGetConnection(ctxt);
        if (ctxt->dataFd == INVALID_SOCKET)
            return(-1);
        snprintf(buf, sizeof(buf), "LIST -L\r\n");
    } else {
        if (filename[0] != '/') {
            if (xmlNanoFTPCwd(ctxt, ctxt->path) < 1)
                return(-1);
        }
        ctxt->dataFd = xmlNanoFTPGetConnection(ctxt);
        if (ctxt->dataFd == INVALID_SOCKET)
            return(-1);
        snprintf(buf, sizeof(buf), "LIST -L %s\r\n", filename);
    }
    buf[sizeof(buf) - 1] = 0;
    len = strlen(buf);
#ifdef DEBUG_FTP
    fprintf(stderr, "%s", buf);
#endif
    res = send(ctxt->controlFd, buf, len, 0);
    if (res < 0) {
        __xmlIOErr(XML_FROM_FTP, 0, "send failed");
        closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;
        return(res);
    }
    res = xmlNanoFTPReadResponse(ctxt);
    if (res != 1) {
        closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;
        return(-res);
    }

    do {
        tv.tv_sec = 1;
        tv.tv_usec = 0;
        FD_ZERO(&rfd);
        FD_SET(ctxt->dataFd, &rfd);
        FD_ZERO(&efd);
        FD_SET(ctxt->dataFd, &efd);
        res = select(ctxt->dataFd + 1, &rfd, NULL, &efd, &tv);
        if (res < 0) {
#ifdef DEBUG_FTP
            perror("select");
#endif
            closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;
            return(-1);
        }
        if (res == 0) {
            if (indx > 0) {
                buf[indx] = 0;
                base = xmlNanoFTPParseList(buf, callback, userData);
                if (base <= 0) break;
                memmove(buf, &buf[base], indx - base);
                indx -= base;
            }
            continue;
        }
        res = recv(ctxt->dataFd, &buf[indx], sizeof(buf) - indx - 1, 0);
        if (res <= 0) break;
        indx += res;
        buf[indx] = 0;
        base = xmlNanoFTPParseList(buf, callback, userData);
        if (base <= 0) break;
        memmove(buf, &buf[base], indx - base);
        indx -= base;
    } while (1);

    if (indx > 0) {
        buf[indx] = 0;
        xmlNanoFTPParseList(buf, callback, userData);
    }
    closesocket(ctxt->dataFd);
    ctxt->dataFd = INVALID_SOCKET;
    res = xmlNanoFTPGetResponse(ctxt);
    if (res != 2) {
        return(-res);
    }
    return(0);
}

======================================================================================
[lib/libxml/nanohttp.c 수정]
======================================================================================
/*netdb->winsock2 수정*/
#include "config.h"
/* libxml2 - Library for parsing XML documents
 * Copyright (C) 2006-2019 Free Software Foundation, Inc.
 *
 * This file is not part of the GNU gettext program, but is used with
 * GNU gettext.
 *
 * The original copyright notice is as follows:
 */

/*
 * Copyright (C) 1998-2012 Daniel Veillard.  All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is fur-
 * nished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FIT-
 * NESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * daniel@veillard.com
 */

/*
 * nanohttp.c: minimalist HTTP GET implementation to fetch external subsets.
 *             focuses on size, streamability, reentrancy and portability
 *
 * This is clearly not a general purpose HTTP implementation
 * If you look for one, check:
 *         http://www.w3.org/Library/
 */

#define IN_LIBXML
#include "libxml.h"

#ifdef LIBXML_HTTP_ENABLED
#include <string.h>

#ifdef HAVE_STDLIB_H
#include <stdlib.h>
#endif
#ifdef HAVE_UNISTD_H
#include <unistd.h>
#endif
#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#ifdef HAVE_ARPA_INET_H
#include <arpa/inet.h>
#endif
#ifdef HAVE_WINSOCK2_H
#ifdef _WIN32
#include <winsock2.h>
#include <ws2tcpip.h>
#endif
#endif
#ifdef HAVE_RESOLV_H
#ifdef HAVE_ARPA_NAMESER_H
#include <arpa/nameser.h>
#endif
#include <resolv.h>
#endif
#ifdef HAVE_FCNTL_H
#include <fcntl.h>
#endif
#ifdef HAVE_ERRNO_H
#include <errno.h>
#endif
#ifdef HAVE_SYS_TIME_H
#include <sys/time.h>
#endif
#ifndef HAVE_POLL_H
#ifdef HAVE_SYS_SELECT_H
#include <sys/select.h>
#endif
#else
#include <poll.h>
#endif
#ifdef HAVE_STRINGS_H
#include <strings.h>
#endif
#ifdef LIBXML_ZLIB_ENABLED
#include <zlib.h>
#endif

#ifdef VMS
#include <stropts>
#define XML_SOCKLEN_T unsigned int
#endif

#if defined(_WIN32) && !defined(__CYGWIN__)
#include <wsockcompat.h>
#endif

#include <libxml/globals.h>
#include <libxml/xmlerror.h>
#include <libxml/xmlmemory.h>
#include <libxml/parser.h> /* for xmlStr(n)casecmp() */
#include <libxml/nanohttp.h>
#include <libxml/globals.h>
#include <libxml/uri.h>

/**
 * A couple portability macros
 */
#ifndef _WINSOCKAPI_
#if !defined(__BEOS__) || defined(__HAIKU__)
#define closesocket(s) close(s)
#endif
#define SOCKET int
#define INVALID_SOCKET (-1)
#endif

#ifdef __BEOS__
#ifndef PF_INET
#define PF_INET AF_INET
#endif
#endif

#ifndef XML_SOCKLEN_T
#define XML_SOCKLEN_T unsigned int
#endif

#ifdef STANDALONE
#define DEBUG_HTTP
#define xmlStrncasecmp(a, b, n) strncasecmp((char *)a, (char *)b, n)
#define xmlStrcasecmpi(a, b) strcasecmp((char *)a, (char *)b)
#endif

#define XML_NANO_HTTP_MAX_REDIR	10

#define XML_NANO_HTTP_CHUNK	4096

#define XML_NANO_HTTP_CLOSED	0
#define XML_NANO_HTTP_WRITE	1
#define XML_NANO_HTTP_READ	2
#define XML_NANO_HTTP_NONE	4

typedef struct xmlNanoHTTPCtxt {
    char *protocol;	/* the protocol name */
    char *hostname;	/* the host name */
    int port;		/* the port */
    char *path;		/* the path within the URL */
    char *query;	/* the query string */
    SOCKET fd;		/* the file descriptor for the socket */
    int state;		/* WRITE / READ / CLOSED */
    char *out;		/* buffer sent (zero terminated) */
    char *outptr;	/* index within the buffer sent */
    char *in;		/* the receiving buffer */
    char *content;	/* the start of the content */
    char *inptr;	/* the next byte to read from network */
    char *inrptr;	/* the next byte to give back to the client */
    int inlen;		/* len of the input buffer */
    int last;		/* return code for last operation */
    int returnValue;	/* the protocol return value */
    int version;        /* the protocol version */
    int ContentLength;  /* specified content length from HTTP header */
    char *contentType;	/* the MIME type for the input */
    char *location;	/* the new URL in case of redirect */
    char *authHeader;	/* contents of {WWW,Proxy}-Authenticate header */
    char *encoding;	/* encoding extracted from the contentType */
    char *mimeType;	/* Mime-Type extracted from the contentType */
#ifdef LIBXML_ZLIB_ENABLED
    z_stream *strm;	/* Zlib stream object */
    int usesGzip;	/* "Content-Encoding: gzip" was detected */
#endif
} xmlNanoHTTPCtxt, *xmlNanoHTTPCtxtPtr;

static int initialized = 0;
static char *proxy = NULL;	 /* the proxy name if any */
static int proxyPort;	/* the proxy port if any */
static unsigned int timeout = 60;/* the select() timeout in seconds */

static int xmlNanoHTTPFetchContent( void * ctx, char ** ptr, int * len );

/**
 * xmlHTTPErrMemory:
 * @extra:  extra informations
 *
 * Handle an out of memory condition
 */
static void
xmlHTTPErrMemory(const char *extra) { /*netdb->winsock2 수정*/
    __xmlSimpleError(XML_FROM_HTTP, XML_ERR_NO_MEMORY, NULL, NULL, extra);
}

/**
 * A portability function
 */
static int socket_errno(void) { /*netdb->winsock2 수정*/
#ifdef _WIN32
    int err = WSAGetLastError();  // Windows 소켓 오류 코드 가져오기
    switch(err) {
        case WSAECONNRESET:
            return(ECONNRESET);
        case WSAEINPROGRESS:
            return(EINPROGRESS);
        case WSAEINTR:
            return(EINTR);
        case WSAESHUTDOWN:
            return(ESHUTDOWN);
        case WSAEWOULDBLOCK:
            return(EWOULDBLOCK);
        default:
            return(err);
    }
#else
    return(errno);  // 비-Windows 환경에서는 errno 반환
#endif
}

#ifdef SUPPORT_IP6
static int have_ipv6(void) { /*netdb->winsock2 추가*/
    SOCKET s;  // Windows 소켓 타입 사용

    s = socket(AF_INET6, SOCK_STREAM, 0);
    if (s != INVALID_SOCKET) {
        closesocket(s);  // Windows 소켓에서 소켓 닫기
        return (1);
    }
    return (0);
}
#endif

/**
 * xmlNanoHTTPInit:
 *
 * Initialize the HTTP protocol layer.
 * Currently it just checks for proxy informations
 */

void xmlNanoHTTPInit(void) { /*netdb->winsock2 수정*/
    const char *env;
#ifdef _WIN32
    WSADATA wsaData;  // Windows 소켓 데이터 구조체
#endif

    if (initialized)
        return;

#ifdef _WIN32
    if (WSAStartup(MAKEWORD(2, 2), &wsaData) != 0)  // WSAStartup 호출
        return;
#endif

    if (proxy == NULL) {
        proxyPort = 80;
        env = getenv("no_proxy");
        if (env && ((env[0] == '*') && (env[1] == 0)))
            goto done;
        env = getenv("http_proxy");
        if (env != NULL) {
            xmlNanoHTTPScanProxy(env);
            goto done;
        }
        env = getenv("HTTP_PROXY");
        if (env != NULL) {
            xmlNanoHTTPScanProxy(env);
            goto done;
        }
    }
done:
    initialized = 1;
}

/**
 * xmlNanoHTTPCleanup:
 *
 * Cleanup the HTTP protocol layer.
 */

void xmlNanoHTTPCleanup(void) { /*netdb->winsock2 수정*/
#ifdef _WIN32
    WSACleanup();  // Windows 소켓 정리
#endif

    initialized = 0;
}

/**
 * xmlNanoHTTPScanProxy:
 * @url:  the URL to parse
 *
 * Parse the proxy URL
 */
static void xmlNanoHTTPScanProxy(const char *url) { /*netdb->winsock2 수정*/
    char *host = NULL;
    char *port = NULL;

    if (url == NULL) return;

    char *url_copy = strdup(url);
    char *p = strchr(url_copy, ':');  // ':'를 찾아서 포트 분리
    if (p != NULL) {
        *p++ = '\0';
        port = strdup(p);
    }
    host = strdup(url_copy);
    proxy = host;
    if (port != NULL) {
        proxyPort = atoi(port);
        free(port);
    } else {
        proxyPort = 80;  // 기본 포트
    }

    free(url_copy);
}

/**
 * xmlNanoHTTPFetch:
 * @url:  the URL to fetch
 * @length:  the fetched content length
 *
 * Fetch a URL using the HTTP protocol.
 * Returns the content, or NULL in case of error
 */
char * xmlNanoHTTPFetch(const char *url, int *length) { /*netdb->winsock2 수정*/
    char *ptr = NULL;
    xmlNanoHTTPCtxtPtr ctxt = xmlNanoHTTPNewCtxt(url);
    if (ctxt != NULL) {
        xmlNanoHTTPFetchContent(ctxt, &ptr, length);
        xmlNanoHTTPFreeCtxt(ctxt);
    }
    return ptr;
}

/**
 * xmlNanoHTTPNewCtxt:
 * @url:  the URL to fetch
 *
 * Create a new HTTP context for a specific URL.
 * Returns the context or NULL in case of error
 */
xmlNanoHTTPCtxtPtr xmlNanoHTTPNewCtxt(const char *url) { /*netdb->winsock2 수정*/
    xmlNanoHTTPCtxtPtr ctxt;
    char *protocol;
    char *hostname;
    char *path;
    char *query;
    int port;

    if (url == NULL)
        return NULL;

    ctxt = (xmlNanoHTTPCtxtPtr) xmlMalloc(sizeof(xmlNanoHTTPCtxt));
    if (ctxt == NULL) {
        xmlHTTPErrMemory("context creation");
        return NULL;
    }

    protocol = strchr(url, ':');  // ':'로 프로토콜 찾기
    if (protocol == NULL) {
        xmlNanoHTTPFreeCtxt(ctxt);
        return NULL;
    }
    *protocol = 0;
    protocol++;

    if (strncmp(url, "http", 4) != 0) {
        xmlNanoHTTPFreeCtxt(ctxt);
        return NULL;  // HTTP 프로토콜이 아니면 NULL 반환
    }

    hostname = strchr(protocol, '/');  // '/'로 호스트명 찾기
    if (hostname == NULL) {
        xmlNanoHTTPFreeCtxt(ctxt);
        return NULL;  // 호스트명이 없으면 NULL 반환
    }
    *hostname++ = 0;  // 종료 문자 설정
    path = strchr(hostname, '?');  // '?'로 경로 찾기
    if (path != NULL) {
        *path++ = 0;  // 종료 문자 설정
        query = path;  // 쿼리 문자열 설정
    } else {
        query = NULL;
    }
    port = 80;  // 기본 포트
    if (strcmp(hostname, "localhost") == 0) {  // 로컬호스트 경우
        ctxt->hostname = strdup("127.0.0.1");
    } else {
        ctxt->hostname = strdup(hostname);
    }
    ctxt->protocol = strdup("http");
    ctxt->port = port;
    ctxt->path = strdup(hostname);
    ctxt->query = query ? strdup(query) : NULL;
    ctxt->fd = INVALID_SOCKET;  // 유효하지 않은 소켓 설정
    ctxt->state = XML_NANO_HTTP_CLOSED;  // 상태 초기화
    ctxt->out = NULL;
    ctxt->outptr = NULL;
    ctxt->in = NULL;
    ctxt->content = NULL;
    ctxt->inptr = NULL;
    ctxt->inrptr = NULL;
    ctxt->inlen = 0;
    ctxt->last = 0;
    ctxt->returnValue = 0;
    ctxt->version = 0;
    ctxt->ContentLength = -1;
    ctxt->contentType = NULL;
    ctxt->location = NULL;
    ctxt->authHeader = NULL;
    ctxt->encoding = NULL;
    ctxt->mimeType = NULL;

    return ctxt;
}

/**
 * xmlNanoHTTPFreeCtxt:
 * @ctxt:  the context to free
 *
 * Free the HTTP context.
 */
void xmlNanoHTTPFreeCtxt(xmlNanoHTTPCtxtPtr ctxt) { /*netdb->winsock2 수정*/
    if (ctxt == NULL)
        return;

    if (ctxt->protocol) xmlFree(ctxt->protocol);
    if (ctxt->hostname) xmlFree(ctxt->hostname);
    if (ctxt->path) xmlFree(ctxt->path);
    if (ctxt->query) xmlFree(ctxt->query);
    if (ctxt->out) xmlFree(ctxt->out);
    if (ctxt->in) xmlFree(ctxt->in);
    if (ctxt->content) xmlFree(ctxt->content);
    if (ctxt->contentType) xmlFree(ctxt->contentType);
    if (ctxt->location) xmlFree(ctxt->location);
    if (ctxt->authHeader) xmlFree(ctxt->authHeader);
    if (ctxt->encoding) xmlFree(ctxt->encoding);
    if (ctxt->mimeType) xmlFree(ctxt->mimeType);
    xmlFree(ctxt);
}

/**
 * xmlNanoHTTPFetchContent:
 * @ctxt:  the context
 * @ptr:   pointer to where the fetched content will be stored
 * @len:   pointer to where the fetched content length will be stored
 *
 * Fetch the content from the URL associated with the context.
 */
static int xmlNanoHTTPFetchContent(xmlNanoHTTPCtxtPtr ctxt, char **ptr, int *len) { /*netdb->winsock2 수정*/
    /* 본 함수 구현 필요 */
    // ...
    return 0;  // 성공 시 0 반환
}

/**
 * xmlNanoHTTPFetchClose:
 * @ctxt:  the context to close
 *
 * Close the HTTP context.
 */
void xmlNanoHTTPFetchClose(xmlNanoHTTPCtxtPtr ctxt) { /*netdb->winsock2 수정*/
    if (ctxt == NULL)
        return;

    if (ctxt->fd != INVALID_SOCKET) {
        closesocket(ctxt->fd);  // Windows 소켓에서 소켓 닫기
        ctxt->fd = INVALID_SOCKET;  // 유효하지 않은 소켓으로 설정
    }
}

#endif /* LIBXML_HTTP_ENABLED */

static char *
xmlNanoHTTPReadLine(xmlNanoHTTPCtxtPtr ctxt) {
    char buf[4096];
    char *bp = buf;
    int rc;

    while (bp - buf < 4095) {
        if (ctxt->inrptr == ctxt->inptr) {
            if ((rc = xmlNanoHTTPRecv(ctxt)) == 0) {
                if (bp == buf)
                    return(NULL);
                else
                    *bp = 0;
                return(xmlMemStrdup(buf));
            }
            else if (rc == -1) {
                return(NULL);
            }
        }
        *bp = *ctxt->inrptr++;
        if (*bp == '\n') {
            *bp = 0;
            return(xmlMemStrdup(buf));
        }
        if (*bp != '\r')
            bp++;
    }
    buf[4095] = 0;
    return(xmlMemStrdup(buf));
}

static void
xmlNanoHTTPScanAnswer(xmlNanoHTTPCtxtPtr ctxt, const char *line) {
    const char *cur = line;

    if (line == NULL) return;

    if (!strncmp(line, "HTTP/", 5)) {
        int version = 0;
        int ret = 0;

        cur += 5;
        while ((*cur >= '0') && (*cur <= '9')) {
            version *= 10;
            version += *cur - '0';
            cur++;
        }
        if (*cur == '.') {
            cur++;
            if ((*cur >= '0') && (*cur <= '9')) {
                version *= 10;
                version += *cur - '0';
                cur++;
            }
            while ((*cur >= '0') && (*cur <= '9'))
                cur++;
        } else
            version *= 10;
        if ((*cur != ' ') && (*cur != '\t')) return;
        while ((*cur == ' ') || (*cur == '\t')) cur++;
        if ((*cur < '0') || (*cur > '9')) return;
        while ((*cur >= '0') && (*cur <= '9')) {
            ret *= 10;
            ret += *cur - '0';
            cur++;
        }
        if ((*cur != 0) && (*cur != ' ') && (*cur != '\t')) return;
        ctxt->returnValue = ret;
        ctxt->version = version;
    } else if (!xmlStrncasecmp(BAD_CAST line, BAD_CAST "Content-Type:", 13)) {
        // Similar parsing code as before...
    } else if (!xmlStrncasecmp(BAD_CAST line, BAD_CAST "Location:", 9)) {
        // Similar parsing code as before...
    } else if (!xmlStrncasecmp(BAD_CAST line, BAD_CAST "WWW-Authenticate:", 17)) {
        // Similar parsing code as before...
    }
    // More parsing cases as needed...
}

static SOCKET
xmlNanoHTTPConnectAttempt(struct sockaddr *addr) {
    SOCKET s;
    int addrlen;

#ifdef SUPPORT_IP6
    if (addr->sa_family == AF_INET6) {
        s = socket(AF_INET6, SOCK_STREAM, IPPROTO_TCP);
        addrlen = sizeof(struct sockaddr_in6);
    } else
#endif
    {
        s = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
        addrlen = sizeof(struct sockaddr_in);
    }

    if (s == INVALID_SOCKET) {
#ifdef DEBUG_HTTP
        perror("socket");
#endif
        __xmlIOErr(XML_FROM_HTTP, 0, "socket failed\n");
        return INVALID_SOCKET;
    }

    // Set the socket to non-blocking mode
    u_long mode = 1; // 1 to enable non-blocking socket
    if (ioctlsocket(s, FIONBIO, &mode) != NO_ERROR) {
        __xmlIOErr(XML_FROM_HTTP, 0, "ioctlsocket failed\n");
        closesocket(s);
        return INVALID_SOCKET;
    }

    if (connect(s, addr, addrlen) == SOCKET_ERROR) {
        if (WSAGetLastError() != WSAEWOULDBLOCK) {
            __xmlIOErr(XML_FROM_HTTP, 0, "error connecting to HTTP server");
            closesocket(s);
            return INVALID_SOCKET;
        }
    }

    // Continue with timeout handling...

    return s;
}

/**
 * xmlNanoHTTPConnectHost:
 * @host:  the host name
 * @port:  the port number
 *
 * Attempt a connection to the given host:port endpoint. It tries
 * the multiple IP provided by the DNS if available.
 *
 * Returns -1 in case of failure, the file descriptor number otherwise
 */

static SOCKET
xmlNanoHTTPConnectHost(const char *host, int port)
{
    struct sockaddr_in sockin;
#ifdef SUPPORT_IP6
    struct sockaddr_in6 sockin6;
#endif
    SOCKET s;

    memset(&sockin, 0, sizeof(sockin));
#ifdef SUPPORT_IP6
    memset(&sockin6, 0, sizeof(sockin6));
#endif

    struct addrinfo hints, *result = NULL;
    memset(&hints, 0, sizeof(hints));
    hints.ai_family = AF_UNSPEC; // Allow IPv4 or IPv6
    hints.ai_socktype = SOCK_STREAM;

    char portStr[6]; // Port string (max length for port number)
    snprintf(portStr, sizeof(portStr), "%d", port);

    int status = getaddrinfo(host, portStr, &hints, &result);
    if (status != 0) {
        printf("getaddrinfo failed: %s\n", gai_strerror(status));
        return INVALID_SOCKET;
    }

    for (struct addrinfo *res = result; res != NULL; res = res->ai_next) {
        if (res->ai_family == AF_INET) {
            memcpy(&sockin, res->ai_addr, res->ai_addrlen);
            sockin.sin_port = htons(port);
            s = socket(res->ai_family, res->ai_socktype, res->ai_protocol);
        #ifdef SUPPORT_IP6
        } else if (res->ai_family == AF_INET6) {
            memcpy(&sockin6, res->ai_addr, res->ai_addrlen);
            sockin6.sin6_port = htons(port);
            s = socket(res->ai_family, res->ai_socktype, res->ai_protocol);
        #endif
        } else {
            continue; // Unsupported address family
        }

        if (s != INVALID_SOCKET) {
            if (connect(s, res->ai_addr, res->ai_addrlen) == SOCKET_ERROR) {
                closesocket(s);
                s = INVALID_SOCKET;
            } else {
                freeaddrinfo(result);
                return s; // Successfully connected
            }
        }
    }

    if (result)
        freeaddrinfo(result);
    
    return INVALID_SOCKET; // Connection failed
}

/**
 * xmlNanoHTTPOpen:
 * @URL:  The URL to load
 * @contentType:  if available the Content-Type information will be returned at that location
 *
 * This function tries to open a connection to the indicated resource via HTTP GET.
 *
 * Returns NULL in case of failure, otherwise a request handler.
 *     The contentType, if provided must be freed by the caller
 */
void* xmlNanoHTTPOpen(const char *URL, char **contentType) {
    if (contentType != NULL) *contentType = NULL;
    return (xmlNanoHTTPMethod(URL, NULL, NULL, contentType, NULL, 0));
}

/**
 * xmlNanoHTTPOpenRedir:
 * @URL:  The URL to load
 * @contentType:  if available the Content-Type information will be returned at that location
 * @redir: if available the redirected URL will be returned
 *
 * This function tries to open a connection to the indicated resource via HTTP GET.
 *
 * Returns NULL in case of failure, otherwise a request handler.
 *     The contentType, if provided must be freed by the caller
 */
void* xmlNanoHTTPOpenRedir(const char *URL, char **contentType, char **redir) {
    if (contentType != NULL) *contentType = NULL;
    if (redir != NULL) *redir = NULL;
    return (xmlNanoHTTPMethodRedir(URL, NULL, NULL, contentType, redir, NULL, 0));
}

/**
 * xmlNanoHTTPRead:
 * @ctx:  the HTTP context
 * @dest:  a buffer
 * @len:  the buffer length
 *
 * This function tries to read @len bytes from the existing HTTP connection
 * and saves them in @dest. This is a blocking call.
 *
 * Returns the number of bytes read. 0 indicates the end of the connection.
 *         -1 indicates a parameter error.
 */
int xmlNanoHTTPRead(void *ctx, void *dest, int len) {
    xmlNanoHTTPCtxtPtr ctxt = (xmlNanoHTTPCtxtPtr) ctx;

    if (ctx == NULL || dest == NULL || len <= 0)
        return -1;

    int totalRead = 0;

    while (totalRead < len) {
        int bytesRead = xmlNanoHTTPRecv(ctxt); // Assuming this function is implemented to read from the socket
        if (bytesRead <= 0)
            break; // No more data or error
        memcpy((char *)dest + totalRead, ctxt->inrptr + totalRead, bytesRead);
        totalRead += bytesRead;
    }

    return totalRead; // Return total bytes read
}

/**
 * xmlNanoHTTPClose:
 * @ctx:  the HTTP context
 *
 * This function closes an HTTP context, it ends up the connection and
 * frees all data related to it.
 */
void xmlNanoHTTPClose(void *ctx) {
    xmlNanoHTTPCtxtPtr ctxt = (xmlNanoHTTPCtxtPtr) ctx;

    if (ctx == NULL)
        return;

    xmlNanoHTTPFreeCtxt(ctxt); // Assuming this function frees the context and closes the socket
}

/**
 * xmlNanoHTTPMethodRedir:
 * @URL:  The URL to load
 * @method:  the HTTP method to use
 * @input:  the input string if any
 * @contentType:  the Content-Type information IN and OUT
 * @redir:  the redirected URL OUT
 * @headers:  the extra headers
 * @ilen:  input length
 *
 * This function tries to open a connection to the indicated resource
 * via HTTP using the given @method, adding the given extra headers
 * and the input buffer for the request content.
 *
 * Returns NULL in case of failure, otherwise a request handler.
 *     The contentType, or redir, if provided must be freed by the caller
 */
void* xmlNanoHTTPMethodRedir(const char *URL, const char *method, const char *input,
                              char **contentType, char **redir,
                              const char *headers, int ilen) {
    xmlNanoHTTPCtxtPtr ctxt;
    char *bp, *p;
    int blen;
    SOCKET ret;
    char *redirURL = NULL;

    if (URL == NULL)
        return NULL;
    if (method == NULL)
        method = "GET";
    
    xmlNanoHTTPInit();

    // Implement connection logic similar to xmlNanoHTTPConnectHost

    return NULL; // Placeholder for the actual implementation
}

======================================================================================
[tests/test-getaddrinfo.c 수정]
======================================================================================
/*netdb->winsock2 수정*/
#ifdef _WIN32
#include <winsock2.h>
#include <ws2tcpip.h>
#else
#include <netdb.h>
#endif

#include <stdio.h>
#include <string.h>
#include <errno.h>

#include "sockets.h"

static int simple (char const *host, char const *service)
{
  char buf[BUFSIZ];
  struct addrinfo hints;
  struct addrinfo *ai0, *ai;
  int res;

  memset (&hints, 0, sizeof (hints));
  hints.ai_flags = AI_CANONNAME;
  hints.ai_family = AF_UNSPEC;
  hints.ai_socktype = SOCK_STREAM;

  res = getaddrinfo (host, service, &hints, &ai0);
  
  if (res != 0) {
      fprintf(stderr, "getaddrinfo error: %s\n", gai_strerror(res));
      return 1;
  }

  for (ai = ai0; ai; ai = ai->ai_next) {
      struct sockaddr_in *sock_addr = (struct sockaddr_in *)ai->ai_addr;
      inet_ntop(ai->ai_family, &sock_addr->sin_addr, buf, sizeof(buf));
      printf("Found IP: %s\n", buf);
      if (ai->ai_canonname) {
          printf("Canonical Name: %s\n", ai->ai_canonname);
      }
  }

  freeaddrinfo(ai0);
  return 0;
}

#define HOST1 "www.gnu.org"
#define SERV1 "http"

int main(void) {
  return simple(HOST1, SERV1);
}

======================================================================================
[tests/test-netdb-c++.cc 수정]
======================================================================================

/*netdb->winsock2 수정*/
/* Test of <netdb.h> substitute in C++ mode.
   Copyright (C) 2011-2024 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */

/* Written by Bruno Haible <bruno@clisp.org>, 2011.  */

#define GNULIB_NAMESPACE gnulib
#include <config.h>

#ifdef _WIN32
#include <winsock2.h>
#include <ws2tcpip.h>
#else
#include <netdb.h>
#endif

#include "signature.h"

#if GNULIB_TEST_GETADDRINFO
SIGNATURE_CHECK (GNULIB_NAMESPACE::getaddrinfo, int,
                 (const char *, const char *, const struct addrinfo *,
                  struct addrinfo **));
SIGNATURE_CHECK (GNULIB_NAMESPACE::freeaddrinfo, void, (struct addrinfo *));
SIGNATURE_CHECK (GNULIB_NAMESPACE::gai_strerror, const char *, (int));
SIGNATURE_CHECK (GNULIB_NAMESPACE::getnameinfo, int,
                 (const struct sockaddr *, int, char *, int,
                  char *, int, int)); // socklen_t를 int로 변경
#endif

int main ()
{
    // Windows 소켓 초기화
#ifdef _WIN32
    WSADATA wsaData;
    if (WSAStartup(MAKEWORD(2, 2), &wsaData) != 0) {
        fprintf(stderr, "WSAStartup failed.\n");
        return 1;
    }
#endif

    // 여기에 추가적인 테스트 코드 또는 함수 호출을 추가하세요.

#ifdef _WIN32
    WSACleanup(); // Windows 소켓 종료
#endif

    return 0;
}


======================================================================================
[tests/test-netdb.c 수정]
======================================================================================
/*netdb->winsock2 수정*/
/* Test of <netdb.h> substitute.
   Copyright (C) 2007-2008, 2010-2024 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */

/* Written by Simon Josefsson <simon@josefsson.org>, 2008.  */

#include <config.h>

#ifdef _WIN32
#include <winsock2.h>
#include <ws2tcpip.h>
#else
#include <netdb.h>
#endif

static_assert (NI_MAXHOST == 1025);
static_assert (NI_MAXSERV == 32);

/* Check that the 'struct hostent' type is defined.  */
struct hostent t1;

/* Check that the 'socklen_t' type is defined.  */
// Windows에서는 socklen_t가 정의되지 않으므로, int로 변경
int t2; // socklen_t t2;에서 int t2;로 변경

int
main (void)
{
  return 0;
}

======================================================================================
[m4/getaddrinfo.m4 수정]
======================================================================================
# netdb->winsock2 수정
# getaddrinfo.m4
# serial 35
dnl Copyright (C) 2004-2024 Free Software Foundation, Inc.
dnl This file is free software; the Free Software Foundation
dnl gives unlimited permission to copy and/or distribute it,
dnl with or without modifications, as long as this notice is preserved.

AC_DEFUN([gl_GETADDRINFO],
[
  AC_REQUIRE([gl_SYS_SOCKET_H])dnl for HAVE_SYS_SOCKET_H, HAVE_WINSOCK2_H
  AC_REQUIRE([gl_NETDB_H])dnl for HAVE_NETDB_H
  GETADDRINFO_LIB=
  gai_saved_LIBS="$LIBS"

  dnl Where is getaddrinfo()?
  dnl - On Solaris, it is in libsocket.
  dnl - On Haiku, it is in libnetwork.
  dnl - On BeOS, it is in libnet.
  dnl - On native Windows, it is in ws2_32.dll.
  dnl - Otherwise it is in libc.
  AC_SEARCH_LIBS([getaddrinfo], [socket network net],
    [if test "$ac_cv_search_getaddrinfo" != "none required"; then
       GETADDRINFO_LIB="$ac_cv_search_getaddrinfo"
     fi])
  LIBS="$gai_saved_LIBS $GETADDRINFO_LIB"

  HAVE_GETADDRINFO=1
  AC_CACHE_CHECK([for getaddrinfo], [gl_cv_func_getaddrinfo], [
    AC_LINK_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef _WIN32
#include <winsock2.h>
#include <ws2tcpip.h>
#else
#include <netdb.h>  # 이 부분을 수정
#endif
#include <stddef.h>
]], [[getaddrinfo("", "", NULL, NULL);]])],
      [gl_cv_func_getaddrinfo=yes],
      [gl_cv_func_getaddrinfo=no])])
  if test $gl_cv_func_getaddrinfo = no; then
    AC_CACHE_CHECK([for getaddrinfo in ws2tcpip.h and -lws2_32],
                   gl_cv_w32_getaddrinfo, [
      gl_cv_w32_getaddrinfo=no
      gl_saved_LIBS="$LIBS"
      LIBS="$LIBS -lws2_32"
      AC_LINK_IFELSE([AC_LANG_PROGRAM([[ 
#ifdef HAVE_WS2TCPIP_H 
#include <ws2tcpip.h> 
#endif 
#include <stddef.h> 
]], [[getaddrinfo(NULL, NULL, NULL, NULL);]])], [gl_cv_w32_getaddrinfo=yes])
      LIBS="$gl_saved_LIBS"
    ])
    if test "$gl_cv_w32_getaddrinfo" = "yes"; then
      GETADDRINFO_LIB="-lws2_32"
      LIBS="$gai_saved_LIBS $GETADDRINFO_LIB"
      dnl Check for correct signature, in particular for a cdecl-compatible
      dnl calling convention.
      AC_CACHE_CHECK([for getaddrinfo with POSIX signature],
        [gl_cv_func_getaddrinfo_posix_signature],
        [AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef _WIN32
#include <winsock2.h> # 이 부분 수정
#include <ws2tcpip.h> # 이 부분 수정
#else
#include <netdb.h>  # 이 부분을 수정
#endif
#include <stddef.h>
extern
#ifdef __cplusplus
"C"
#endif
int getaddrinfo (const char *, const char *, const struct addrinfo *, struct addrinfo **);
]])],
           [gl_cv_func_getaddrinfo_posix_signature=yes],
           [gl_cv_func_getaddrinfo_posix_signature=no])
        ])
      if test $gl_cv_func_getaddrinfo_posix_signature = no; then
        REPLACE_GETADDRINFO=1
      fi
    else
      HAVE_GETADDRINFO=0
    fi
  fi
  AC_DEFINE_UNQUOTED([HAVE_GETADDRINFO], [$HAVE_GETADDRINFO],
    [Define to 1 if getaddrinfo exists, or to 0 otherwise.])

  # We can't use AC_REPLACE_FUNCS here because gai_strerror may be an
  # inline function declared in ws2tcpip.h, so we need to get that
  # header included somehow.
  AC_CHECK_DECLS([gai_strerror], [], [], [[
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef _WIN32
#include <winsock2.h>  # 이 부분 수정
#include <ws2tcpip.h>  # 이 부분 수정
#else
#include <netdb.h>  # 이 부분을 수정
#endif
#include <stddef.h>
]])
  if test $ac_cv_have_decl_gai_strerror = yes; then
    AC_CHECK_DECLS([gai_strerrorA], [], [], [[
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef _WIN32
#include <winsock2.h>  # 이 부분 수정
#include <ws2tcpip.h>  # 이 부분 수정
#else
#include <netdb.h>  # 이 부분을 수정
#endif
#include <stddef.h>
]])
    dnl check for correct signature
    AC_CACHE_CHECK([for gai_strerror with POSIX signature],
     [gl_cv_func_gai_strerror_posix_signature], [
      AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef _WIN32
#include <winsock2.h>  # 이 부분 수정
#include <ws2tcpip.h>  # 이 부분 수정
#else
#include <netdb.h>  # 이 부분을 수정
#endif
#include <stddef.h>
extern
#ifdef __cplusplus
"C"
#endif
const char *gai_strerror(int);]])],
        [gl_cv_func_gai_strerror_posix_signature=yes],
        [gl_cv_func_gai_strerror_posix_signature=no])])
    if test $gl_cv_func_gai_strerror_posix_signature = no; then
      REPLACE_GAI_STRERROR=1
    fi
  fi

  LIBS="$gai_saved_LIBS"

  gl_PREREQ_GETADDRINFO

  AC_SUBST([GETADDRINFO_LIB])
])

# Prerequisites of lib/netdb.in.h and lib/getaddrinfo.c.
AC_DEFUN([gl_PREREQ_GETADDRINFO], [
  AC_REQUIRE([gl_NETDB_H_DEFAULTS])
  AC_REQUIRE([gl_SYS_SOCKET_H])dnl for HAVE_SYS_SOCKET_H, HAVE_WINSOCK2_H
  AC_REQUIRE([gl_HOSTENT]) dnl for HOSTENT_LIB
  AC_REQUIRE([gl_SERVENT]) dnl for SERVENT_LIB
  AC_REQUIRE([gl_FUNC_INET_NTOP]) dnl for INET_NTOP_LIB
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([gl_SOCKET_FAMILIES])
  AC_REQUIRE([gl_SYS_SOCKET_H])
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl Including sys/socket.h is wrong for Windows, but Windows does not
  dnl have sa_len so the result is correct anyway.
  AC_CHECK_MEMBERS([struct sockaddr.sa_len], , , [
#include <sys/types.h>
#include <sys/socket.h>
])

  AC_CHECK_HEADERS_ONCE([netinet/in.h])

  AC_CHECK_DECLS([getaddrinfo, freeaddrinfo, getnameinfo],,,[[ 
  /* sys/types.h is not needed according to POSIX, but the 
     sys/socket.h in i386-unknown-freebsd4.10 and 
     powerpc-apple-darwin5.5 required it. */ 
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef _WIN32
#include <winsock2.h>  # 이 부분 수정
#include <ws2tcpip.h>  # 이 부분 수정
#else
#include <netdb.h>  # 이 부분을 수정
#endif
]])
  if test $ac_cv_have_decl_getaddrinfo = no; then
    HAVE_DECL_GETADDRINFO=0
  fi
  if test $ac_cv_have_decl_freeaddrinfo = no; then
    HAVE_DECL_FREEADDRINFO=0
  fi
  if test $ac_cv_have_decl_gai_strerror = no; then
    HAVE_DECL_GAI_STRERROR=0
  fi
  if test $ac_cv_have_decl_getnameinfo = no; then
    HAVE_DECL_GETNAMEINFO=0
  fi

  AC_CHECK_TYPES([struct addrinfo],,,[ 
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef _WIN32
#include <winsock2.h>  # 이 부분 수정
#include <ws2tcpip.h>  # 이 부분 수정
#else
#include <netdb.h>  # 이 부분을 수정
#endif
])
])

======================================================================================
[m4/getdomainname.m4 수정]
======================================================================================
# netdb->winsock2 수정
# getdomainname.m4
# serial 14
dnl Copyright (C) 2002-2003, 2008-2024 Free Software Foundation, Inc.
dnl This file is free software; the Free Software Foundation
dnl gives unlimited permission to copy and/or distribute it,
dnl with or without modifications, as long as this notice is preserved.

AC_DEFUN([gl_FUNC_GETDOMAINNAME],
[ 
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_SYS_SOCKET_H])dnl for HAVE_SYS_SOCKET_H

  dnl Persuade glibc <unistd.h> to declare getdomainname().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl Where is getdomainname() defined?
  gl_CHECK_FUNCS_ANDROID([getdomainname], [[#include <unistd.h>]])
  
  if test $ac_cv_func_getdomainname = no; then
    AC_CACHE_CHECK([for getdomainname in -lnsl],
      [gl_cv_func_getdomainname_in_libnsl],
      [gl_cv_func_getdomainname_in_libnsl=no
       gl_saved_LIBS="$LIBS"
       LIBS="$LIBS -lnsl"
       AC_LINK_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <stddef.h>
              extern
              #ifdef __cplusplus
              "C"
              #endif
              int getdomainname (char *, size_t);
            ]],
            [[getdomainname(NULL, 0);]])],
         [gl_cv_func_getdomainname_in_libnsl=yes])
       LIBS="$gl_saved_LIBS"
      ])
  fi

  dnl What about the declaration?
  AC_CHECK_DECLS([getdomainname], , ,
    [[#include <sys/types.h>
      #ifdef HAVE_SYS_SOCKET_H
      #include <sys/socket.h>
      #endif
      #ifdef _WIN32
        #include <winsock2.h>
        #include <ws2tcpip.h>
      #else
        #include <netdb.h>
      #endif
      #include <unistd.h>
    ]])
  
  AC_CACHE_CHECK([for getdomainname's second argument type],
    [gl_cv_decl_getdomainname_argtype2],
    [if test $ac_cv_have_decl_getdomainname; then
       AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <sys/types.h>
              #ifdef HAVE_SYS_SOCKET_H
              #include <sys/socket.h>
              #endif
              #ifdef _WIN32
                #include <winsock2.h>
                #include <ws2tcpip.h>
              #else
                #include <netdb.h>
              #endif
              #include <unistd.h>
              extern
              #ifdef __cplusplus
              "C"
              #endif
              int getdomainname (char *, int);
            ]],
            [[]])],
         [gl_cv_decl_getdomainname_argtype2='int'],
         [gl_cv_decl_getdomainname_argtype2='size_t'])
     else
       gl_cv_decl_getdomainname_argtype2='int'
     fi
    ])

  if test $ac_cv_have_decl_getdomainname = no; then
    HAVE_DECL_GETDOMAINNAME=0
  fi

  if { test $ac_cv_func_getdomainname = yes \
       && test $gl_cv_decl_getdomainname_argtype2 != size_t; \
     } \
     || case "$gl_cv_onwards_func_getdomainname" in \
          future*) true ;; \
          *) false ;; \
        esac \
     || test "$gl_cv_func_getdomainname_in_libnsl" = yes; then
    REPLACE_GETDOMAINNAME=1
  fi
])

# Prerequisites of lib/getdomainname.c.
AC_DEFUN([gl_PREREQ_GETDOMAINNAME], [
  if test $ac_cv_func_getdomainname = yes; then
    AC_DEFINE([HAVE_GETDOMAINNAME], [1],
      [Define if the getdomainname() function is present and can be used.])
  fi
  AC_CHECK_HEADERS([sys/systeminfo.h])
  AC_CHECK_FUNCS([sysinfo])
])

======================================================================================
[m4/netdb_h.m4 수정]
======================================================================================
# netdb->winsock2 수정
# netdb_h.m4
# serial 15
dnl Copyright (C) 2008-2024 Free Software Foundation, Inc.
dnl This file is free software; the Free Software Foundation
dnl gives unlimited permission to copy and/or distribute it,
dnl with or without modifications, as long as this notice is preserved.

AC_DEFUN_ONCE([gl_NETDB_H],
[
  AC_REQUIRE([gl_NETDB_H_DEFAULTS])

  # Check if we are on Windows
  if test "$ac_cv_func_getaddrinfo" = "yes" && test "$ac_cv_func_freeaddrinfo" = "yes"; then
    gl_CHECK_NEXT_HEADERS([winsock2.h])  # Windows에서 winsock2.h 체크
    gl_CHECK_NEXT_HEADERS([ws2tcpip.h])   # ws2tcpip.h 체크
  else
    gl_CHECK_NEXT_HEADERS([netdb.h])       # 비 Windows에서는 netdb.h 체크
  fi

  if test $ac_cv_header_netdb_h = yes; then
    HAVE_NETDB_H=1
  else
    HAVE_NETDB_H=0
  fi
  AC_SUBST([HAVE_NETDB_H])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <winsock2.h>]],  # Windows에서 winsock2.h 사용
    [getaddrinfo freeaddrinfo gai_strerror getnameinfo])
])

# gl_NETDB_MODULE_INDICATOR([modulename])
# sets the shell variable that indicates the presence of the given module
# to a C preprocessor expression that will evaluate to 1.
# This macro invocation must not occur in macros that are AC_REQUIREd.
AC_DEFUN([gl_NETDB_MODULE_INDICATOR],
[
  dnl Ensure to expand the default settings once only.
  gl_NETDB_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])

# Initializes the default values for AC_SUBSTed shell variables.
# This macro must not be AC_REQUIREd.  It must only be invoked, and only
# outside of macros or in macros that are not AC_REQUIREd.
AC_DEFUN([gl_NETDB_H_REQUIRE_DEFAULTS],
[
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_NETDB_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETADDRINFO])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_NETDB_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_NETDB_H_DEFAULTS])
])

AC_DEFUN([gl_NETDB_H_DEFAULTS],
[
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_STRUCT_ADDRINFO=1;   AC_SUBST([HAVE_STRUCT_ADDRINFO])
  HAVE_DECL_FREEADDRINFO=1; AC_SUBST([HAVE_DECL_FREEADDRINFO])
  HAVE_DECL_GAI_STRERROR=1; AC_SUBST([HAVE_DECL_GAI_STRERROR])
  HAVE_DECL_GETADDRINFO=1;  AC_SUBST([HAVE_DECL_GETADDRINFO])
  HAVE_DECL_GETNAMEINFO=1;  AC_SUBST([HAVE_DECL_GETNAMEINFO])
  REPLACE_GAI_STRERROR=0;   AC_SUBST([REPLACE_GAI_STRERROR])
  REPLACE_GETADDRINFO=0;    AC_SUBST([REPLACE_GETADDRINFO])
])

(빌드)
{ autopoint --force; } 2>&1 | tee ./log/autopoint.log && 
{ rm -f po/Makefile.in.in; } && 
{ rm -rf autom4te.cache; } && 
{ aclocal -I m4 -I gnulib-m4 -I /usr/share/aclocal; } 2>&1 | tee ./log/aclocal.log && 
{ libtoolize --copy --force --verbose; } 2>&1 | tee ./log/libtoolize.log && 
{ autoconf --verbose; } 2>&1 | tee ./log/autoconf.log && 
{ autoheader; } 2>&1 | tee ./log/autoheader.log && 
{ automake --add-missing --force-missing; } 2>&1 | tee ./log/automake.log && 
{ ./configure; } 2>&1 | tee ./log/configure.log

(빌드결과) - yes 제외
configure: loading site script /etc/config.site
checking for gcc... /mingw64/bin/gcc
checking for C compiler default output file name... a.exe
checking for suffix of executables... .exe
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether the compiler supports GNU C...
checking whether /mingw64/bin/gcc accepts -g...
checking for /mingw64/bin/gcc option to enable C23 features... unsupported
checking for /mingw64/bin/gcc option to enable C11 features... none needed
checking whether the compiler is clang... no
checking for compiler option needed when checking for declarations... none
checking for minix/config.h... no
checking for netdb.h... no
checking for sys/uio.h... no
checking for features.h... no
checking for crtdefs.h... yes
checking whether it is safe to define __EXTENSIONS__... yes
checking whether _XOPEN_SOURCE should be defined... no
checking build system type... x86_64-w64-mingw32
checking host system type... x86_64-w64-mingw32
checking how to print strings... printf
checking for a sed that does not truncate output... /usr/bin/sed
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for fgrep... /usr/bin/grep -F
checking for ld used by /mingw64/bin/gcc... C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe
checking if the linker (C:/msys64/mingw64/x86_64-w64-mingw32/bin/ld.exe) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... /mingw64/bin/nm -B
checking the name lister (/mingw64/bin/nm -B) interface... BSD nm
checking whether ln -s works... no, using cp -pR
checking the maximum length of command line arguments... 8192
checking how to convert x86_64-w64-mingw32 file names to x86_64-w64-mingw32 format... func_convert_file_msys_to_w32
checking how to convert x86_64-w64-mingw32 file names to toolchain format... func_convert_file_msys_to_w32

(오류)
checking whether we are cross compiling... no
(수정)
크로스 컴파일 설치 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-gcc --version
x86_64-w64-mingw32-gcc.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

환경 변수 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# echo $PKG_CONFIG_PATH
/c/Program\ Files/GLib/lib/pkgconfig:
/c/libidn2/gettext-0.22.5/gettext-runtime/intl:
/mingw64/lib/pkgconfig:
/usr/lib/pkgconfig

configure.ac 수정
# 크로스 컴파일 체크
AC_CANONICAL_HOST

# 크로스 컴파일을 위한 설정
if test "$host" != "$build"; then
    AC_MSG_NOTICE([Cross-compiling for $host])
    CC=x86_64-w64-mingw32-gcc
    CXX=x86_64-w64-mingw32-g++
    # 필요에 따라 추가 설정
else
    AC_MSG_NOTICE([Not cross-compiling])
fi

# 필요한 라이브러리 및 헤더 체크 (예: stdlib.h, stdio.h 등)
AC_CHECK_HEADERS([stdlib.h stdio.h])

(빌드명령어 수정) => ./configure --host=x86_64-w64-mingw32;
{ autopoint --force; } 2>&1 | tee ./log/autopoint.log &&  
{ rm -f po/Makefile.in.in; } &&  
{ rm -rf autom4te.cache; } &&  
{ aclocal -I m4 -I gnulib-m4 -I /usr/share/aclocal; } 2>&1 | tee ./log/aclocal.log &&  
{ libtoolize --copy --force --verbose; } 2>&1 | tee ./log/libtoolize.log &&  
{ autoconf --verbose; } 2>&1 | tee ./log/autoconf.log &&  
{ autoheader; } 2>&1 | tee ./log/autoheader.log && 
{ automake --add-missing --force-missing; } 2>&1 | tee ./log/automake.log &&  
{ ./configure --host=x86_64-w64-mingw32; } 2>&1 | tee ./log/configure.log

패키지 설치 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-gcc --version
x86_64-w64-mingw32-g++ --version
x86_64-w64-mingw32-gcc.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

x86_64-w64-mingw32-g++.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

mingw64 설치 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Q
mingw-w64-x86_64-binutils 2.43.1-1
mingw-w64-x86_64-bzip2 1.0.8-3
mingw-w64-x86_64-crt-git 12.0.0.r320.g335ffe5b7-1
mingw-w64-x86_64-expat 2.6.2-1
mingw-w64-x86_64-gcc 14.2.0-1
mingw-w64-x86_64-gcc-libs 14.2.0-1
mingw-w64-x86_64-gdb 15.2-1
mingw-w64-x86_64-gdb-multiarch 15.2-1
mingw-w64-x86_64-gettext-runtime 0.22.5-2
mingw-w64-x86_64-gettext-tools 0.22.5-2
mingw-w64-x86_64-glib2 2.82.1-1
mingw-w64-x86_64-gmp 6.3.0-2
mingw-w64-x86_64-headers-git 12.0.0.r320.g335ffe5b7-1
mingw-w64-x86_64-isl 0.26-1
mingw-w64-x86_64-libffi 3.4.6-1
mingw-w64-x86_64-libiconv 1.17-4
mingw-w64-x86_64-libltdl 2.4.7-2
mingw-w64-x86_64-libmangle-git 12.0.0.r320.g335ffe5b7-1
mingw-w64-x86_64-libsystre 1.0.1-5
mingw-w64-x86_64-libtool 2.4.7-2
mingw-w64-x86_64-libtre-git r177.07e66d0-2
mingw-w64-x86_64-libwinpthread-git 12.0.0.r320.g335ffe5b7-1
mingw-w64-x86_64-make 4.4.1-3
mingw-w64-x86_64-mpc 1.3.1-2
mingw-w64-x86_64-mpdecimal 4.0.0-1
mingw-w64-x86_64-mpfr 4.2.1-2
mingw-w64-x86_64-ncurses 6.4.20231217-1
mingw-w64-x86_64-openssl 3.3.1-1
mingw-w64-x86_64-pcre2 10.44-1
mingw-w64-x86_64-pkgconf 1~2.3.0-1
mingw-w64-x86_64-python 3.11.9-1
mingw-w64-x86_64-python-packaging 24.1-1
mingw-w64-x86_64-readline 8.2.013-1
mingw-w64-x86_64-sqlite3 3.46.1-1
mingw-w64-x86_64-tcl 8.6.13-1
mingw-w64-x86_64-termcap 1.3.1-7
mingw-w64-x86_64-tk 8.6.13-1
mingw-w64-x86_64-tools-git 12.0.0.r320.g335ffe5b7-1
mingw-w64-x86_64-tzdata 2024a-1
mingw-w64-x86_64-windows-default-manifest 6.4-4
mingw-w64-x86_64-wineditline 2.206-1
mingw-w64-x86_64-winpthreads-git 12.0.0.r320.g335ffe5b7-1
mingw-w64-x86_64-winstorecompat-git 12.0.0.r320.g335ffe5b7-1
mingw-w64-x86_64-xxhash 0.8.2-2
mingw-w64-x86_64-xz 5.6.2-2
mingw-w64-x86_64-zlib 1.3.1-1
mingw-w64-x86_64-zstd 1.5.6-2
=>mingw-w64-x86_64-gettext-runtime 및 mingw-w64-x86_64-gettext-tools가 포함되어 있어 
gettext 관련 도구와 라이브러리가 올바르게 설치되어 있는 것을 확인

pkg-config 파일 위치 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find /mingw64/lib/pkgconfig -name "*.pc"
=>gettext 관련 .pc 파일이 없어서 ./configure를 실행할 때 
"checking whether we are cross compiling... no" 오류가 발생

gettext.pc 파일을 생성
touch /mingw64/lib/pkgconfig/gettext.pc
vim /mingw64/lib/pkgconfig/gettext.pc
prefix=/mingw64
exec_prefix=${prefix}
libdir=${exec_prefix}/lib
includedir=${prefix}/include

Name: gettext
Description: GNU internationalization library
Version: 0.22.5
Libs: -L${libdir} -lgettext -lgcc -lgcc_eh
Cflags: -I${includedir}
:wq

환경변수확인(없으면 등록)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# echo $PKG_CONFIG_PATH
/c/Program\ Files/GLib/lib/pkgconfig:
/c/libidn2/gettext-0.22.5/gettext-runtime/intl:
/mingw64/lib/pkgconfig: (확인)
/usr/lib/pkgconfig

~/.bashrc 수정
#추가
#cross compile
#export CC=/mingw64/bin/gcc 			#C 컴파일러
export CC=x86_64-w64-mingw32-gcc   		#C 컴파일러
#export CXX=/mingw64/bin/g++			#C++ 컴파일러
export CXX=x86_64-w64-mingw32-g++  	#C++ 컴파일러
#export CPP=/mingw64/bin/cpp			#C++ 전처리기
export CPP=x86_64-w64-mingw32-cpp		#C++ 전처리기

크로스 컴파일 도구 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# which x86_64-w64-mingw32-gcc
/mingw64/bin/x86_64-w64-mingw32-gcc

(오류)
checking for netdb.h... no
(수정)
C:/밑에서 netdb.h 검색
"C:\Users\nayou\vcpkg\downloads\tools\perl\5.38.0.1\c\include\postgresql\server\port\win32\netdb.h"
"C:\Users\nayou\vcpkg\downloads\tools\perl\5.38.0.1\perl\lib\CORE\netdb.h"
"C:\Users\nayou\AppData\Local\Arduino15\packages\arduino\hardware\avr\1.8.6\firmwares\wifishield\wifiHD\src\SOFTWARE_FRAMEWORK\SERVICES\LWIP\lwip-1.3.2\src\include\lwip\netdb.h"
"C:\Users\nayou\anaconda3\Library\include\server\port\win32\netdb.h"
"C:\Users\nayou\anaconda3\pkgs\libpq-12.17-h906ac69_0\Library\include\server\port\win32\netdb.h"

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l /c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE/netdb.h
-rw-r--r-- 1 nayou nayou 150  6월 17  2017 /c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE/netdb.h

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# notepad ~/.bashrc

환경변수설정
# 기존의 환경 변수에 추가
export CXX_INCLUDE_PATH=/mingw64/include:/c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE
export C_INCLUDE_PATH=/mingw64/include:/c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE
export CPLUS_INCLUDE_PATH=/mingw64/include:/c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# source ~/.bashrc

(결과)
checking for netdb.h... yes

config.log(해당 에러메시지 이후라인에서 이유를 찾을 수 있다.)
configure:5241: checking whether we are cross compiling
...
configure:5471: checking for x86_64-w64-mingw32-gcc option to enable C23 features
...
configure:5241: checking whether we are cross compiling
...

컴파일러가 C23 기능을 지원하지 않는다는 오류
x86_64-w64-mingw32-gcc가 C23 기능을 지원하지 않는다
C23 지원 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-gcc --version
x86_64-w64-mingw32-gcc.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

C 표준 명시적 설정
~/.bashrc 수정
#cross compile
#export CC=/mingw64/bin/gcc 						#C 컴파일러
export CC=x86_64-w64-mingw32-gcc   		#C 컴파일러
#export CXX=/mingw64/bin/g++						#C++ 컴파일러
export CXX=x86_64-w64-mingw32-g++  	#C++ 컴파일러
#export CPP=/mingw64/bin/cpp						#C++ 전처리기
export CPP=x86_64-w64-mingw32-cpp		#C++ 전처리기
#export CFLAGS="-I/mingw64/include -O2"
export CFLAGS="-std=c23 -I/mingw64/include -O2"			#C 컴파일러 C23 기능 설정
#export CPPFLAGS="-I/mingw64/include -O2"
export CPPFLAGS="-std=c++17 -I/mingw64/include -O2"		#C++ 전처리 C17 기능 설정
#export CXXFLAGS="-I/mingw64/include -O2"
export CXXFLAGS="-std=c++17 -I/mingw64/include -O2"		#C++ 컴파일러 C++17 기능 설정 (C++17에서 C++23으로 변경, configure.ac에서 가져옴)

(빌드명령어 수정) => ./configure --host=x86_64-w64-mingw32 --build=x86_64-w64-mingw32;
{ autopoint --force; } 2>&1 | tee ./log/autopoint.log &&  
{ rm -f po/Makefile.in.in; } &&  
{ rm -rf autom4te.cache; } &&  
{ aclocal -I m4 -I gnulib-m4 -I /usr/share/aclocal; } 2>&1 | tee ./log/aclocal.log &&  
{ libtoolize --copy --force --verbose; } 2>&1 | tee ./log/libtoolize.log &&  
{ autoconf --verbose; } 2>&1 | tee ./log/autoconf.log &&  
{ autoheader; } 2>&1 | tee ./log/autoheader.log && 
{ automake --add-missing --force-missing; } 2>&1 | tee ./log/automake.log &&  
{ ./configure --host=x86_64-w64-mingw32; } 2>&1 | tee ./log/configure.log

(오류)
checking how to run the C preprocessor... x86_64-w64-mingw32-cpp
configure: error: in '/c/libidn2/gettext-0.22.5/libtextstyle':
configure: error: C preprocessor "x86_64-w64-mingw32-cpp" fails sanity check
See 'config.log' for more details
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# which x86_64-w64-mingw32-cpp
which: no x86_64-w64-mingw32-cpp in (/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/usr/local/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312)
x86_64-w64-mingw32-cpp 전처리기가 시스템에 설치되어 있지 않음

MinGW-w64 Toolchain 설치
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -S mingw-w64-x86_64-toolchain
:: 13 개의 구성원이 mingw-w64-x86_64-toolchain 모음에 있습니다:
:: mingw64 저장소
   1) mingw-w64-x86_64-binutils  2) mingw-w64-x86_64-crt-git
   3) mingw-w64-x86_64-gcc  4) mingw-w64-x86_64-gdb
   5) mingw-w64-x86_64-gdb-multiarch  6) mingw-w64-x86_64-headers-git
   7) mingw-w64-x86_64-libmangle-git  8) mingw-w64-x86_64-libwinpthread-git
   9) mingw-w64-x86_64-make  10) mingw-w64-x86_64-pkgconf
   11) mingw-w64-x86_64-tools-git  12) mingw-w64-x86_64-winpthreads-git
   13) mingw-w64-x86_64-winstorecompat-git

선택을 입력하십시오. (기본값=all):
경고: mingw-w64-x86_64-binutils-2.43.1-1는 최신 버전입니다. -- 재설치
경고: mingw-w64-x86_64-crt-git-12.0.0.r320.g335ffe5b7-1는 최신 버전입니다. -- 재설치
경고: mingw-w64-x86_64-gcc-14.2.0-1는 최신 버전입니다. -- 재설치
경고: mingw-w64-x86_64-gdb-15.2-1는 최신 버전입니다. -- 재설치
경고: mingw-w64-x86_64-gdb-multiarch-15.2-1는 최신 버전입니다. -- 재설치
경고: mingw-w64-x86_64-headers-git-12.0.0.r320.g335ffe5b7-1는 최신 버전입니다. -- 재설치
경고: mingw-w64-x86_64-libmangle-git-12.0.0.r320.g335ffe5b7-1는 최신 버전입니다. -- 재설치
경고: mingw-w64-x86_64-libwinpthread-git-12.0.0.r320.g335ffe5b7-1는 최신 버전입니다. -- 재설치
경고: mingw-w64-x86_64-make-4.4.1-3는 최신 버전입니다. -- 재설치
경고: mingw-w64-x86_64-pkgconf-1~2.3.0-1는 최신 버전입니다. -- 재설치
경고: mingw-w64-x86_64-tools-git-12.0.0.r320.g335ffe5b7-1는 최신 버전입니다. -- 재설치
경고: mingw-w64-x86_64-winpthreads-git-12.0.0.r320.g335ffe5b7-1는 최신 버전입니다. -- 재설치
경고: mingw-w64-x86_64-winstorecompat-git-12.0.0.r320.g335ffe5b7-1는 최신 버전입니다. -- 재설치
의존성 해결 중...
꾸러미 충돌을 찾는 중...

꾸러미 (13) mingw-w64-x86_64-binutils-2.43.1-1
            mingw-w64-x86_64-crt-git-12.0.0.r320.g335ffe5b7-1
            mingw-w64-x86_64-gcc-14.2.0-1  mingw-w64-x86_64-gdb-15.2-1
            mingw-w64-x86_64-gdb-multiarch-15.2-1
            mingw-w64-x86_64-headers-git-12.0.0.r320.g335ffe5b7-1
            mingw-w64-x86_64-libmangle-git-12.0.0.r320.g335ffe5b7-1
            mingw-w64-x86_64-libwinpthread-git-12.0.0.r320.g335ffe5b7-1
            mingw-w64-x86_64-make-4.4.1-3
            mingw-w64-x86_64-pkgconf-1~2.3.0-1
            mingw-w64-x86_64-tools-git-12.0.0.r320.g335ffe5b7-1
            mingw-w64-x86_64-winpthreads-git-12.0.0.r320.g335ffe5b7-1
            mingw-w64-x86_64-winstorecompat-git-12.0.0.r320.g335ffe5b7-1

총 설치 크기:          528.75 MiB
알짜 업그레이드 크기:    0.00 MiB

:: 설치를 진행하시겠습니까? [Y/n] y
(13/13) 키링의 키를 검사 중                        [#################] 100%
(13/13) 꾸러미 무결성 검사 중                      [#################] 100%
(13/13) 꾸러미 파일 불러오는 중                    [#################] 100%
(13/13) 파일 충돌 검사 중                          [#################] 100%
(13/13) 사용 가능한 디스크 공간 검사 중            [#################] 100%
:: 꾸러미 변경사항을 처리 중...
( 1/13) 재설치 중 mingw-w64-x86_64-libwinpthre...  [#################] 100%
( 2/13) 재설치 중 mingw-w64-x86_64-binutils        [#################] 100%
( 3/13) 재설치 중 mingw-w64-x86_64-headers-git     [#################] 100%
( 4/13) 재설치 중 mingw-w64-x86_64-crt-git         [#################] 100%
( 5/13) 재설치 중 mingw-w64-x86_64-winpthreads-git [#################] 100%
( 6/13) 재설치 중 mingw-w64-x86_64-gcc             [#################] 100%
( 7/13) 재설치 중 mingw-w64-x86_64-gdb             [#################] 100%
( 8/13) 재설치 중 mingw-w64-x86_64-gdb-multiarch   [#################] 100%
( 9/13) 재설치 중 mingw-w64-x86_64-libmangle-git   [#################] 100%
(10/13) 재설치 중 mingw-w64-x86_64-make            [#################] 100%
(11/13) 재설치 중 mingw-w64-x86_64-pkgconf         [#################] 100%
(12/13) 재설치 중 mingw-w64-x86_64-tools-git       [#################] 100%
(13/13) 재설치 중 mingw-w64-x86_64-winstorecom...  [#################] 100%

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# which x86_64-w64-mingw32-cpp
which: no x86_64-w64-mingw32-cpp in (/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/usr/local/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312)
못찾음

명칭이 다를 수 있어 다른명칭으로 검색
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# which gcc
/mingw64/bin/gcc

테스트
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# gcc -E -x c - < /dev/null
# 0 "<stdin>"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "<stdin>"

패키지 업데이트
pacman -Syu

환경변수 확인(/mingw64/bin）
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# echo $PATH
/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/usr/local/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312

특정 전처리기 설치（확인）
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -S mingw-w64-x86_64-gcc

MinGW 툴체인 설치: x86_64-w64-mingw32-ld, x86_64-w64-mingw32-ar
패키지설치
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Syu

MinGW 툴체인 설치: x86_64-w64-mingw32-ld, x86_64-w64-mingw32-ar
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -S mingw-w64-x86_64-binutils
경고: mingw-w64-x86_64-binutils-2.43.1-1는 최신 버전입니다. -- 재설치
의존성 해결 중...
꾸러미 충돌을 찾는 중...
꾸러미 (1) mingw-w64-x86_64-binutils-2.43.1-1

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Qs binutils
local/binutils 2.43.1-1
    A set of programs to assemble and manipulate binary and object files
local/mingw-w64-x86_64-binutils 2.43.1-1 (mingw-w64-x86_64-toolchain)
    A set of programs to assemble and manipulate binary and object files (mingw-w64)

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find /mingw64/bin -name "*ld*"
find /mingw64/bin -name "*ar*"
/mingw64/bin/ld.bfd.exe
/mingw64/bin/ld.exe
/mingw64/bin/sqldiff.exe
/mingw64/bin/ar.exe
/mingw64/bin/gcc-ar.exe
/mingw64/bin/gdb-multiarch.exe
/mingw64/bin/gdbserver-multiarch.exe
/mingw64/bin/glib-genmarshal-script.py
/mingw64/bin/glib-genmarshal.exe
/mingw64/bin/libcharset-1.dll
/mingw64/bin/x86_64-w64-mingw32-clear.exe
/mingw64/bin/x86_64-w64-mingw32-gcc-ar.exe
=>ld와 ar는 ld.exe, ar.exe로 설치되어있음
/mingw64/bin/ld.exe --version
/mingw64/bin/ar.exe --version

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Si mingw-w64-x86_64-binutils
저장소             : mingw64
이름               : mingw-w64-x86_64-binutils
버전               : 2.43.1-1
설명               : A set of programs to assemble and manipulate binary and object files
                     (mingw-w64)
아키텍처           : any
URL                : https://www.gnu.org/software/binutils/
라이선스           : spdx:GPL-3.0-or-later AND GPL-2.0-or-later AND LGPL-3.0-or-later AND LGPL-2.0-or-later
모음들             : mingw-w64-x86_64-toolchain
다음을 제공        : 없음
다음에 의존        : mingw-w64-x86_64-gettext-runtime  mingw-w64-x86_64-libwinpthread
                     mingw-w64-x86_64-zlib  mingw-w64-x86_64-zstd
선택 의존성        : 없음
다음과 충돌        : 없음
다음을 대체        : 없음
다운로드 크기      : 5.96 MiB
설치된 크기        : 41.09 MiB
꾸러미 만든이      : CI (msys2/msys2-autobuild/22f1e5ad/10644654067)
빌드 날짜          : 2024년 08월 31일 토 오후 7:50:56
유효검사자         : SHA-256 합


nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# /mingw64/bin/ld.exe --version
/mingw64/bin/ar.exe --version
GNU ld (GNU Binutils) 2.43.1
Copyright (C) 2024 Free Software Foundation, Inc.
This program is free software; you may redistribute it under the terms of
the GNU General Public License version 3 or (at your option) a later version.
This program has absolutely no warranty.
GNU ar (GNU Binutils) 2.43.1
Copyright (C) 2024 Free Software Foundation, Inc.
This program is free software; you may redistribute it under the terms of
the GNU General Public License version 3 or (at your option) any later version.
This program has absolutely no warranty.

환경변수추가
export LD=/mingw64/bin/ld.exe
export AR=/mingw64/bin/ar.exe

configure.ac 수정
# C99->C11
#AC_PROG_CC # 필수 패키지 검사
#AC_SUBST([CFLAGS], ["-std=c23 -O2"])
#AC_LANG([C])
#AC_COMPILE_IFELSE(
#  [AC_LANG_PROGRAM([], [[#if __STDC_VERSION__ >= 201112L
#                         #else
#                         # error "C11 not supported"
#                         #endif]])],
#  [
#    AC_DEFINE([HAVE_C11], [1], [Define if the C compiler supports C11.])
#    CFLAGS="$CFLAGS -std=c11 -fno-inline -UNDEFINED_MACRO"
#  ],
#  [AC_MSG_ERROR([C11 support is required but not available.])]
#)

# C 컴파일러 확인 및 C23 설정
AC_PROG_CC
AC_SUBST([CFLAGS], ["-std=c23 -O2"])
AC_LANG([C])
AC_COMPILE_IFELSE(
  [AC_LANG_PROGRAM([], [[#if __STDC_VERSION__ >= 202300L
                         #else
                         # error "C23 not supported"
                         #endif]])],
  [
    AC_DEFINE([HAVE_C23], [1], [Define if the C compiler supports C23.])
    CFLAGS="$CFLAGS -std=c23 -fno-inline -UNDEFINED_MACRO"
  ],
  [AC_MSG_ERROR([C23 support is required but not available.])]
)

# C++ 컴파일러 확인 및 C++17 설정
AC_PROG_CXX
AC_SUBST([CXXFLAGS], ["-std=c++17 -O2"])
AC_LANG([C++])
AC_COMPILE_IFELSE(
  [AC_LANG_PROGRAM([], [[#if __cplusplus >= 201703L
                         #else
                         # error "C++17 not supported"
                         #endif]])],
  [
    AC_DEFINE([HAVE_CXX17], [1], [Define if the C++ compiler supports C++17.])
    CXXFLAGS="$CXXFLAGS -std=c++17 -fno-inline -UNDEFINED_MACRO"
  ],
  [AC_MSG_ERROR([C++17 support is required but not available.])]
)

(오류)
checking how to run the C preprocessor... x86_64-w64-mingw32-cpp
configure: error: in '/c/libidn2/gettext-0.22.5/libtextstyle':
configure: error: C preprocessor "x86_64-w64-mingw32-cpp" fails sanity check
See 'config.log' for more details
(수정)
전처리기 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# /mingw64/bin/g++ --version
g++.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

~/.bashrc 수정
#cross compile
#export CC=/mingw64/bin/gcc 			#C 컴파일러
export CC=x86_64-w64-mingw32-gcc   		#C 컴파일러
#export CXX=/mingw64/bin/g++			#C++ 컴파일러
export CXX=x86_64-w64-mingw32-g++  	#C++ 컴파일러
#export CPP=/mingw64/bin/cpp			#C++ 전처리기
#export CPP=x86_64-w64-mingw32-cpp		#C++ 전처리기
export CPP=/mingw64/bin/cpp			#C++ 전처리기
#export CFLAGS="-I/mingw64/include -O2"
export CFLAGS="-std=c23 -I/mingw64/include -O2"			#C 컴파일러 C23 기능 설정
#export CPPFLAGS="-I/mingw64/include -O2"
export CPPFLAGS="-std=c++17 -I/mingw64/include -O2"		#C++ 전처리 C17 기능 설정
#export CXXFLAGS="-I/mingw64/include -O2"
export CXXFLAGS="-std=c++17 -I/mingw64/include -O2"		#C++ 컴파일러 C++17 기능 설정 
export LD=/mingw64/bin/ld.exe
export AR=/mingw64/bin/ar.exe

nayou@kimnayooung MINGW64 ~
# x86_64-w64-mingw32-gcc  --version
x86_64-w64-mingw32-gcc.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


nayou@kimnayooung MINGW64 ~
# x86_64-w64-mingw32-g++ --version
x86_64-w64-mingw32-g++.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


nayou@kimnayooung MINGW64 ~
# /mingw64/bin/cpp --version
cpp.exe (Rev1, Built by MSYS2 project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

nayou@kimnayooung MINGW64 ~
# /mingw64/bin/ld.exe --version
GNU ld (GNU Binutils) 2.43.1
Copyright (C) 2024 Free Software Foundation, Inc.
This program is free software; you may redistribute it under the terms of
the GNU General Public License version 3 or (at your option) a later version.
This program has absolutely no warranty.

nayou@kimnayooung MINGW64 ~
# /mingw64/bin/ar.exe --version
GNU ar (GNU Binutils) 2.43.1
Copyright (C) 2024 Free Software Foundation, Inc.
This program is free software; you may redistribute it under the terms of
the GNU General Public License version 3 or (at your option) any later version.
This program has absolutely no warranty.

(오류)
configure.ac:160: error: possibly undefined macro: AC_CROSS_COMPILER
      If this token and others are legitimate, please use m4_pattern_allow.
      See the Autoconf documentation.
(수정)
AC_CROSS_COMPILER 매크로가 정의되지 않았다는 오류
configure.ac 수정
m4_pattern_allow([AC_CROSS_COMPILER])

(오류)
./configure: line 20358: GL_REQUIRE_VERSION(2.0): command not found
(수정)
configure.ac 수정
# Gnulib에서 최소 요구 버전을 설정
m4_ifdef([GL_REQUIRE_VERSION], [GL_REQUIRE_VERSION([2.0])])

" C 코드 컴파일"
(오류)
configure: error: C23 support is required but not available.
(수정)
사용 중인 컴파일러가 C23 표준을 지원하지 않음
x86_64-w64-mingw32-gcc가 C23 표준을 지원하는지 확인
GCC 14 버전 이상은 C23을 지원해야 
C23 지원 여부를 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-gcc -std=c23 -E - < /dev/null
# 0 "<stdin>"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "<stdin>"

CFLAGS 확인
~/.bashrc 수정
export CXXFLAGS="-std=c++17 -I/mingw64/include -O2 -DDEBUG  -DVERSION=\"1.0.0\""	#C++ 컴파일러 C++17 기능 설정 
configure.ac 수정
# C++ 전처리기 플래그 설정
AC_SUBST([CPPFLAGS], ["-std=c++17 -I/mingw64/include -O2 -DDEBUG  -DVERSION=\"1.0.0\""])

(오류)
checking dynamic linker characteristics... Win32 ld.exe
checking how to hardcode library paths into programs... immediate
checking for x86_64-w64-mingw32-windres... no
checking for windres... windres
checking for x86_64-w64-mingw32-gcc... (cached) x86_64-w64-mingw32-gcc
checking whether the compiler supports GNU C... (cached) yes
checking whether x86_64-w64-mingw32-gcc accepts -g... (cached) yes
checking for x86_64-w64-mingw32-gcc option to enable C23 features... (cached) unsupported
checking for x86_64-w64-mingw32-gcc option to enable C11 features... (cached) none needed
checking whether the compiler is clang... (cached) no
checking for compiler option needed when checking for declarations... (cached) none
configure: error: C23 support is required but not available.
(수정)
MSYS2: Windows에서 Unix-like 환경을 제공하는 시스템으로, 
패키지 관리 시스템과 함께 다양한 도구를 설치할 수 있도록 지원합니다.
MinGW: Windows에서 C/C++ 컴파일러를 제공하는 도구로, 
MSYS2 내에서 사용할 수 있습니다. 
MSYS2의 패키지 관리기를 통해 MinGW 패키지를 설치할 수 있습니다.

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Q mingw-w64-x86_64-gcc
mingw-w64-x86_64-gcc 14.2.0-1

최신버전설치
pacman -Syu mingw-w64-x86_64-gcc

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Q mingw-w64-x86_64-gcc
mingw-w64-x86_64-gcc 14.2.0-1

C23을 지원하는 대체컴파일러 설치
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -S mingw-w64-x86_64-clang

설치확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# clang --version
clang version 18.1.8
Target: x86_64-w64-windows-gnu
Thread model: posix
InstalledDir: C:/msys64/mingw64/bin

환경변수설정
~/.bashrc 수정
#cross compile
#export CC=/mingw64/bin/gcc 			#C 컴파일러
#export CC=x86_64-w64-mingw32-gcc   		#C 컴파일러
export CC=clang   					#C 컴파일러
#export CXX=/mingw64/bin/g++			#C++ 컴파일러
#export CXX=x86_64-w64-mingw32-g++  	#C++ 컴파일러
export CXX=clang++  					#C++ 컴파일러
#export CPP=/mingw64/bin/cpp			#C++ 전처리기
#export CPP=x86_64-w64-mingw32-cpp		#C++ 전처리기
export CPP=/mingw64/bin/cpp			#C++ 전처리기
#export CFLAGS="-I/mingw64/include -O2"
export CFLAGS="-std=c23 -I/mingw64/include -O2"			#C 컴파일러 C23 기능 설정
#export CPPFLAGS="-I/mingw64/include -O2"
export CPPFLAGS="-std=c++17 -I/mingw64/include -O2"		#C++ 전처리 C17 기능 설정
#export CXXFLAGS="-I/mingw64/include -O2"
export CXXFLAGS="-std=c++17 -I/mingw64/include -O2 -DDEBUG  -DVERSION=\"1.0.0\""		#C++ 컴파일러 C++17 기능 설정 
export LD=/mingw64/bin/ld.exe
export AR=/mingw64/bin/ar.exe 	

C 컴파일러가 C23 기능을 사용할 수 있는지 확인
//c_test.c 생성
#include <stdio.h>

int main() {
    #if __STDC_VERSION__ < 202300L
    printf("C23 is not supported.\n");
    return 1; // 에러 코드 반환
    #else
    printf("C23 is supported!\n");
    return 0; // 성공 코드 반환
    #endif
}

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# notepad ~/.bashrc

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# source ~/.bashrc

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# $CC ./c_test.c -o c_test -std=c23 (꼭 -std=c23 이 옵션을 넣어줘야 함)

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./c_test
C23 is supported!

"C++ 코드 컴파일"
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# vim cpp_test.cpp
#include <iostream>
int main() {
    std::cout << "C++17 is supported!" << std::endl;
    return 0;
}

(오류)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# $CXX ./cpp_test.cpp -o cpp_test -std=c++17
C:/msys64/mingw64/include/c++/14.2.0/cstdlib:79:15: fatal error: 'stdlib.h' file not
      found
   79 | #include_next <stdlib.h>
      |               ^~~~~~~~~~
1 error generated.
(수정)
C++ 코드가 필요한 헤더 파일을 찾지 못할 때 발생
stdlib.h 파일은 MinGW 설치의 일부로 포함

설치확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Qs mingw-w64
local/mingw-w64-x86_64-binutils 2.43.1-1 (mingw-w64-x86_64-toolchain)
    A set of programs to assemble and manipulate binary and object files (mingw-w64)
local/mingw-w64-x86_64-bzip2 1.0.8-3
    A high-quality data compression program (mingw-w64)
local/mingw-w64-x86_64-clang 18.1.8-1
    C language family frontend for LLVM (mingw-w64)
local/mingw-w64-x86_64-clang-libs 18.1.8-1
    Clang runtime libraries (mingw-w64)
local/mingw-w64-x86_64-crt-git 12.0.0.r329.g8f7b5ce36-1 (mingw-w64-x86_64-toolchain)
    MinGW-w64 CRT for Windows (mingw-w64)
local/mingw-w64-x86_64-expat 2.6.3-1
    An XML parser library (mingw-w64)
local/mingw-w64-x86_64-gcc 14.2.0-1 (mingw-w64-x86_64-toolchain)
    GNU Compiler Collection (C,C++,OpenMP) for MinGW-w64
local/mingw-w64-x86_64-gcc-libs 14.2.0-1
    GNU Compiler Collection (libraries) for MinGW-w64
local/mingw-w64-x86_64-gdb 15.2-1 (mingw-w64-x86_64-toolchain)
    GNU Debugger (mingw-w64)
local/mingw-w64-x86_64-gdb-multiarch 15.2-1 (mingw-w64-x86_64-toolchain)
    GNU Debugger (supports all targets)
local/mingw-w64-x86_64-gettext-runtime 0.22.5-2
    GNU internationalization runtime library (mingw-w64)
local/mingw-w64-x86_64-gettext-tools 0.22.5-2
    GNU internationalization tools (mingw-w64)
local/mingw-w64-x86_64-glib2 2.82.1-1
    Common C routines used by GTK+ 3 and other libs (mingw-w64)
local/mingw-w64-x86_64-gmp 6.3.0-2
    A free library for arbitrary precision arithmetic (mingw-w64)
local/mingw-w64-x86_64-headers-git 12.0.0.r329.g8f7b5ce36-1 (mingw-w64-x86_64-toolchain)
    MinGW-w64 headers for Windows (mingw-w64)
local/mingw-w64-x86_64-isl 0.27-1
    Library for manipulating sets and relations of integer points bounded by linear
    constraints (mingw-w64)
local/mingw-w64-x86_64-libffi 3.4.6-1
    A portable, high level programming interface to various calling conventions
    (mingw-w64)
local/mingw-w64-x86_64-libiconv 1.17-4
    Character encoding conversion library (mingw-w64)
local/mingw-w64-x86_64-libltdl 2.4.7-2
    A system independent dlopen wrapper for GNU libtool
local/mingw-w64-x86_64-libmangle-git 12.0.0.r329.g8f7b5ce36-1 (mingw-w64-x86_64-toolchain)
    MinGW-w64 libmangle (mingw-w64)
local/mingw-w64-x86_64-libsystre 1.0.1-5
    Wrapper library around TRE that provides POSIX API (mingw-w64)
local/mingw-w64-x86_64-libtool 2.4.7-2
    A generic library support script (mingw-w64)
local/mingw-w64-x86_64-libtre-git r177.07e66d0-2
    The approximate regex matching library and agrep command line tool (mingw-w64)
local/mingw-w64-x86_64-libwinpthread-git 12.0.0.r329.g8f7b5ce36-1 (mingw-w64-x86_64-toolchain)
    MinGW-w64 winpthreads library (mingw-w64)
local/mingw-w64-x86_64-libxml2 2.12.9-1
    XML parsing library, version 2 (mingw-w64)
local/mingw-w64-x86_64-llvm 18.1.8-1
    Low Level Virtual Machine (mingw-w64)
local/mingw-w64-x86_64-llvm-libs 18.1.8-1
    Low Level Virtual Machine Runtime Libraries (mingw-w64)
local/mingw-w64-x86_64-make 4.4.1-3 (mingw-w64-x86_64-toolchain)
    GNU make utility to maintain groups of programs (mingw-w64)
local/mingw-w64-x86_64-mpc 1.3.1-2
    Multiple precision complex arithmetic library (mingw-w64)
local/mingw-w64-x86_64-mpdecimal 4.0.0-1
    Package for correctly-rounded arbitrary precision decimal floating point
    arithmetic (mingw-w64)
local/mingw-w64-x86_64-mpfr 4.2.1-2
    Multiple-precision floating-point library (mingw-w64)
local/mingw-w64-x86_64-ncurses 6.5.20240831-1
    System V Release 4.0 curses emulation library (mingw-w64)
local/mingw-w64-x86_64-openssl 3.3.2-1
    The Open Source toolkit for Secure Sockets Layer and Transport Layer Security
    (mingw-w64)
local/mingw-w64-x86_64-pcre2 10.44-1
    A library that implements Perl 5-style regular expressions (mingw-w64)
local/mingw-w64-x86_64-pkgconf 1~2.3.0-1 (mingw-w64-x86_64-toolchain)
    pkg-config compatible utility which does not depend on glib
local/mingw-w64-x86_64-python 3.11.10-1
    A high-level scripting language (mingw-w64)
local/mingw-w64-x86_64-python-packaging 24.1-1
    Core utilities for Python packages (mingw-w64)
local/mingw-w64-x86_64-readline 8.2.013-1
    MinGW port of readline for editing typed command lines (mingw-w64)
local/mingw-w64-x86_64-sqlite3 3.46.1-1
    A C library that implements an SQL database engine (mingw-w64)
local/mingw-w64-x86_64-tcl 8.6.13-1
    The Tcl scripting language (mingw-w64)
local/mingw-w64-x86_64-termcap 1.3.1-7
    Terminal feature database (mingw-w64)
local/mingw-w64-x86_64-tk 8.6.13-1
    A windowing toolkit for use with tcl (mingw-w64)
local/mingw-w64-x86_64-tools-git 12.0.0.r329.g8f7b5ce36-1 (mingw-w64-x86_64-toolchain)
    MinGW-w64 tools (mingw-w64)
local/mingw-w64-x86_64-tzdata 2024b-1
    Sources for time zone and daylight saving time data (mingw-w64)
local/mingw-w64-x86_64-windows-default-manifest 6.4-4
    Default Windows application manifest (mingw-w64)
local/mingw-w64-x86_64-wineditline 2.206-1
    port of the NetBSD Editline library (mingw-w64)
local/mingw-w64-x86_64-winpthreads-git 12.0.0.r329.g8f7b5ce36-1 (mingw-w64-x86_64-toolchain)
    MinGW-w64 winpthreads library (mingw-w64)
local/mingw-w64-x86_64-winstorecompat-git 12.0.0.r329.g8f7b5ce36-1 (mingw-w64-x86_64-toolchain)
    MinGW-w64 winRT compat library (mingw-w64)
local/mingw-w64-x86_64-xxhash 0.8.2-2
    Extremely fast non-cryptographic hash algorithm (mingw-w64)
local/mingw-w64-x86_64-xz 5.6.3-1
    Library and command line tools for XZ and LZMA compressed files (mingw-w64)
local/mingw-w64-x86_64-zlib 1.3.1-1
    Compression library implementing the deflate compression method found in gzip and
    PKZIP (mingw-w64)
local/mingw-w64-x86_64-zstd 1.5.6-2
    Zstandard - Fast real-time compression algorithm (mingw-w64)

stdlib.h 검색
nayou@kimnayooung MINGW64 ~
# ls -l /c/Qt/Tools/mingw1120_64/x86_64-w64-mingw32/include/stdlib.h
-rw-r--r-- 1 nayou nayou 28604  3월 21  2022 /c/Qt/Tools/mingw1120_64/x86_64-w64-mingw32/include/stdlib.h

nayou@kimnayooung MINGW64 ~
# ls -l /c/Qt/Tools/mingw1120_64/lib/gcc/x86_64-w64-mingw32/11.2.0/include/c++/stdlib.h
-rw-r--r-- 1 nayou nayou 2248  3월 21  2022 /c/Qt/Tools/mingw1120_64/lib/gcc/x86_64-w64-mingw32/11.2.0/include/c++/stdlib.h

nayou@kimnayooung MINGW64 ~
# which g++
/mingw64/bin/g++

MinGW의 Include 경로 설정
~/.bashrc 수정
export CXX_INCLUDE_PATH=/mingw64/include:/c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE
export C_INCLUDE_PATH=/c/Qt/Tools/mingw1120_64/x86_64-w64-mingw32/include:/mingw64/include:/c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE
export PATH="/c/Qt/Tools/mingw1120_64/bin:/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/usr/local/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312"

컴파일러확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# which g++
/c/Qt/Tools/mingw1120_64/bin/g++

위에서 작성한 코드를 컴파일
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# g++ -o cpp_test cpp_test.cpp
(g++ -o cpp_test cpp_test.cpp -std=c++17 -I/c/Qt/Tools/mingw1120_64/x86_64-w64-mingw32/include
, 최적화가 필요하다면 -O2 또는 -O3 플래그를 추가하여 컴파일할 수 있다.)
위에서 작성한 코드를 실행
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./cpp_test
C++17 is supported!

{clang} - C23 is supported!
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./c_test
C23 is not supported.

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# $CC ./c_test.c -o c_test -std=c23

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./c_test
C23 is supported!

{x86_64-w64-mingw32-gcc} -  C23 is not supported.
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-gcc c_test.c -o c_test

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./c_test
C23 is not supported.

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-gcc c_test.c -o c_test -std=c32
x86_64-w64-mingw32-gcc.exe: error: unrecognized command-line option '-std=c32'; did you mean '-std=c11'?

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-gcc c_test.c -o c_test -std=c11

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./c_test
C23 is not supported.

clang, clang++ version
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# clang --version
clang++ --version
clang version 18.1.8
Target: x86_64-w64-windows-gnu
Thread model: posix
InstalledDir: C:/msys64/mingw64/bin
clang version 18.1.8
Target: x86_64-w64-windows-gnu
Thread model: posix
InstalledDir: C:/msys64/mingw64/bin

cpp_test.cpp
#include <iostream>

int main() {
    std::cout << "C++17이 지원됩니다!" << std::endl;
    return 0;
}

clang++가 현재 설정된 MinGW GCC 라이브러리와 충돌하고 있는 것으로 추측
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# clang++ cpp_test.cpp -o cpp_test -std=c++17
In file included from cpp_test.cpp:1:
In file included from C:\Qt\Tools\mingw1120_64\lib\gcc\x86_64-w64-mingw32\11.2.0\include\c++/iostream:39:
In file included from C:\Qt\Tools\mingw1120_64\lib\gcc\x86_64-w64-mingw32\11.2.0\include\c++/ostream:38:
In file included from C:\Qt\Tools\mingw1120_64\lib\gcc\x86_64-w64-mingw32\11.2.0\include\c++/ios:39:
In file included from C:\Qt\Tools\mingw1120_64\lib\gcc\x86_64-w64-mingw32\11.2.0\include\c++/exception:148:
In file included from C:\Qt\Tools\mingw1120_64\lib\gcc\x86_64-w64-mingw32\11.2.0\include\c++/bits/nested_exception.h:40:
In file included from C:\Qt\Tools\mingw1120_64\lib\gcc\x86_64-w64-mingw32\11.2.0\include\c++/bits/move.h:57:
C:\Qt\Tools\mingw1120_64\lib\gcc\x86_64-w64-mingw32\11.2.0\include\c++/type_traits:698:5: error:
      declaration of anonymous struct must be a definition
  698 |     struct
      |     ^
C:\Qt\Tools\mingw1120_64\lib\gcc\x86_64-w64-mingw32\11.2.0\include\c++/type_traits:701:38: error:
      expected unqualified-id
  701 |     : public integral_constant<bool, __is_pod(_Tp)>
      |                                      ^
C:\Qt\Tools\mingw1120_64\lib\gcc\x86_64-w64-mingw32\11.2.0\include\c++/type_traits:3081:25: error:
      expected unqualified-id
 3081 |   _GLIBCXX20_DEPRECATED("use is_standard_layout_v && is_trivial_v instead")
      |                         ^
C:\Qt\Tools\mingw1120_64\lib\gcc\x86_64-w64-mingw32\11.2.0\include\c++/type_traits:3081:25: error:
      expected ')'
C:\Qt\Tools\mingw1120_64\lib\gcc\x86_64-w64-mingw32\11.2.0\include\c++/type_traits:3081:24: note:
      to match this '('
 3081 |   _GLIBCXX20_DEPRECATED("use is_standard_layout_v && is_trivial_v instead")
      |                        ^
4 errors generated.

환경변수수정
nayou@kimnayooung MINGW64 ~
# ls -l /mingw64/bin/clang
-rwxr-xr-x 1 nayou nayou 156418  6월 29 22:45 /mingw64/bin/clang
~/.bashrc 수정
#export CPP=/mingw64/bin/cpp			#C++ 전처리기
export CPP="/mingw64/bin/clang -E"		#C++ 전처리기
export PATH="/c/Qt/Tools/mingw1120_64/bin:/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program\ Files/Java/jdk-21/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312"

clang 전용라이브러리 설치
pacman -S mingw-w64-x86_64-libc++

환경변수설정
# C 컴파일러 설정
export CC=clang

# C++ 컴파일러 설정
export CXX=clang++

# C++ 전처리기 설정
export CPP="clang -E"

# CFLAGS 설정 (C 컴파일러 플래그)
export CFLAGS="-std=c23 -I/C/Qt/Tools/mingw1120_64/x86_64-w64-mingw32/include -O2"

# CPPFLAGS 설정 (C++ 전처리기 플래그)
export CPPFLAGS="-std=c++17 -I/C/Qt/Tools/mingw1120_64/x86_64-w64-mingw32/include -O2"

# CXXFLAGS 설정 (C++ 컴파일러 플래그)
export CXXFLAGS="-std=c++17 -I/C/Qt/Tools/mingw1120_64/x86_64-w64-mingw32/include -O2 -DDEBUG -DVERSION=\"1.0.0\""

# 링커와 관련된 설정
export LD=C:/Qt/Tools/mingw1120_64/bin/ld.exe
export AR=C:/Qt/Tools/mingw1120_64/bin/ar.exe

# 패키지 설정
export PKG_CONFIG=C:/Qt/Tools/mingw1120_64/bin/pkg-config
export PKG_CONFIG_PATH="/c/Program Files/GLib/lib/pkgconfig:/c/libidn2/gettext-0.22.5/gettext-runtime/intl:/C/Qt/Tools/mingw1120_64/lib/pkgconfig:/usr/lib/pkgconfig"

# 라이브러리 경로 설정
export LD_LIBRARY_PATH="/C/Qt/Tools/mingw1120_64/lib:/usr/lib"
export LDFLAGS="-L/c/libidn2/gettext-0.22.5/libtextstyle/lib -L/C/Qt/Tools/mingw1120_64/lib -L/usr/lib -Wl,-rpath,/C/Qt/Tools/mingw1120_64/bin"
export LIBRARY_PATH=/C/Qt/Tools/mingw1120_64/lib

# 포함 경로 설정
export CXX_INCLUDE_PATH=/C/Qt/Tools/mingw1120_64/include:/c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE
export C_INCLUDE_PATH=/C/Qt/Tools/mingw1120_64/x86_64-w64-mingw32/include:/C/Qt/Tools/mingw1120_64/include:/c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE
export CPLUS_INCLUDE_PATH=/C/Qt/Tools/mingw1120_64/include/c++/v1:/C/Qt/Tools/mingw1120_64/lib/gcc/x86_64-w64-mingw32/11.2.0/include/c++:/C/Qt/Tools/mingw1120_64/include:/c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE

# 기타 도구 설정
export ANT_HOME=/c/apache-ant-1.10.15
export PATH="$ANT_HOME/bin:$PATH"
export JAVA_HOME="/c/Program Files/Java/jdk-21"
export PATH="$JAVA_HOME/bin:$PATH"

# GNULIB 경로 추가
export PATH="$PATH:/c/gnulib"

# 설정 관련 경로
export M4=/usr/bin/m4
export ACLOCAL_PATH="/c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl:/c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl/m4:/c/msys64/usr/share/aclocal:/usr/share/aclocal:/C/Qt/Tools/mingw1120_64/share/aclocal:/c/libidn2/m4"
export AUTOCONF_PATH="/c/libidn2/m4:/usr/share/aclocal:/C/Qt/Tools/mingw1120_64/share/aclocal"

# 최종 PATH 설정
export PATH="/C/Qt/Tools/mingw1120_64/bin:/usr/bin:/bin:/usr/share/aclocal:/C/Qt/Tools/mingw1120_64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312"

(컴파일)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# gcc -std=c++17 cpp_test.cpp -o cpp_test -lstdc++

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./cpp_test
C++17 is supported!

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# g++ -std=c++17 cpp_test.cpp -o cpp_test

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./cpp_test
C++17 is supported!

clang, clang++ 인식이안돼서 환경변수에 경로 잡아주기위해 검색함
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l /mingw64/bin/clang*
-rwxr-xr-x 1 nayou nayou  156418  6월 29 22:45 /mingw64/bin/clang.exe
-rwxr-xr-x 1 nayou nayou  156418  6월 29 22:45 /mingw64/bin/clang++.exe
-rwxr-xr-x 1 nayou nayou   60536  6월 29 22:45 /mingw64/bin/clang-check.exe
-rwxr-xr-x 1 nayou nayou  156418  6월 29 22:45 /mingw64/bin/clang-cl.exe
-rwxr-xr-x 1 nayou nayou  156418  6월 29 22:45 /mingw64/bin/clang-cpp.exe
-rwxr-xr-x 1 nayou nayou   48168  6월 29 22:45 /mingw64/bin/clang-extdef-mapping.exe
-rwxr-xr-x 1 nayou nayou  105347  6월 29 22:45 /mingw64/bin/clang-format.exe
-rwxr-xr-x 1 nayou nayou  224440  6월 29 22:45 /mingw64/bin/clang-linker-wrapper.exe
-rwxr-xr-x 1 nayou nayou   63000  6월 29 22:45 /mingw64/bin/clang-offload-bundler.exe
-rwxr-xr-x 1 nayou nayou   55284  6월 29 22:45 /mingw64/bin/clang-offload-packager.exe
-rwxr-xr-x 1 nayou nayou  100565  6월 29 22:45 /mingw64/bin/clang-refactor.exe
-rwxr-xr-x 1 nayou nayou   74799  6월 29 22:45 /mingw64/bin/clang-rename.exe
-rwxr-xr-x 1 nayou nayou   60201  6월 29 22:45 /mingw64/bin/clang-repl.exe
-rwxr-xr-x 1 nayou nayou  218979  6월 29 22:45 /mingw64/bin/clang-scan-deps.exe
-rwxr-xr-x 1 nayou nayou 2448795  6월 29 22:45 /mingw64/bin/clang-tblgen.exe

환경변수설정(stdlib.h를 찾아서 include 경로수정)
~/.bashrc 수정
export CC=x86_64-w64-mingw32-gcc		# C 컴파일러 
export CXX=x86_64-w64-mingw32-g++		# C++ 컴파일러
export CPP=/mingw64/bin/cpp			# C++ 전처리기

export CFLAGS="-std=c23 -I/mingw64/include -O2"		# C 컴파일러 C23 기능 설정
export CPPFLAGS="-I/mingw64/include -O2"			# C++ 전처리 설정
export CXXFLAGS="-std=c++17 -I/mingw64/include -O2 -DDEBUG -DVERSION=\"1.0.0\""  # C++ 컴파일러 C++17 기능 설정

export LD=/mingw64/bin/ld.exe
export AR=/mingw64/bin/ar.exe
export CXXDEPMODE=depmode=gcc

export CXX_INCLUDE_PATH="/mingw64/include:/c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE"
export C_INCLUDE_PATH="/mingw64/include:/c/Qt/Tools/mingw1120_64/x86_64-w64-mingw32/include:/c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE"
export CPLUS_INCLUDE_PATH="/mingw64/include:/c/Qt/Tools/mingw1120_64/lib/gcc/x86_64-w64-mingw32/11.2.0/include/c++:/c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE"

(C23)
현재 설치된 GCC의 버전을 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-gcc --version
x86_64-w64-mingw32-gcc.exe (x86_64-posix-seh-rev3, Built by MinGW-W64 project) 11.2.0
Copyright (C) 2021 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

C 표준 지원 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-gcc -dM -E - < /dev/null | grep __STDC_VERSION__
#define __STDC_VERSION__ 201710L

=>현재 설치된 GCC 버전은 11.2.0이며, 이 버전은 C11 표준(201710L)을 지원
현재 사용 중인 GCC 11.2.0에서는 C23(202300L)을 지원하지 않으며, 
__STDC_VERSION__ 매크로가 201710L로 정의되어있고 C11까지의 기능만 사용할 수 있다.

C23을 사용방법
-GCC를 최신 버전으로 업데이트
pacman -Syu mingw-w64-x86_64-gcc
업데이트 후 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-gcc --version
x86_64-w64-mingw32-gcc -dM -E - < /dev/null | grep __STDC_VERSION__
x86_64-w64-mingw32-gcc.exe (x86_64-posix-seh-rev3, Built by MinGW-W64 project) 11.2.0
Copyright (C) 2021 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

#define __STDC_VERSION__ 201710L
=> 현재 C23을 사용 불가 지원안함

x86_64-w64-mingw32-gcc.exe (x86_64-posix-seh-rev3, Built by MinGW-W64 project) 11.2.0
=> C23을 지원하는 gcc 14.2버전으로 설치
https://github.com/niXman/mingw-builds-binaries/releases
x86_64-14.2.0-release-win32-seh-msvcrt-rt_v12-rev0.7z    80.1 MB    Sep 5  (다운로드)
압축을 해제하고 C:\msys64\mingw64 => "C:\msys64\mingw64-backup-11.2.0" 백업 후
C:\Users\nayou\Downloads\x86_64-14.2.0-release-win32-seh-msvcrt-rt_v12-rev0\mingw64" => C:\msys64\mingw64" 이동

/c/Qt/Tools/mingw1120_64/bin => /c/msys64/mingw64/bin
/c/Qt/Tools/mingw1120_64/x86_64-w64-mingw32/include => /c/msys64/mingw64/x86_64-w64-mingw32/include
/c/Qt/Tools/mingw1120_64/lib/gcc/x86_64-w64-mingw32/11.2.0/include/c++ => /c/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++
~/.bashrc 수정
export C_INCLUDE_PATH="/mingw64/include:/c/msys64/mingw64/x86_64-w64-mingw32/include:/c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE"
export CPLUS_INCLUDE_PATH="/mingw64/include:/c/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++:/c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE"
export PATH="/c/msys64/mingw64/bin:/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312"

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# which gcc
/c/msys64/mingw64/bin/gcc

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# which x86_64-w64-mingw32-gcc
/c/msys64/mingw64/bin/x86_64-w64-mingw32-gcc

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# echo | /c/msys64/mingw64/bin/gcc -E -dM -std=c23 - | grep __STDC_VERSION__
#define __STDC_VERSION__ 202000L
=>GCC 14.2.0은 C23 대신 C2x(2020) 표준을 사용하고 있습니다. 이는 C23 표준이 아직 완전히 지원되지 않았을 가능성을 의미
GCC에서 -std=c23 옵션을 사용했지만, 내부적으로 C2x로 처리되는 것으로 보

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# gcc --version
gcc.exe (x86_64-win32-seh-rev0, Built by MinGW-Builds project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

"C 컴파일"
c_test.c
#include <stdio.h>

int main(void) {
    printf("Current C standard version: %ld\n", __STDC_VERSION__);

    #if __STDC_VERSION__ >= 202300L
        printf("C23 is supported!\n");
    #elif __STDC_VERSION__ >= 201112L
        printf("C11 is supported.\n");
    #elif __STDC_VERSION__ >= 199901L
        printf("C99 is supported.\n");
    #elif __STDC_VERSION__ >= 199409L
        printf("C94 is supported.\n");
    #elif __STDC_VERSION__ >= 198900L
        printf("C89 is supported.\n");
    #else
        printf("Older C standard is in use.\n");
    #endif

    return 0;
}

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-gcc c_test.c -o c_test
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./c_test
Current C standard version: 201710
C11 is supported.

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# $CC c_test.c -o c_test
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./c_test
Current C standard version: 201710
C11 is supported.

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# gcc c_test.c -o c_test
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./c_test
Current C standard version: 201710
C11 is supported.

(명시적)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-gcc -std=c23 c_test.c -o c_test
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./c_test
Current C standard version: 202000
C11 is supported.

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# $CC -std=c23 c_test.c -o c_test
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./c_test
Current C standard version: 202000
C11 is supported.

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# gcc -std=c23 c_test.c -o c_test
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./c_test
Current C standard version: 202000
C11 is supported.

=> gcc 11.2.0 -> gcc 14.2.0 업그레이드 해도 c23 지원 안됨 

"C++ 컴파일"
cpp_test.cpp
#include <iostream>
#include <optional>

static_assert(__cplusplus >= 201703L, "C++17 is not supported");

int main() {
    std::cout << "C++17 is supported!" << std::endl;
    return 0;
}

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-g++ cpp_test.cpp -o cpp_test

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./cpp_test
C++17 is supported!

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# g++ cpp_test.cpp -o cpp_test

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./cpp_test
C++17 is supported!

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# $CXX cpp_test.cpp -o cpp_test

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./cpp_test
C++17 is supported!

=> c++17 지원 됨.

(빌드)
{ autopoint --force; } 2>&1 | tee ./log/autopoint.log &&  
{ rm -f po/Makefile.in.in; } &&  
{ rm -rf autom4te.cache; } &&  
{ aclocal -I m4 -I gnulib-m4 -I /usr/share/aclocal; } 2>&1 | tee ./log/aclocal.log &&  
{ libtoolize --copy --force --verbose; } 2>&1 | tee ./log/libtoolize.log &&  
{ autoconf --verbose; } 2>&1 | tee ./log/autoconf.log &&  
{ autoheader; } 2>&1 | tee ./log/autoheader.log && 
{ automake --add-missing --force-missing; } 2>&1 | tee ./log/automake.log &&  
{ ./configure --host=x86_64-w64-mingw32; } 2>&1 | tee ./log/configure.log


(오류)
checking pkg-config is at least version 0.9.0... ./configure: line 19905: /mingw64/bin/pkg-config: No such file or directory
no
configure: error: pkg-config not found
(수정)
pkg-config 설치 확인
pkg-config를 설치하려고 할 때 mingw-w64-x86_64-pkgconf 패키지와 충돌이 발생
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -S mingw-w64-x86_64-pkg-config
(1/1) 삭제 중 mingw-w64-x86_64-pkgconf                [###########################] 100%
(1/1) 설치 중 mingw-w64-x86_64-pkg-config             [###########################] 100%

pkg-config가 제대로 설치되었는지 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pkg-config --version
0.29.2

configure.ac에서 C23 체크 제거
configure.ac 수정
# C 컴파일러 확인 및 C23 설정
#AC_PROG_CC
#AC_SUBST([CFLAGS], ["-std=c23 -I/mingw64/include -O2"])
#AC_LANG([C])
#AC_COMPILE_IFELSE(
#  [AC_LANG_PROGRAM([], [[#if __STDC_VERSION__ >= 202300L
#                         #else
#                         # error "C23 not supported"
#                         #endif]])],
#  [
#    AC_DEFINE([HAVE_C23], [1], [Define if the C compiler supports C23.])
#    CFLAGS="$CFLAGS -std=c23 -fno-inline -UNDEFINED_MACRO"
#  ],
#  [AC_MSG_ERROR([C23 support is required but not available.])]
#)

~/.bashrc 수정
#export CFLAGS="-std=c23 -I/mingw64/include -O2" # C 컴파일러 C23 기능 설정
export CFLAGS="-I/mingw64/include -O2"		 # C 컴파일러 (gcc 14.2 c23 지원안함)

configure.ac 수정
AC_SUBST([CFLAGS], ["-I/mingw64/include -O2"]) #-std=c23 제거. 지원안함 gcc 14.2
AC_SUBST([CPPFLAGS], ["-I/mingw64/include -O2"])
AC_SUBST([CXXFLAGS], ["-std=c++17 -I/mingw64/include -O2 -DDEBUG -DVERSION=\"1.0.0\""])

(오류)
checking for xmalloc... no
configure: Defining xmalloc as a placeholder
checking for xrealloc... no
configure: Defining xrealloc as a placeholder
checking for rpl_stpcpy... no
configure: Defining rpl_stpcpy as a placeholder
checking for xalloc_die... no
configure: Defining xalloc_die as a placeholder
configure: error: Failed to define xalloc_die
(수정)
xmalloc, xrealloc, rpl_stpcpy, 및 xalloc_die와 같은 함수들은 Gnulib에서 제공하는 함수
configure.ac 수정
# 메모리 할당 함수 체크
AC_CHECK_FUNCS([xmalloc xrealloc rpl_stpcpy xalloc_die], [], [
    AC_MSG_ERROR([Failed to define necessary memory allocation functions.])
])

# GNULIB 모듈 정의
GNULIB_MODULES="
ncurses \
terminfo \
rpl_stpcpy \
xalloc \
xalloc_die \
xmalloc \
xrealloc \
xgethostname \
_gl_nothrow_get_osfhandle \
fsync \
getprogname \
_get_osfhandle  
"

AC_GNU_LIB_TOOL

Gnulib 업그레이드
Gnulib를 사용하기 위해, 필요한 파일들을 생성하고, Gnulib에 포함된 파일을 프로젝트에 추가
nayou@kimnayooung MINGW64 /c/gnulib
# git pull origin master
nayou@kimnayooung MINGW64 /c/gnulib

환경변수에 /c/gnulib 추가
export PATH="/c/msys64/mingw64/bin:/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/c/gnulib"

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# gnulib-tool --import xmalloc xrealloc xalloc-die

(오류)
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether the compiler supports GNU C... yes
checking whether x86_64-w64-mingw32-gcc accepts -g... yes
checking for x86_64-w64-mingw32-gcc option to enable C23 features... unsupported
checking for x86_64-w64-mingw32-gcc option to enable C11 features... none needed
checking whether the compiler is clang... no
checking for compiler option needed when checking for declarations... none
(수정)
configure.ac 수정
AC_PROG_CC
AC_SUBST([CC_STANDARD], [11])
AC_SUBST([CFLAGS], ["-std=c11 -I/mingw64/include -O2"]) #-std=c23 제거 지원안함 gcc 14.2

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# cd /c/

/c/gnulib, /c/libidn2/gettext-0.22.5/libtextstyle 에서 xalloc_die 파일을 찾을 수 없음
/c/gnulib 폴더 삭제 후 재설치 
nayou@kimnayooung MINGW64 /c
# git clone https://git.savannah.gnu.org/git/gnulib.git
=> "C:\gnulib\lib\xalloc-die.c"

export CPPFLAGS="-I/mingw64/include -I/c/gnulib/lib -O2"			# C++ 전처리 설정
export LDFLAGS="-L/c/gnulib/lib -L/c/libidn2/gettext-0.22.5/libtextstyle/lib -L/mingw64/lib -L/usr/lib -Wl,-rpath,/mingw64/bin"
export LIBRARY_PATH=/mingw64/lib:/c/gnulib/lib
export PATH="/c/msys64/mingw64/bin:/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/c/gnulib:/c/gnulib"

(오류)
checking whether we are cross compiling... no 
(수정)
config.guess 파일 확인 및 업데이트
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# curl -O https://git.savannah.gnu.org/cgit/config.git/plain/config.guess
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 50743  100 50743    0     0  26282      0  0:00:01  0:00:01 --:--:-- 26318
=>"C:\libidn2\gettext-0.22.5\libtextstyle\config.guess"

configure.ac 수정
AC_CAN_COMPILE
m4_pattern_allow([AC_CAN_COMPILE])

#c23 -> c11 변경
# C++ 컴파일러가 -fno-rtti와 -fno-exceptions 플래그를 지원하는지 확인
AC_COMPILE_IFELSE(
    AC_LANG_PROGRAM([
        #include <stdlib.h>
        int main(void) { return 0; }
    ], []),
    [
        CXXFLAGS="$CXXFLAGS -fno-rtti -fno-exceptions"
    ],
    [
        AC_MSG_ERROR([C++ 컴파일러가 -fno-rtti와 -fno-exceptions 플래그를 지원하지 않습니다.])
    ]
)

# C++ 컴파일러 확인 및 C++11 설정
AC_PROG_CXX
AC_SUBST([CXXFLAGS], ["-std=c++11 -I/mingw64/include -O2"])
AC_LANG([C++])
AC_COMPILE_IFELSE(
    [AC_LANG_PROGRAM([], [[#if __cplusplus >= 201103L
                         #else
                         # error "C++11 not supported"
                         #endif]])],
    [
        AC_DEFINE([HAVE_CXX11], [1], [Define if the C++ compiler supports C++11.])
        CXXFLAGS="$CXXFLAGS -std=c++11 -fno-inline -UNDEFINED_MACRO"
    ],
    [AC_MSG_ERROR([C++11 support is required but not available.])]
)

# _GL_ATTRIBUTE_ALLOC_SIZE
# Check if the compiler supports the __attribute__((__alloc_size__)) attribute
AC_MSG_CHECKING([whether the compiler supports __attribute__((__alloc_size__))])
AC_COMPILE_IFELSE(
    [AC_LANG_PROGRAM([[]], [[
        void* xmalloc(size_t) __attribute__((__alloc_size__(1)));
    ]])],
    [AC_DEFINE([_GL_HAS_ATTRIBUTE_ALLOC_SIZE], [1], [Define if compiler supports __attribute__((__alloc_size__))])],
    [AC_DEFINE([_GL_HAS_ATTRIBUTE_ALLOC_SIZE], [0], [Define if compiler does not support __attribute__((__alloc_size__))])]
)
AC_MSG_RESULT([done])

# Check for fsync
# fsync가 사용 가능한지 확인하고, 그렇지 않은 경우 FlushFileBuffers를 사용하도록 설정
AC_COMPILE_IFELSE([AC_LANG_SOURCE([#include <unistd.h>
                                    int main() {
                                        int fd = 0; 
                                        fsync(fd);
                                        return 0;
                                    }])],
[AC_DEFINE([HAVE_FSYNC], [1], [Define to 1 if you have the fsync' function.])],
[AC_DEFINE([HAVE_FLUSH_FILE_BUFFERS], [1], [Define to 1 if using FlushFileBuffers on Windows.])])

# Check for compiler attributes
AC_DEFUN([CHECK_HAS_ATTRIBUTE], [
    AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM([[#ifdef __cplusplus
                         #define _GL_HAS_ATTRIBUTE(x) __has_attribute(x)
                         #else
                         #define _GL_HAS_ATTRIBUTE(x) 0
                         #endif]], [])
    ], [
        AC_SUBST([_GL_HAS_ATTRIBUTE], [__has_attribute])
    ], [
        AC_SUBST([_GL_HAS_ATTRIBUTE], [0])
    ])
])
# Call the macro to check for attributes
CHECK_HAS_ATTRIBUTE

# Check if the compiler supports the __attribute__((returns_nonnull)) attribute
AC_MSG_CHECKING([whether the compiler supports __attribute__((returns_nonnull))])
AC_COMPILE_IFELSE(
    [AC_LANG_PROGRAM([[]], [[
        #ifdef __cplusplus
        void* test_returns_nonnull(void) __attribute__((returns_nonnull));
        #else
        void* test_returns_nonnull(void);
        #endif
    ]])],
    [AC_DEFINE([_GL_HAS_ATTRIBUTE_RETURNS_NONNULL], [1], [Define if compiler supports __attribute__((returns_nonnull))])],
    [AC_DEFINE([_GL_HAS_ATTRIBUTE_RETURNS_NONNULL], [0], [Define if compiler does not support __attribute__((returns_nonnull))])]
)
AC_MSG_RESULT([done])

# __attribute__((__pure__)) 지원 여부 확인
AC_MSG_CHECKING([for __attribute__((__pure__)) support])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ 
    void __attribute__((__pure__)) test_function(int* ptr) {
        (void)ptr;
    }
    int main() {
        int a = 0;
        test_function(&a);
        return 0;
    }
]])],
[AC_MSG_RESULT([yes])
 AC_DEFINE([HAVE_ATTRIBUTE_PURE], [1], [Define if compiler supports __attribute__((__pure__))])],
[AC_MSG_RESULT([no])
 AC_DEFINE([HAVE_ATTRIBUTE_PURE], [0], [Define if compiler does not support __attribute__((__pure__))])])

# __attribute__((nonnull)) 지원 여부 확인
AC_MSG_CHECKING([for __attribute__((nonnull)) support])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ 
    void __attribute__((nonnull(1))) test_function(int* ptr) {
        (void)ptr;
    }

    int main() {
        int a = 0;
        test_function(&a);
        return 0;
    }
]])],
[AC_MSG_RESULT([yes])
 AC_DEFINE([HAVE_ATTRIBUTE_NONNULL], [1], [Define if compiler supports __attribute__((nonnull))])],
[AC_MSG_RESULT([no])
 AC_DEFINE([HAVE_ATTRIBUTE_NONNULL], [0], [Define if compiler does not support __attribute__((nonnull))])])

# __attribute__((__malloc__)) 지원 여부 확인
AC_MSG_CHECKING([for __attribute__((__malloc__)) support])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ 
    void __attribute__((__malloc__)) test_function(int* ptr) {
        (void)ptr;
    }
    int main() {
        int a = 0;
        test_function(&a);
        return 0;
    }
]])],
[AC_MSG_RESULT([yes])
 AC_DEFINE([HAVE_ATTRIBUTE_MALLOC], [1], [Define if compiler supports __attribute__((__malloc__))])],
[AC_MSG_RESULT([no])
 AC_DEFINE([HAVE_ATTRIBUTE_MALLOC], [0], [Define if compiler does not support __attribute__((__malloc__))])])

AC_MSG_CHECKING([whether the compiler supports __attribute__((noreturn))])
AC_COMPILE_IFELSE(
    [AC_LANG_PROGRAM([[]], [[__attribute__((noreturn)) void x();]])],
    [AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_NORETURN], [__attribute__((noreturn))], [Define for attribute noreturn])],
    [AC_DEFINE_UNQUOTED([_GL_ATTRIBUTE_NORETURN], [], [Define for attribute noreturn])]
)
AC_MSG_RESULT([done])

AC_CHECK_FUNC([xmalloc], [], [
    AC_MSG_NOTICE([Defining xmalloc as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([ 
        AC_LANG_PROGRAM([ 
            #include <stdlib.h>
            void *xmalloc(size_t size) {
                void *ptr = malloc(size);
                if (!ptr) {
                    exit(EXIT_FAILURE);
                }
                return ptr;
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define xmalloc])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([xrealloc], [], [
    AC_MSG_NOTICE([Defining xrealloc as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([ 
        AC_LANG_PROGRAM([ 
            #include <stdlib.h>
            void *xrealloc(void *ptr, size_t size) {
                void *new_ptr = realloc(ptr, size);
                if (!new_ptr) {
                    exit(EXIT_FAILURE);
                }
                return new_ptr;
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define xrealloc])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([rpl_stpcpy], [], [
    AC_MSG_NOTICE([Defining rpl_stpcpy as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([ 
        AC_LANG_PROGRAM([ 
            #include <string.h>
            char *rpl_stpcpy(char *dest, const char *src) {
                return stpcpy(dest, src);
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define rpl_stpcpy])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([xalloc_die], [], [
    AC_MSG_NOTICE([Defining xalloc_die as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([ 
        AC_LANG_PROGRAM([ 
            #include <stdio.h>
            void xalloc_die(void) {
                fprintf(stderr, "Memory allocation failed\n");
                exit(EXIT_FAILURE);
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define xalloc_die])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([safe_write], [], [
    AC_MSG_NOTICE([Defining safe_write as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([ 
        AC_LANG_PROGRAM([ 
            #include <unistd.h>
            ssize_t safe_write(int fd, const void *buf, size_t count) {
                ssize_t result = write(fd, buf, count);
                if (result < 0) {
                    // handle error
                }
                return result;
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define safe_write])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([at_fatal_signal], [], [
    AC_MSG_NOTICE([Defining at_fatal_signal as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([ 
        AC_LANG_PROGRAM([ 
            #include <signal.h>
            void at_fatal_signal(void (*handler)(int)) {
                signal(SIGTERM, handler);
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define at_fatal_signal])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([styled_ostream_create], [], [
    AC_MSG_NOTICE([Defining styled_ostream_create as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([ 
        AC_LANG_PROGRAM([ 
            void *styled_ostream_create(void) {
                return NULL; // placeholder implementation
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define styled_ostream_create])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([styled_ostream_begin_use_class], [], [
    AC_MSG_NOTICE([Defining styled_ostream_begin_use_class as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([ 
        AC_LANG_PROGRAM([ 
            void styled_ostream_begin_use_class(void) {
                // placeholder implementation
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define styled_ostream_begin_use_class])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([styled_ostream_set_hyperlink], [], [
    AC_MSG_NOTICE([Defining styled_ostream_set_hyperlink as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([ 
        AC_LANG_PROGRAM([ 
            void styled_ostream_set_hyperlink(void *stream, const char *url) {
                // placeholder implementation
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define styled_ostream_set_hyperlink])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([file_ostream_create], [], [
    AC_MSG_NOTICE([Defining file_ostream_create as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([ 
        AC_LANG_PROGRAM([ 
            void *file_ostream_create(const char *filename) {
                return NULL; // placeholder implementation
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define file_ostream_create])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([html_styled_ostream_create], [], [
    AC_MSG_NOTICE([Defining html_styled_ostream_create as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([ 
        AC_LANG_PROGRAM([ 
            void *html_styled_ostream_create(void) {
                return NULL; // placeholder implementation
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define html_styled_ostream_create])
    ])
    AC_LANG_POP
])

AC_CHECK_FUNC([get_fatal_signals], [], [
    AC_MSG_NOTICE([Defining get_fatal_signals as a placeholder])
    AC_LANG_PUSH([C])
    AC_COMPILE_IFELSE([ 
        AC_LANG_PROGRAM([ 
            void get_fatal_signals(void) {
                // placeholder implementation
            }
        ])
    ], [], [
        AC_MSG_ERROR([Failed to define get_fatal_signals])
    ])
    AC_LANG_POP
])

(오류)
configure.ac:6: error: AC_GNU_LIB_TOOL: macro not found in directory /usr/share/aclocal
(수정)
configure.ac 수정
AC_GNU_LIB_TOOL
m4_ifdef([GNULIB_INIT], [GNULIB_INIT])
m4_pattern_allow([^AC_GNU_LIB_TOOL$])

(오류)
checking whether NLS is requested... yes
checking for GNU gettext in libc... no
checking whether to use NLS... no
(수정)
NLS(Native Language Support)를 사용하려고 했으나, 
gettext 라이브러리가 시스템에 설치되어 있지 않거나 잘못된 위치에 있다. 국제화 기능 비활성화

~/.bashrc 수정
# Set language and locale for gettext
export LANG=ko_KR.UTF-8
export LC_ALL=ko_KR.UTF-8

#/c/msys64/bin/gettext.exe
export PATH="/c/gnulib:/c/msys64/mingw64/bin:/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/c/msys64/bin"

configure.ac 수정
#./configure --with-libintl-prefix=/c/msys64/mingw64
# /c/msys64/mingw64/bin/gcc.exe
AC_ARG_WITH([libintl-prefix],
            [AS_HELP_STRING([--with-libintl-prefix=DIR],
                            [Specify the installation directory of libintl])],
            [libintl_prefix="$withval"], [libintl_prefix="/c/msys64/mingw64"])

(오류)
xalloc.h: No such file or directory
(수정)
"C:\gnulib\lib\xalloc.h"
"C:\libidn2\gettext-0.22.5\libtextstyle\lib\xalloc.h"
~/.bashrc 수정(/c/gnulib/lib, /c/libidn2/gettext-0.22.5/libtextstyle/lib 추가)
export PATH="/c/gnulib:/c/msys64/mingw64/bin:/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/c/msys64/bin:/c/gnulib/lib"

(오류)
checking for dlopen in -ldl... no
(수정)
dlopen 함수는 동적 라이브러리를 로드하기 위한 함수
MinGW에서는 기본적으로 지원되지 않음.
Windows에서는 dlopen 대신 LoadLibrary와 같은 함수를 사용해야 함
lib/libxml/xmlmodule.c
lib/localename-unsafe.c
lib/ltdl/libltdl/loaders/dlopen.c
lib/ltdl/ltdl.c
lib/ltdl/libltdl/loaders/preopen.c

lib/xmllib/xmlmodule.c 수정
#if defined(_WIN32) && !defined(__CYGWIN__)
static void *
xmlModulePlatformOpen(const char *name)
{
    return LoadLibraryA(name);
}
static int
xmlModulePlatformClose(void *handle) /*dlopen->windowsAPI LoadLibrary*/
{
    // int rc;

    // rc = FreeLibrary(handle);
    // return (0 == rc);

	return FreeLibrary(handle) ? 0 : -1; // 성공 시 0, 실패 시 -1
}
static int
xmlModulePlatformSymbol(void *handle, const char *name, void **symbol) /*dlopen->windowsAPI LoadLibrary*/
{
// XML_IGNORE_PEDANTIC_WARNINGS
// #ifdef _WIN32_WCE
//     /*
//      * GetProcAddressA seems only available on WinCE
//      */
//     *symbol = GetProcAddressA(handle, name);
// #else
//     *symbol = GetProcAddress(handle, name);
// #endif
//     return (NULL == *symbol) ? -1 : 0;
// XML_POP_WARNINGS

*symbol = GetProcAddress(handle, name); // 함수 주소 가져오기
return (*symbol == NULL) ? -1 : 0; // 성공 시 0, 실패 시 -1
}
#endif /* _WIN32 */

lib/localename-unsafe.c 수정
if (querylocale_found == 0)
{
    /* dlopen -> LoadLibrary */
    HINSTANCE handle = LoadLibrary("libroot-addon-icu.dll");
    if (!handle) {
        fprintf(stderr, "Error opening library: %lu\n", GetLastError());
        return;
    }

    if (handle != NULL)
    {
        /* GetProcAddress를 사용하여 querylocale_method 함수 포인터 가져오기 */
        querylocale_method = (void *)GetProcAddress(handle, "?_QueryLocale@ICULocaleBackend@Libroot@BPrivate@@QAEXH@Z");
        if (querylocale_method != NULL)
        {
            querylocale_found = 1; // 함수 포인터가 성공적으로 가져와졌음
        }
        else
            querylocale_found = -1; // 함수 포인터를 가져오지 못함
    }
    else
        querylocale_found = -1; // handle이 NULL인 경우
}


lib/ltdl/libltdl/loaders/dlopen.c 수정
  // Windows API로 변경: LoadLibrary를 사용하여 모듈을 열기
  module = (lt_module) LoadLibrary(filename); /*dlopen->windowsAPI LoadLibrary*/

  // Windows API로 변경: FreeLibrary를 사용하여 모듈을 언로드합니다.
  if (!FreeLibrary((HMODULE)module)) /*dlclose->windowsAPI FreeLibrary*/

  // Windows API로 변경: GetProcAddress를 사용하여 심볼을 검색합니다.
  void *symbol = (void *) GetProcAddress((HMODULE)module, symbolname); /*dlsym->windowsAPI GetProcAddress*/

lib/ltdl/ltdl.c 수정
/* /* ltdl.c -- system independent dlopen wrapper */  /*dlopen->windowsAPI LoadLibrary*/
/* ltdl.c -- system independent LoadLibrary wrapper

   Copyright (C) 1998-2000, 2004-2008, 2011-2015 Free Software
   Foundation, Inc.
   Written by Thomas Tanner, 1998

   NOTE: The canonical source of this file is maintained with the
   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.

GNU Libltdl is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later version.

As a special exception to the GNU Lesser General Public License,
if you distribute this file as part of a program or library that
is built using GNU Libtool, you may include this file under the
same distribution terms that you use for the rest of that program.

GNU Libltdl is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with GNU Libltdl; see the file COPYING.LIB.  If not, a
copy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,
or obtained by writing to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
*/

#include "lt__private.h"
#include "lt_system.h"
#include "lt_dlloader.h"


/* --- MANIFEST CONSTANTS --- */


/* Standard libltdl search path environment variable name  */
#undef  LTDL_SEARCHPATH_VAR
#define LTDL_SEARCHPATH_VAR	"LTDL_LIBRARY_PATH"

/* Standard libtool archive file extension.  */
#undef  LT_ARCHIVE_EXT
#define LT_ARCHIVE_EXT	".la"

/* max. filename length */
#if !defined LT_FILENAME_MAX
#  define LT_FILENAME_MAX	1024
#endif

#if !defined LT_LIBEXT
#  define LT_LIBEXT "a"
#endif

#if !defined LT_LIBPREFIX
#  define LT_LIBPREFIX "lib"
#endif

/* This is the maximum symbol size that won't require malloc/free */
#undef	LT_SYMBOL_LENGTH
#define LT_SYMBOL_LENGTH	128

/* This accounts for the _LTX_ separator */
#undef	LT_SYMBOL_OVERHEAD
#define LT_SYMBOL_OVERHEAD	5

/* Various boolean flags can be stored in the flags field of an
   lt_dlhandle... */
#define LT_DLIS_RESIDENT(handle)  ((handle)->info.is_resident)
#define LT_DLIS_SYMGLOBAL(handle) ((handle)->info.is_symglobal)
#define LT_DLIS_SYMLOCAL(handle)  ((handle)->info.is_symlocal)


static	const char	objdir[]		= LT_OBJDIR;
static	const char	archive_ext[]		= LT_ARCHIVE_EXT;
static  const char	libext[]		= LT_LIBEXT;
static  const char	libprefix[]		= LT_LIBPREFIX;
#if defined LT_MODULE_EXT
static	const char	shlib_ext[]		= LT_MODULE_EXT;
#endif
/* If the loadable module suffix is not the same as the linkable
 * shared library suffix, this will be defined. */
#if defined LT_SHARED_EXT
static	const char	shared_ext[]		= LT_SHARED_EXT;
#endif
#if defined LT_DLSEARCH_PATH
static	const char	sys_dlsearch_path[]	= LT_DLSEARCH_PATH;
#endif




/* --- DYNAMIC MODULE LOADING --- */


/* The type of a function used at each iteration of  foreach_dirinpath().  */
typedef int	foreach_callback_func (char *filename, void *data1,
				       void *data2);
/* foreachfile_callback itself calls a function of this type: */
typedef int	file_worker_func      (const char *filename, void *data);


static	int	foreach_dirinpath     (const char *search_path,
				       const char *base_name,
				       foreach_callback_func *func,
				       void *data1, void *data2);
static	int	find_file_callback    (char *filename, void *data1,
				       void *data2);
static	int	find_handle_callback  (char *filename, void *data,
				       void *ignored);
static	int	foreachfile_callback  (char *filename, void *data1,
				       void *data2);


static	int     canonicalize_path     (const char *path, char **pcanonical);
static	int	argzize_path	      (const char *path,
				       char **pargz, size_t *pargz_len);
static	FILE   *find_file	      (const char *search_path,
				       const char *base_name, char **pdir);
static	lt_dlhandle *find_handle      (const char *search_path,
				       const char *base_name,
				       lt_dlhandle *handle,
				       lt_dladvise advise);
static	int	find_module	      (lt_dlhandle *handle, const char *dir,
				       const char *libdir, const char *dlname,
				       const char *old_name, int installed,
				       lt_dladvise advise);
static  int     has_library_ext       (const char *filename);
static	int	load_deplibs	      (lt_dlhandle handle,  char *deplibs);
static	int	trim		      (char **dest, const char *str);
/* static	int	try_dlopen	      (lt_dlhandle *handle, */  /*dlopen->windowsAPI LoadLibrary*/
static	int	try_LoadLibrary	      (lt_dlhandle *handle,
				       const char *filename, const char *ext,
				       lt_dladvise advise);
/* static	int	tryall_dlopen	      (lt_dlhandle *handle, */  /*dlopen->windowsAPI LoadLibrary*/
static	int	tryall_LoadLibrary	      (lt_dlhandle *handle,
				       const char *filename,
				       lt_dladvise padvise,
				       const lt_dlvtable *vtable);
static	int	unload_deplibs	      (lt_dlhandle handle);
static	int	lt_argz_insert	      (char **pargz, size_t *pargz_len,
				       char *before, const char *entry);
static	int	lt_argz_insertinorder (char **pargz, size_t *pargz_len,
				       const char *entry);
static	int	lt_argz_insertdir     (char **pargz, size_t *pargz_len,
				       const char *dirnam, struct dirent *dp);
static	int	lt_dlpath_insertdir   (char **ppath, char *before,
				       const char *dir);
static	int	list_files_by_dir     (const char *dirnam,
				       char **pargz, size_t *pargz_len);
static	int	file_not_found	      (void);

#ifdef HAVE_LIBDLLOADER
static	int	loader_init_callback  (lt_dlhandle handle);
#endif /* HAVE_LIBDLLOADER */

static	int	loader_init	      (lt_get_vtable *vtable_func,
				       lt_user_data data);

static	char	       *user_search_path= 0;
static	lt_dlhandle	handles	= 0;
static	int		initialized	= 0;

/* Our memory failure callback sets the error message to be passed back
   up to the client, so we must be careful to return from mallocation
   callers if allocation fails (as this callback returns!!).  */
void
lt__alloc_die_callback (void)
{
  LT__SETERROR (NO_MEMORY);
}

#ifdef HAVE_LIBDLLOADER
/* This function is called to initialise each preloaded module loader,
   and hook it into the list of loaders to be used when attempting to
/* dlopen an application module.  */ */  /*dlopen->windowsAPI LoadLibrary*/
   LoadLibrary an application module.  */
static int
loader_init_callback (lt_dlhandle handle)
{
  lt_get_vtable *vtable_func = (lt_get_vtable *) lt_dlsym (handle, "get_vtable");
  return loader_init (vtable_func, 0);
}
#endif /* HAVE_LIBDLLOADER */

static int
loader_init (lt_get_vtable *vtable_func, lt_user_data data)
{
  const lt_dlvtable *vtable = 0;
  int errors = 0;

  if (vtable_func)
    {
      vtable = (*vtable_func) (data);
    }

  /* lt_dlloader_add will LT__SETERROR if it fails.  */
  errors += lt_dlloader_add (vtable);

  assert (errors || vtable);

  if ((!errors) && vtable->dlloader_init)
    {
      if ((*vtable->dlloader_init) (vtable->dlloader_data))
	{
	  LT__SETERROR (INIT_LOADER);
	  ++errors;
	}
    }

  return errors;
}

/* Bootstrap the loader loading with the preopening loader.  */
#define get_vtable		preopen_LTX_get_vtable
#define preloaded_symbols	LT_CONC3(lt_, LTDLOPEN, _LTX_preloaded_symbols)

LT_BEGIN_C_DECLS
LT_SCOPE const lt_dlvtable *	get_vtable (lt_user_data data);
LT_END_C_DECLS
#ifdef HAVE_LIBDLLOADER
extern LT_DLSYM_CONST lt_dlsymlist preloaded_symbols[];
#endif

/* Initialize libltdl. */
int
lt_dlinit (void)
{
  int	errors	= 0;

  /* Initialize only at first call. */
  if (++initialized == 1)
    {
      lt__alloc_die	= lt__alloc_die_callback;
      handles		= 0;
      user_search_path	= 0; /* empty search path */

      /* First set up the statically loaded preload module loader, so
	 we can use it to preopen the other loaders we linked in at
	 compile time.  */
      errors += loader_init (get_vtable, 0);

      /* Now open all the preloaded module loaders, so the application
/* can use _them_ to lt_dlopen its own modules.  */ */  /*dlopen->windowsAPI LoadLibrary*/
	 can use _them_ to lt_LoadLibrary its own modules.  */
#ifdef HAVE_LIBDLLOADER
      if (!errors)
	{
	  errors += lt_dlpreload (preloaded_symbols);
	}

      if (!errors)
	{
	  errors += lt_dlpreload_open (LT_STR(LTDLOPEN), loader_init_callback);
	}
#endif /* HAVE_LIBDLLOADER */
    }

#ifdef LT_DEBUG_LOADERS
  lt_dlloader_dump();
#endif

  return errors;
}

int
lt_dlexit (void)
{
  /* shut down libltdl */
  lt_dlloader *loader   = 0;
  lt_dlhandle  handle   = handles;
  int	       errors   = 0;

  if (!initialized)
    {
      LT__SETERROR (SHUTDOWN);
      ++errors;
      goto done;
    }

  /* shut down only at last call. */
  if (--initialized == 0)
    {
      int	level;

      while (handles && LT_DLIS_RESIDENT (handles))
	{
	  handles = handles->next;
	}

      /* close all modules */
      for (level = 1; handle; ++level)
	{
	  lt_dlhandle cur = handles;
	  int saw_nonresident = 0;

	  while (cur)
	    {
	      lt_dlhandle tmp = cur;
	      cur = cur->next;
	      if (!LT_DLIS_RESIDENT (tmp))
		{
		  saw_nonresident = 1;
		  if (tmp->info.ref_count <= level)
		    {
		      if (lt_dlclose (tmp))
			{
			  ++errors;
			}
		      /* Make sure that the handle pointed to by 'cur' still exists.
			 lt_dlclose recursively closes dependent libraries, which removes
			 them from the linked list.  One of these might be the one
			 pointed to by 'cur'.  */
		      if (cur)
			{
			  for (tmp = handles; tmp; tmp = tmp->next)
			    if (tmp == cur)
			      break;
			  if (! tmp)
			    cur = handles;
			}
		    }
		}
	    }
	  /* done if only resident modules are left */
	  if (!saw_nonresident)
	    break;
	}

      /* When removing loaders, we can only find out failure by testing
	 the error string, so avoid a spurious one from an earlier
	 failed command. */
      if (!errors)
	LT__SETERRORSTR (0);

      /* close all loaders */
      for (loader = (lt_dlloader *) lt_dlloader_next (NULL); loader;)
	{
	  lt_dlloader *next   = (lt_dlloader *) lt_dlloader_next (loader);
	  lt_dlvtable *vtable = (lt_dlvtable *) lt_dlloader_get (loader);

	  if ((vtable = lt_dlloader_remove ((char *) vtable->name)))
	    {
	      FREE (vtable);
	    }
	  else
	    {
	      /* ignore errors due to resident modules */
	      const char *err;
	      LT__GETERROR (err);
	      if (err)
		++errors;
	    }

	  loader = next;
	}

      FREE(user_search_path);
    }

 done:
  return errors;
}


/* Try VTABLE or, if VTABLE is NULL, all available loaders for FILENAME.
   If the library is not successfully loaded, return non-zero.  Otherwise,
   the dlhandle is stored at the address given in PHANDLE.  */
static int
/* tryall_dlopen (lt_dlhandle *phandle, const char *filename, */  /*dlopen->windowsAPI LoadLibrary*/
tryall_LoadLibrary (lt_dlhandle *phandle, const char *LPCSTR filename,
	       lt_dladvise advise, const lt_dlvtable *vtable)
{
  lt_dlhandle	handle		= handles;
  const char *	saved_error	= 0;
  int		errors		= 0;

#ifdef LT_DEBUG_LOADERS
/* fprintf (stderr, "tryall_dlopen (%s, %s)\n", */  /*dlopen->windowsAPI LoadLibrary*/
  fprintf (stderr, "tryall_LoadLibrary (%s, %s)\n",
	   filename ? filename : "(null)",
	   vtable ? vtable->name : "(ALL)");
#endif

  LT__GETERROR (saved_error);

  /* check whether the module was already opened */
  for (;handle; handle = handle->next)
    {
/* if ((handle->info.filename == filename) /* dlopen self: 0 == 0 */ */  /*dlopen->windowsAPI LoadLibrary*/
      if ((handle->info.LPCSTR filename == LPCSTR filename) /* LoadLibrary self: 0 == 0 */
	  || (handle->info.filename && filename
	      && STREQ (handle->info.filename, filename)))
	{
	  break;
	}
    }

  if (handle)
    {
      ++handle->info.ref_count;
      *phandle = handle;
      goto done;
    }

  handle = *phandle;
  if (filename)
    {
      /* Comment out the check of file permissions using access.
	 This call seems to always return -1 with error EACCES.
      */
      /* We need to catch missing file errors early so that
	 file_not_found() can detect what happened.
      if (access (filename, R_OK) != 0)
	{
	  LT__SETERROR (FILE_NOT_FOUND);
	  ++errors;
	  goto done;
	} */

      handle->info.filename = lt__strdup (filename);
      if (!handle->info.filename)
	{
	  ++errors;
	  goto done;
	}
    }
  else
    {
      handle->info.filename = 0;
    }

  {
    lt_dlloader loader = lt_dlloader_next (0);
    const lt_dlvtable *loader_vtable;

    do
      {
	if (vtable)
	  loader_vtable = vtable;
	else
	  loader_vtable = lt_dlloader_get (loader);

#ifdef LT_DEBUG_LOADERS
	fprintf (stderr, "Calling %s->module_open (%s)\n",
		 (loader_vtable && loader_vtable->name) ? loader_vtable->name : "(null)",
		 filename ? filename : "(null)");
#endif
	handle->module = (*loader_vtable->module_open) (loader_vtable->dlloader_data,
							filename, advise);
#ifdef LT_DEBUG_LOADERS
	if (!handle->module) {
		char *error;
		LT__GETERROR(error);
		fprintf (stderr, "  Result: Failed\n"
				"  Error message << %s >>\n",
				error ? error : "(null)");
	} else {
		fprintf (stderr, "  Result: Success\n");
	}
#endif

	if (handle->module != 0)
	  {
	    if (advise)
	      {
		handle->info.is_resident  = advise->is_resident;
		handle->info.is_symglobal = advise->is_symglobal;
		handle->info.is_symlocal  = advise->is_symlocal;
	      }
	    break;
	  }
      }
    while (!vtable && (loader = lt_dlloader_next (loader)));

    /* If VTABLE was given but couldn't open the module, or VTABLE wasn't
       given but we exhausted all loaders without opening the module, bail
       out!  */
    if ((vtable && !handle->module)
	|| (!vtable && !loader))
      {
	FREE (handle->info.filename);
	++errors;
	goto done;
      }

    handle->vtable = loader_vtable;
  }

  LT__SETERRORSTR (saved_error);

 done:
  return errors;
}


static int
/* tryall_dlopen_module (lt_dlhandle *handle, const char *prefix, */  /*dlopen->windowsAPI LoadLibrary*/
tryall_LoadLibrary_module (lt_dlhandle *handle, const char *prefix,
		      const char *dirname, const char *dlname,
		      lt_dladvise advise)
{
  int      error	= 0;
  char     *filename	= 0;
  size_t   filename_len	= 0;
  size_t   dirname_len	= LT_STRLEN (dirname);

  assert (handle);
  assert (dirname);
  assert (dlname);
#if defined LT_DIRSEP_CHAR
  /* Only canonicalized names (i.e. with DIRSEP chars already converted)
     should make it into this function:  */
  assert (strchr (dirname, LT_DIRSEP_CHAR) == 0);
#endif

  if (dirname_len > 0)
    if (dirname[dirname_len -1] == '/')
      --dirname_len;
  filename_len = dirname_len + 1 + LT_STRLEN (dlname);

  /* Allocate memory, and combine DIRNAME and MODULENAME into it.
     The PREFIX (if any) is handled below.  */
  filename  = MALLOC (char, filename_len + 1);
  if (!filename)
    return 1;

  sprintf (filename, "%.*s/%s", (int) dirname_len, dirname, dlname);

  /* Now that we have combined DIRNAME and MODULENAME, if there is
     also a PREFIX to contend with, simply recurse with the arguments
     shuffled.  Otherwise, attempt to open FILENAME as a module.  */
  if (prefix)
    {
/* error += tryall_dlopen_module (handle, (const char *) 0, */  /*dlopen->windowsAPI LoadLibrary*/
      error += tryall_LoadLibrary_module (handle, (const char *) 0,
				     prefix, filename, advise);
    }
/* else if (tryall_dlopen (handle, filename, advise, 0) != 0) */  /*dlopen->windowsAPI LoadLibrary*/
  else if (tryall_LoadLibrary (handle, LPCSTR filename, advise, 0) != 0)
    {
      ++error;
    }

  FREE (filename);
  return error;
}

static int
find_module (lt_dlhandle *handle, const char *dir, const char *libdir,
	     const char *dlname,  const char *old_name, int installed,
	     lt_dladvise advise)
{
  /* Try to open the old library first; if it was dlpreopened,
/* we want the preopened version of it, even if a dlopenable */  /*dlopen->windowsAPI LoadLibrary*/
     we want the preopened version of it, even if a LoadLibraryable
     module is available.  */
/* if (old_name && tryall_dlopen (handle, old_name, */  /*dlopen->windowsAPI LoadLibrary*/
  if (old_name && tryall_LoadLibrary (handle, old_name,
			  advise, lt_dlloader_find ("lt_preopen") ) == 0)
    {
      return 0;
    }

  /* Try to open the dynamic library.  */
  if (dlname)
    {
      /* try to open the installed module */
      if (installed && libdir)
	{
/* if (tryall_dlopen_module (handle, (const char *) 0, */  /*dlopen->windowsAPI LoadLibrary*/
	  if (tryall_LoadLibrary_module (handle, (const char *) 0,
				    libdir, dlname, advise) == 0)
	    return 0;
	}

      /* try to open the not-installed module */
      if (!installed)
	{
/* if (tryall_dlopen_module (handle, dir, objdir, */  /*dlopen->windowsAPI LoadLibrary*/
	  if (tryall_LoadLibrary_module (handle, dir, objdir,
				    dlname, advise) == 0)
	    return 0;
	}

      /* maybe it was moved to another directory */
      {
/* if (dir && (tryall_dlopen_module (handle, (const char *) 0, */  /*dlopen->windowsAPI LoadLibrary*/
	  if (dir && (tryall_LoadLibrary_module (handle, (const char *) 0,
					    dir, dlname, advise) == 0))
	    return 0;
      }
    }

  return 1;
}


static int
canonicalize_path (const char *path, char **pcanonical)
{
  char *canonical = 0;

  assert (path && *path);
  assert (pcanonical);

  canonical = MALLOC (char, 1+ LT_STRLEN (path));
  if (!canonical)
    return 1;

  {
    size_t dest = 0;
    size_t src;
    for (src = 0; path[src] != LT_EOS_CHAR; ++src)
      {
	/* Path separators are not copied to the beginning or end of
	   the destination, or if another separator would follow
	   immediately.  */
	if (path[src] == LT_PATHSEP_CHAR)
	  {
	    if ((dest == 0)
		|| (path[1+ src] == LT_PATHSEP_CHAR)
		|| (path[1+ src] == LT_EOS_CHAR))
	      continue;
	  }

	/* Anything other than a directory separator is copied verbatim.  */
	if ((path[src] != '/')
#if defined LT_DIRSEP_CHAR
	    && (path[src] != LT_DIRSEP_CHAR)
#endif
	    )
	  {
	    canonical[dest++] = path[src];
	  }
	/* Directory separators are converted and copied only if they are
	   not at the end of a path -- i.e. before a path separator or
	   NULL terminator.  */
	else if ((path[1+ src] != LT_PATHSEP_CHAR)
		 && (path[1+ src] != LT_EOS_CHAR)
#if defined LT_DIRSEP_CHAR
		 && (path[1+ src] != LT_DIRSEP_CHAR)
#endif
		 && (path[1+ src] != '/'))
	  {
	    canonical[dest++] = '/';
	  }
      }

    /* Add an end-of-string marker at the end.  */
    canonical[dest] = LT_EOS_CHAR;
  }

  /* Assign new value.  */
  *pcanonical = canonical;

  return 0;
}

static int
argzize_path (const char *path, char **pargz, size_t *pargz_len)
{
  error_t error;

  assert (path);
  assert (pargz);
  assert (pargz_len);

  if ((error = argz_create_sep (path, LT_PATHSEP_CHAR, pargz, pargz_len)))
    {
      switch (error)
	{
	case ENOMEM:
	  LT__SETERROR (NO_MEMORY);
	  break;
	default:
	  LT__SETERROR (UNKNOWN);
	  break;
	}

      return 1;
    }

  return 0;
}

/* Repeatedly call FUNC with each LT_PATHSEP_CHAR delimited element
   of SEARCH_PATH and references to DATA1 and DATA2, until FUNC returns
   non-zero or all elements are exhausted.  If BASE_NAME is non-NULL,
   it is appended to each SEARCH_PATH element before FUNC is called.  */
static int
foreach_dirinpath (const char *search_path, const char *base_name,
		   foreach_callback_func *func, void *data1, void *data2)
{
  int	 result		= 0;
  size_t filenamesize	= 0;
  size_t lenbase	= LT_STRLEN (base_name);
  size_t argz_len	= 0;
  char *argz		= 0;
  char *filename	= 0;
  char *canonical	= 0;

  if (!search_path || !*search_path)
    {
      LT__SETERROR (FILE_NOT_FOUND);
      goto cleanup;
    }

  if (canonicalize_path (search_path, &canonical) != 0)
    goto cleanup;

  if (argzize_path (canonical, &argz, &argz_len) != 0)
    goto cleanup;

  {
    char *dir_name = 0;
    while ((dir_name = argz_next (argz, argz_len, dir_name)))
      {
	size_t lendir = LT_STRLEN (dir_name);

	if (1+ lendir + lenbase >= filenamesize)
	{
	  FREE (filename);
	  filenamesize	= 1+ lendir + 1+ lenbase; /* "/d" + '/' + "f" + '\0' */
	  filename	= MALLOC (char, filenamesize);
	  if (!filename)
	    goto cleanup;
	}

	assert (filenamesize > lendir);
	strcpy (filename, dir_name);

	if (base_name && *base_name)
	  {
	    if (filename[lendir -1] != '/')
	      filename[lendir++] = '/';
	    strcpy (filename +lendir, base_name);
	  }

	if ((result = (*func) (filename, data1, data2)))
	  {
	    break;
	  }
      }
  }

 cleanup:
  FREE (argz);
  FREE (canonical);
  FREE (filename);

  return result;
}

/* If FILEPATH can be opened, store the name of the directory component
   in DATA1, and the opened FILE* structure address in DATA2.  Otherwise
   DATA1 is unchanged, but DATA2 is set to a pointer to NULL.  */
static int
find_file_callback (char *filename, void *data1, void *data2)
{
  char	     **pdir	= (char **) data1;
  FILE	     **pfile	= (FILE **) data2;
  int	     is_done	= 0;

  assert (filename && *filename);
  assert (pdir);
  assert (pfile);

  if ((*pfile = fopen (filename, LT_READTEXT_MODE)))
    {
      char *dirend = strrchr (filename, '/');

      if (dirend > filename)
	*dirend   = LT_EOS_CHAR;

      FREE (*pdir);
      *pdir   = lt__strdup (filename);
      is_done = (*pdir == 0) ? -1 : 1;
    }

  return is_done;
}

static FILE *
find_file (const char *search_path, const char *base_name, char **pdir)
{
  FILE *file = 0;

  foreach_dirinpath (search_path, base_name, find_file_callback, pdir, &file);

  return file;
}

static int
find_handle_callback (char *filename, void *data, void *data2)
{
  lt_dlhandle  *phandle		= (lt_dlhandle *) data;
  int		notfound	= access (filename, R_OK);
  lt_dladvise   advise		= (lt_dladvise) data2;

  /* Bail out if file cannot be read...  */
  if (notfound)
    return 0;

/* /* Try to dlopen the file, but do not continue searching in any */  /*dlopen->windowsAPI LoadLibrary*/
  /* Try to LoadLibrary the file, but do not continue searching in any
     case.  */
/* if (tryall_dlopen (phandle, filename, advise, 0) != 0) */  /*dlopen->windowsAPI LoadLibrary*/
  if (tryall_LoadLibrary (phandle, LPCSTR filename, advise, 0) != 0)
    *phandle = 0;

  return 1;
}

/* If HANDLE was found return it, otherwise return 0.  If HANDLE was
   found but could not be opened, *HANDLE will be set to 0.  */
static lt_dlhandle *
find_handle (const char *search_path, const char *base_name,
	     lt_dlhandle *phandle, lt_dladvise advise)
{
  if (!search_path)
    return 0;

  if (!foreach_dirinpath (search_path, base_name, find_handle_callback,
			  phandle, advise))
    return 0;

  return phandle;
}

#if !defined LTDL_DLOPEN_DEPLIBS
static int
load_deplibs (lt_dlhandle handle, char * deplibs LT__UNUSED)
{
  handle->depcount = 0;
  return 0;
}

#else /* defined LTDL_DLOPEN_DEPLIBS */
static int
load_deplibs (lt_dlhandle handle, char *deplibs)
{
  char	*p, *save_search_path = 0;
  int   depcount = 0;
  int	i;
  char	**names = 0;
  int	errors = 0;

  handle->depcount = 0;

  if (!deplibs)
    {
      return errors;
    }
  ++errors;

  if (user_search_path)
    {
      save_search_path = lt__strdup (user_search_path);
      if (!save_search_path)
	goto cleanup;
    }

  /* extract search paths and count deplibs */
  p = deplibs;
  while (*p)
    {
      if (!isspace ((unsigned char) *p))
	{
	  char *end = p+1;
	  while (*end && !isspace((unsigned char) *end))
	    {
	      ++end;
	    }

	  if (strncmp(p, "-L", 2) == 0 || strncmp(p, "-R", 2) == 0)
	    {
	      char save = *end;
	      *end = 0; /* set a temporary string terminator */
	      if (lt_dladdsearchdir(p+2))
		{
		  goto cleanup;
		}
	      *end = save;
	    }
	  else
	    {
	      ++depcount;
	    }

	  p = end;
	}
      else
	{
	  ++p;
	}
    }


  if (!depcount)
    {
      errors = 0;
      goto cleanup;
    }

  names = MALLOC (char *, depcount);
  if (!names)
    goto cleanup;

  /* now only extract the actual deplibs */
  depcount = 0;
  p = deplibs;
  while (*p)
    {
      if (isspace ((unsigned char) *p))
	{
	  ++p;
	}
      else
	{
	  char *end = p+1;
	  while (*end && !isspace ((unsigned char) *end))
	    {
	      ++end;
	    }

	  if (strncmp(p, "-L", 2) != 0 && strncmp(p, "-R", 2) != 0)
	    {
	      char *name;
	      char save = *end;
	      *end = 0; /* set a temporary string terminator */
	      if (strncmp(p, "-l", 2) == 0)
		{
		  size_t name_len = 3+ /* "lib" */ LT_STRLEN (p + 2);
		  name = MALLOC (char, 1+ name_len);
		  if (name)
		    sprintf (name, "lib%s", p+2);
		}
	      else
		name = lt__strdup(p);

	      if (!name)
		goto cleanup_names;

	      names[depcount++] = name;
	      *end = save;
	    }
	  p = end;
	}
    }

  /* load the deplibs (in reverse order)
     At this stage, don't worry if the deplibs do not load correctly,
     they may already be statically linked into the loading application
     for instance.  There will be a more enlightening error message
     later on if the loaded module cannot resolve all of its symbols.  */
  if (depcount)
    {
      lt_dlhandle cur = handle;
      int	j = 0;

      cur->deplibs = MALLOC (lt_dlhandle, depcount);
      if (!cur->deplibs)
	goto cleanup_names;

      for (i = 0; i < depcount; ++i)
	{
/* cur->deplibs[j] = lt_dlopenext(names[depcount-1-i]); */  /*dlopen->windowsAPI LoadLibrary*/
	  cur->deplibs[j] = lt_LoadLibraryext(names[depcount-1-i]);
	  if (cur->deplibs[j])
	    {
	      ++j;
	    }
	}

      cur->depcount	= j;	/* Number of successfully loaded deplibs */
      errors		= 0;
    }

 cleanup_names:
  for (i = 0; i < depcount; ++i)
    {
      FREE (names[i]);
    }

 cleanup:
  FREE (names);
  /* restore the old search path */
  if (save_search_path) {
    MEMREASSIGN (user_search_path, save_search_path);
  }

  return errors;
}
#endif /* defined LTDL_DLOPEN_DEPLIBS */

static int
unload_deplibs (lt_dlhandle handle)
{
  int i;
  int errors = 0;
  lt_dlhandle cur = handle;

  if (cur->depcount)
    {
      for (i = 0; i < cur->depcount; ++i)
	{
	  if (!LT_DLIS_RESIDENT (cur->deplibs[i]))
	    {
	      errors += lt_dlclose (cur->deplibs[i]);
	    }
	}
      FREE (cur->deplibs);
    }

  return errors;
}

static int
trim (char **dest, const char *str)
{
  /* remove the leading and trailing "'" from str
     and store the result in dest */
  const char *end   = strrchr (str, '\'');
  size_t len	    = LT_STRLEN (str);
  char *tmp;

  FREE (*dest);

  if (!end || end == str)
    return 1;

  if (len > 3 && str[0] == '\'')
    {
      tmp = MALLOC (char, end - str);
      if (!tmp)
	return 1;

      memcpy(tmp, &str[1], (end - str) - 1);
      tmp[(end - str) - 1] = LT_EOS_CHAR;
      *dest = tmp;
    }
  else
    {
      *dest = 0;
    }

  return 0;
}

/* Read the .la file FILE. */
static int
parse_dotla_file(FILE *file, char **dlname, char **libdir, char **deplibs,
    char **old_name, int *installed)
{
  int		errors = 0;
  size_t	line_len = LT_FILENAME_MAX;
  char *	line = MALLOC (char, line_len);

  if (!line)
    {
      LT__SETERROR (FILE_NOT_FOUND);
      return 1;
    }

  while (!feof (file))
    {
      line[line_len-2] = '\0';
      if (!fgets (line, (int) line_len, file))
	{
	  break;
	}

      /* Handle the case where we occasionally need to read a line
	 that is longer than the initial buffer size.
	 Behave even if the file contains NUL bytes due to corruption. */
      while (line[line_len-2] != '\0' && line[line_len-2] != '\n' && !feof (file))
	{
	  line = REALLOC (char, line, line_len *2);
	  if (!line)
	    {
	      ++errors;
	      goto cleanup;
	    }
	  line[line_len * 2 - 2] = '\0';
	  if (!fgets (&line[line_len -1], (int) line_len +1, file))
	    {
	      break;
	    }
	  line_len *= 2;
	}

      if (line[0] == '\n' || line[0] == '#')
	{
	  continue;
	}

#undef  STR_DLNAME
#define STR_DLNAME	"dlname="
      if (strncmp (line, STR_DLNAME, sizeof (STR_DLNAME) - 1) == 0)
	{
	  errors += trim (dlname, &line[sizeof (STR_DLNAME) - 1]);
	}

#undef  STR_OLD_LIBRARY
#define STR_OLD_LIBRARY	"old_library="
      else if (strncmp (line, STR_OLD_LIBRARY,
	    sizeof (STR_OLD_LIBRARY) - 1) == 0)
	{
	  errors += trim (old_name, &line[sizeof (STR_OLD_LIBRARY) - 1]);
	}

      /* Windows native tools do not understand the POSIX paths we store
	 in libdir. */
#undef  STR_LIBDIR
#define STR_LIBDIR	"libdir="
      else if (strncmp (line, STR_LIBDIR, sizeof (STR_LIBDIR) - 1) == 0)
	{
	  errors += trim (libdir, &line[sizeof(STR_LIBDIR) - 1]);
#ifdef __WINDOWS__
	  /* Disallow following unix-style paths on MinGW.  */
	  if (*libdir && (**libdir == '/' || **libdir == '\\'))
	    **libdir = '\0';
#endif
	}

#undef  STR_DL_DEPLIBS
#define STR_DL_DEPLIBS	"dependency_libs="
      else if (strncmp (line, STR_DL_DEPLIBS,
	    sizeof (STR_DL_DEPLIBS) - 1) == 0)
	{
	  errors += trim (deplibs, &line[sizeof (STR_DL_DEPLIBS) - 1]);
	}
      else if (STREQ (line, "installed=yes\n"))
	{
	  *installed = 1;
	}
      else if (STREQ (line, "installed=no\n"))
	{
	  *installed = 0;
	}

#undef  STR_LIBRARY_NAMES
#define STR_LIBRARY_NAMES "library_names="
      else if (!*dlname && strncmp (line, STR_LIBRARY_NAMES,
	    sizeof (STR_LIBRARY_NAMES) - 1) == 0)
	{
	  char *last_libname;
	  errors += trim (dlname, &line[sizeof (STR_LIBRARY_NAMES) - 1]);
	  if (!errors
	      && *dlname
	      && (last_libname = strrchr (*dlname, ' ')) != 0)
	    {
	      last_libname = lt__strdup (last_libname + 1);
	      if (!last_libname)
		{
		  ++errors;
		  goto cleanup;
		}
	      MEMREASSIGN (*dlname, last_libname);
	    }
	}

      if (errors)
	break;
    }
cleanup:
  FREE (line);
  return errors;
}


/* Try to open FILENAME as a module. */
static int
/* try_dlopen (lt_dlhandle *phandle, const char *filename, const char *ext, */  /*dlopen->windowsAPI LoadLibrary*/
try_LoadLibrary (lt_dlhandle *phandle, const char *LPCSTR filename, const char *ext,
	    lt_dladvise advise)
{
  const char *	saved_error	= 0;
  char *	archive_name	= 0;
  char *	canonical	= 0;
  char *	base_name	= 0;
  char *	dir		= 0;
  char *	name		= 0;
  char *        attempt		= 0;
  int		errors		= 0;
  lt_dlhandle	newhandle;

  assert (phandle);
  assert (*phandle == 0);

#ifdef LT_DEBUG_LOADERS
/* fprintf (stderr, "try_dlopen (%s, %s)\n", */  /*dlopen->windowsAPI LoadLibrary*/
  fprintf (stderr, "try_LoadLibrary (%s, %s)\n",
	   filename ? filename : "(null)",
	   ext ? ext : "(null)");
#endif

  LT__GETERROR (saved_error);

/* /* dlopen self? */ */  /*dlopen->windowsAPI LoadLibrary*/
  /* LoadLibrary self? */
  if (!filename)
    {
      *phandle = (lt_dlhandle) lt__zalloc (sizeof (struct lt__handle));
      if (*phandle == 0)
	return 1;

      newhandle	= *phandle;

      /* lt_dlclose()ing yourself is very bad!  Disallow it.  */
      newhandle->info.is_resident = 1;

/* if (tryall_dlopen (&newhandle, 0, advise, 0) != 0) */  /*dlopen->windowsAPI LoadLibrary*/
      if (tryall_LoadLibrary (&newhandle, 0, advise, 0) != 0)
	{
	  FREE (*phandle);
	  return 1;
	}

      goto register_handle;
    }

  assert (filename && *filename);

  if (ext)
    {
      attempt = MALLOC (char, LT_STRLEN (filename) + LT_STRLEN (ext) + 1);
      if (!attempt)
	return 1;

      sprintf(attempt, "%s%s", filename, ext);
    }
  else
    {
      attempt = lt__strdup (filename);
      if (!attempt)
	return 1;
    }

  /* Doing this immediately allows internal functions to safely
     assume only canonicalized paths are passed.  */
  if (canonicalize_path (attempt, &canonical) != 0)
    {
      ++errors;
      goto cleanup;
    }

  /* If the canonical module name is a path (relative or absolute)
     then split it into a directory part and a name part.  */
  base_name = strrchr (canonical, '/');
  if (base_name)
    {
      size_t dirlen = (1+ base_name) - canonical;

      dir = MALLOC (char, 1+ dirlen);
      if (!dir)
	{
	  ++errors;
	  goto cleanup;
	}

      strlcpy (dir, canonical, dirlen);
      dir[dirlen] = LT_EOS_CHAR;

      ++base_name;
    }
  else
    MEMREASSIGN (base_name, canonical);

  assert (base_name && *base_name);

  ext = strrchr (base_name, '.');
  if (!ext)
    {
      ext = base_name + LT_STRLEN (base_name);
    }

  /* extract the module name from the file name */
  name = MALLOC (char, ext - base_name + 1);
  if (!name)
    {
      ++errors;
      goto cleanup;
    }

  /* canonicalize the module name */
  {
    int i;
    for (i = 0; i < ext - base_name; ++i)
      {
	if (isalnum ((unsigned char)(base_name[i])))
	  {
	    name[i] = base_name[i];
	  }
	else
	  {
	    name[i] = '_';
	  }
      }
    name[ext - base_name] = LT_EOS_CHAR;
  }

  /* Before trawling through the file system in search of a module,
     check whether we are opening a preloaded module.  */
  if (!dir)
    {
      const lt_dlvtable *vtable	= lt_dlloader_find ("lt_preopen");

      if (vtable)
	{
	  /* libprefix + name + "." + libext + NULL */
	  archive_name = MALLOC (char, strlen (libprefix) + LT_STRLEN (name) + strlen (libext) + 2);
	  *phandle = (lt_dlhandle) lt__zalloc (sizeof (struct lt__handle));

	  if ((*phandle == NULL) || (archive_name == NULL))
	    {
	      ++errors;
	      goto cleanup;
	    }
	  newhandle = *phandle;

	  /* Preloaded modules are always named according to their old
	     archive name.  */
	  if (strncmp(name, "lib", 3) == 0)
	    {
	      sprintf (archive_name, "%s%s.%s", libprefix, name + 3, libext);
	    }
	  else
	    {
	      sprintf (archive_name, "%s.%s", name, libext);
	    }

/* if (tryall_dlopen (&newhandle, archive_name, advise, vtable) == 0) */  /*dlopen->windowsAPI LoadLibrary*/
	  if (tryall_LoadLibrary (&newhandle, archive_name, advise, vtable) == 0)
	    {
	      goto register_handle;
	    }

	  /* If we're still here, there was no matching preloaded module,
	     so put things back as we found them, and continue searching.  */
	  FREE (*phandle);
	  newhandle = NULL;
	}
    }

  /* If we are allowing only preloaded modules, and we didn't find
     anything yet, give up on the search here.  */
  if (advise && advise->try_preload_only)
    {
      goto cleanup;
    }

  /* Check whether we are opening a libtool module (.la extension).  */
  if (ext && STREQ (ext, archive_ext))
    {
      /* this seems to be a libtool module */
      FILE *	file	 = 0;
      char *	dlname	 = 0;
      char *	old_name = 0;
      char *	libdir	 = 0;
      char *	deplibs	 = 0;

      /* if we can't find the installed flag, it is probably an
	 installed libtool archive, produced with an old version
	 of libtool */
      int	installed = 1;

      /* Now try to open the .la file.  If there is no directory name
	 component, try to find it first in user_search_path and then other
	 prescribed paths.  Otherwise (or in any case if the module was not
	 yet found) try opening just the module name as passed.  */
      if (!dir)
	{
	  const char *search_path = user_search_path;

	  if (search_path)
	    file = find_file (user_search_path, base_name, &dir);

	  if (!file)
	    {
	      search_path = getenv (LTDL_SEARCHPATH_VAR);
	      if (search_path)
		file = find_file (search_path, base_name, &dir);
	    }

#if defined LT_MODULE_PATH_VAR
	  if (!file)
	    {
	      search_path = getenv (LT_MODULE_PATH_VAR);
	      if (search_path)
		file = find_file (search_path, base_name, &dir);
	    }
#endif
#if defined LT_DLSEARCH_PATH
	  if (!file && *sys_dlsearch_path)
	    {
	      file = find_file (sys_dlsearch_path, base_name, &dir);
	    }
#endif
	}
      else
	{
	  file = fopen (attempt, LT_READTEXT_MODE);
	}

      /* If we didn't find the file by now, it really isn't there.  Set
	 the status flag, and bail out.  */
      if (!file)
	{
	  LT__SETERROR (FILE_NOT_FOUND);
	  ++errors;
	  goto cleanup;
	}

      /* read the .la file */
      if (parse_dotla_file(file, &dlname, &libdir, &deplibs,
	    &old_name, &installed) != 0)
	++errors;

      fclose (file);

      /* allocate the handle */
      *phandle = (lt_dlhandle) lt__zalloc (sizeof (struct lt__handle));
      if (*phandle == 0)
	++errors;

      if (errors)
	{
	  FREE (dlname);
	  FREE (old_name);
	  FREE (libdir);
	  FREE (deplibs);
	  FREE (*phandle);
	  goto cleanup;
	}

      assert (*phandle);

      if (load_deplibs (*phandle, deplibs) == 0)
	{
	  newhandle = *phandle;
	  /* find_module may replace newhandle */
	  if (find_module (&newhandle, dir, libdir, dlname, old_name,
			   installed, advise))
	    {
	      unload_deplibs (*phandle);
	      ++errors;
	    }
	}
      else
	{
	  ++errors;
	}

      FREE (dlname);
      FREE (old_name);
      FREE (libdir);
      FREE (deplibs);

      if (errors)
	{
	  FREE (*phandle);
	  goto cleanup;
	}

      if (*phandle != newhandle)
	{
	  unload_deplibs (*phandle);
	}
    }
  else
    {
      /* not a libtool module */
      *phandle = (lt_dlhandle) lt__zalloc (sizeof (struct lt__handle));
      if (*phandle == 0)
	{
	  ++errors;
	  goto cleanup;
	}

      newhandle = *phandle;

      /* If the module has no directory name component, try to find it
	 first in user_search_path and then other prescribed paths.
	 Otherwise (or in any case if the module was not yet found) try
	 opening just the module name as passed.  */
      if ((dir || (!find_handle (user_search_path, base_name,
				 &newhandle, advise)
		   && !find_handle (getenv (LTDL_SEARCHPATH_VAR), base_name,
				    &newhandle, advise)
#if defined LT_MODULE_PATH_VAR
		   && !find_handle (getenv (LT_MODULE_PATH_VAR), base_name,
				    &newhandle, advise)
#endif
#if defined LT_DLSEARCH_PATH
		   && !find_handle (sys_dlsearch_path, base_name,
				    &newhandle, advise)
#endif
		   )))
	{
/* if (tryall_dlopen (&newhandle, attempt, advise, 0) != 0) */  /*dlopen->windowsAPI LoadLibrary*/
	  if (tryall_LoadLibrary (&newhandle, attempt, advise, 0) != 0)
	    {
	      newhandle = NULL;
	    }
	}

      if (!newhandle)
	{
	  FREE (*phandle);
	  ++errors;
	  goto cleanup;
	}
    }

 register_handle:
  MEMREASSIGN (*phandle, newhandle);

  if ((*phandle)->info.ref_count == 0)
    {
      (*phandle)->info.ref_count	= 1;
      MEMREASSIGN ((*phandle)->info.name, name);

      (*phandle)->next	= handles;
      handles		= *phandle;
    }

  LT__SETERRORSTR (saved_error);

 cleanup:
  FREE (dir);
  FREE (attempt);
  FREE (name);
  if (!canonical)		/* was MEMREASSIGNed */
    FREE (base_name);
  FREE (canonical);
  FREE (archive_name);

  return errors;
}


/* If the last error message stored was 'FILE_NOT_FOUND', then return
   non-zero.  */
static int
file_not_found (void)
{
  const char *error = 0;

  LT__GETERROR (error);
  if (error == LT__STRERROR (FILE_NOT_FOUND))
    return 1;

  return 0;
}


/* Unless FILENAME already bears a suitable library extension, then
   return 0.  */
static int
has_library_ext (const char *filename)
{
  const char *	ext     = 0;

  assert (filename);

  ext = strrchr (filename, '.');

  if (ext && ((STREQ (ext, archive_ext))
#if defined LT_MODULE_EXT
	     || (STREQ (ext, shlib_ext))
#endif
#if defined LT_SHARED_EXT
	     || (STREQ (ext, shared_ext))
#endif
    ))
    {
      return 1;
    }

  return 0;
}


/* Initialise and configure a user lt_dladvise opaque object.  */

int
lt_dladvise_init (lt_dladvise *padvise)
{
  lt_dladvise advise = (lt_dladvise) lt__zalloc (sizeof (struct lt__advise));
  *padvise = advise;
  return (advise ? 0 : 1);
}

int
lt_dladvise_destroy (lt_dladvise *padvise)
{
  if (padvise)
    FREE(*padvise);
  return 0;
}

int
lt_dladvise_ext (lt_dladvise *padvise)
{
  assert (padvise && *padvise);
  (*padvise)->try_ext = 1;
  return 0;
}

int
lt_dladvise_resident (lt_dladvise *padvise)
{
  assert (padvise && *padvise);
  (*padvise)->is_resident = 1;
  return 0;
}

int
lt_dladvise_local (lt_dladvise *padvise)
{
  assert (padvise && *padvise);
  (*padvise)->is_symlocal = 1;
  return 0;
}

int
lt_dladvise_global (lt_dladvise *padvise)
{
  assert (padvise && *padvise);
  (*padvise)->is_symglobal = 1;
  return 0;
}

int
lt_dladvise_preload (lt_dladvise *padvise)
{
  assert (padvise && *padvise);
  (*padvise)->try_preload_only = 1;
  return 0;
}

/* Libtool-1.5.x interface for loading a new module named FILENAME.  */
lt_dlhandle
/* lt_dlopen (const char *filename) */  /*dlopen->windowsAPI LoadLibrary*/
lt_LoadLibrary (const char *LPCSTR filename)
{
/* return lt_dlopenadvise (filename, NULL); */  /*dlopen->windowsAPI LoadLibrary*/
  return lt_LoadLibraryadvise (LPCSTR filename, NULL);
}


/* If FILENAME has an ARCHIVE_EXT or MODULE_EXT extension, try to
   open the FILENAME as passed.  Otherwise try appending ARCHIVE_EXT,
   and if a file is still not found try again with MODULE_EXT appended
   instead.  */
lt_dlhandle
/* lt_dlopenext (const char *filename) */  /*dlopen->windowsAPI LoadLibrary*/
lt_LoadLibraryext (const char *LPCSTR filename)
{
  lt_dlhandle	handle	= 0;
  lt_dladvise	advise;

  if (!lt_dladvise_init (&advise) && !lt_dladvise_ext (&advise))
/* handle = lt_dlopenadvise (filename, advise); */  /*dlopen->windowsAPI LoadLibrary*/
    handle = lt_LoadLibraryadvise (LPCSTR filename, advise);

  lt_dladvise_destroy (&advise);
  return handle;
}


lt_dlhandle
/* lt_dlopenadvise (const char *filename, lt_dladvise advise) */  /*dlopen->windowsAPI LoadLibrary*/
lt_LoadLibraryadvise (const char *LPCSTR filename, lt_dladvise advise)
{
  lt_dlhandle	handle	= 0;
  int		errors	= 0;
  const char *	saved_error	= 0;

  LT__GETERROR (saved_error);

  /* Can't have symbols hidden and visible at the same time!  */
  if (advise && advise->is_symlocal && advise->is_symglobal)
    {
      LT__SETERROR (CONFLICTING_FLAGS);
      return 0;
    }

  if (!filename
      || !advise
      || !advise->try_ext
      || has_library_ext (filename))
    {
/* /* Just incase we missed a code path in try_dlopen() that reports */  /*dlopen->windowsAPI LoadLibrary*/
      /* Just incase we missed a code path in try_LoadLibrary() that reports
	 an error, but forgot to reset handle... */
/* if (try_dlopen (&handle, filename, NULL, advise) != 0) */  /*dlopen->windowsAPI LoadLibrary*/
      if (try_LoadLibrary (&handle, LPCSTR filename, NULL, advise) != 0)
	return 0;

      return handle;
    }
  else if (filename && *filename)
    {

      /* First try appending ARCHIVE_EXT.  */
/* errors += try_dlopen (&handle, filename, archive_ext, advise); */  /*dlopen->windowsAPI LoadLibrary*/
      errors += try_LoadLibrary (&handle, LPCSTR filename, archive_ext, advise);

      /* If we found FILENAME, stop searching -- whether we were able to
	 load the file as a module or not.  If the file exists but loading
	 failed, it is better to return an error message here than to
	 report FILE_NOT_FOUND when the alternatives (foo.so etc) are not
	 in the module search path.  */
      if (handle || ((errors > 0) && !file_not_found ()))
	return handle;

#if defined LT_MODULE_EXT
      /* Try appending SHLIB_EXT.   */
      LT__SETERRORSTR (saved_error);
/* errors = try_dlopen (&handle, filename, shlib_ext, advise); */  /*dlopen->windowsAPI LoadLibrary*/
      errors = try_LoadLibrary (&handle, LPCSTR filename, shlib_ext, advise);

      /* As before, if the file was found but loading failed, return now
	 with the current error message.  */
      if (handle || ((errors > 0) && !file_not_found ()))
	return handle;
#endif

#if defined LT_SHARED_EXT
      /* Try appending SHARED_EXT.   */
      LT__SETERRORSTR (saved_error);
/* errors = try_dlopen (&handle, filename, shared_ext, advise); */  /*dlopen->windowsAPI LoadLibrary*/
      errors = try_LoadLibrary (&handle, LPCSTR filename, shared_ext, advise);

      /* As before, if the file was found but loading failed, return now
	 with the current error message.  */
      if (handle || ((errors > 0) && !file_not_found ()))
	return handle;
#endif
    }

  /* Still here?  Then we really did fail to locate any of the file
     names we tried.  */
  LT__SETERROR (FILE_NOT_FOUND);
  return 0;
}


static int
lt_argz_insert (char **pargz, size_t *pargz_len, char *before,
		const char *entry)
{
  error_t error;

  /* Prior to Sep 8, 2005, newlib had a bug where argz_insert(pargz,
     pargz_len, NULL, entry) failed with EINVAL.  */
  if (before)
    error = argz_insert (pargz, pargz_len, before, entry);
  else
    error = argz_append (pargz, pargz_len, entry, 1 + strlen (entry));

  if (error)
    {
      switch (error)
	{
	case ENOMEM:
	  LT__SETERROR (NO_MEMORY);
	  break;
	default:
	  LT__SETERROR (UNKNOWN);
	  break;
	}
      return 1;
    }

  return 0;
}

static int
lt_argz_insertinorder (char **pargz, size_t *pargz_len, const char *entry)
{
  char *before = 0;

  assert (pargz);
  assert (pargz_len);
  assert (entry && *entry);

  if (*pargz)
    while ((before = argz_next (*pargz, *pargz_len, before)))
      {
	int cmp = strcmp (entry, before);

	if (cmp < 0)  break;
	if (cmp == 0) return 0;	/* No duplicates! */
      }

  return lt_argz_insert (pargz, pargz_len, before, entry);
}

static int
lt_argz_insertdir (char **pargz, size_t *pargz_len, const char *dirnam,
		   struct dirent *dp)
{
  char   *buf	    = 0;
  size_t buf_len    = 0;
  char   *end	    = 0;
  size_t end_offset = 0;
  size_t dir_len    = 0;
  int    errors	    = 0;

  assert (pargz);
  assert (pargz_len);
  assert (dp);

  dir_len = LT_STRLEN (dirnam);
  end     = dp->d_name + D_NAMLEN(dp);

  /* Ignore version numbers.  */
  {
    char *p;
    for (p = end; p -1 > dp->d_name; --p)
      if (strchr (".0123456789", p[-1]) == 0)
	break;

    if (*p == '.')
      end = p;
  }

  /* Ignore filename extension.  */
  {
    char *p;
    for (p = end -1; p > dp->d_name; --p)
      if (*p == '.')
	{
	  end = p;
	  break;
	}
  }

  /* Prepend the directory name.  */
  end_offset	= end - dp->d_name;
  buf_len	= dir_len + 1+ end_offset;
  buf		= MALLOC (char, 1+ buf_len);
  if (!buf)
    return ++errors;

  assert (buf);

  strcpy  (buf, dirnam);
  strcat  (buf, "/");
  strncat (buf, dp->d_name, end_offset);
  buf[buf_len] = LT_EOS_CHAR;

  /* Try to insert (in order) into ARGZ/ARGZ_LEN.  */
  if (lt_argz_insertinorder (pargz, pargz_len, buf) != 0)
    ++errors;

  FREE (buf);

  return errors;
}

static int
list_files_by_dir (const char *dirnam, char **pargz, size_t *pargz_len)
{
  DIR	*dirp	  = 0;
  int    errors	  = 0;

  assert (dirnam && *dirnam);
  assert (pargz);
  assert (pargz_len);
  assert (dirnam[LT_STRLEN(dirnam) -1] != '/');

  dirp = opendir (dirnam);
  if (dirp)
    {
      struct dirent *dp	= 0;

      while ((dp = readdir (dirp)))
	if (dp->d_name[0] != '.')
	  if (lt_argz_insertdir (pargz, pargz_len, dirnam, dp))
	    {
	      ++errors;
	      break;
	    }

      closedir (dirp);
    }
  else
    ++errors;

  return errors;
}


/* If there are any files in DIRNAME, call the function passed in
   DATA1 (with the name of each file and DATA2 as arguments).  */
static int
foreachfile_callback (char *dirname, void *data1, void *data2)
{
  file_worker_func *func = *(file_worker_func **) data1;

  int	  is_done  = 0;
  char   *argz     = 0;
  size_t  argz_len = 0;

  if (list_files_by_dir (dirname, &argz, &argz_len) != 0)
    goto cleanup;
  if (!argz)
    goto cleanup;

  {
    char *filename = 0;
    while ((filename = argz_next (argz, argz_len, filename)))
      if ((is_done = (*func) (filename, data2)))
	break;
  }

 cleanup:
  FREE (argz);

  return is_done;
}


/* Call FUNC for each unique extensionless file in SEARCH_PATH, along
   with DATA.  The filenames passed to FUNC would be suitable for
/* passing to lt_dlopenext.  The extensions are stripped so that */  /*dlopen->windowsAPI LoadLibrary*/
   passing to lt_LoadLibraryext.  The extensions are stripped so that
   individual modules do not generate several entries (e.g. libfoo.la,
   libfoo.so, libfoo.so.1, libfoo.so.1.0.0).  If SEARCH_PATH is NULL,
/* then the same directories that lt_dlopen would search are examined.  */ */  /*dlopen->windowsAPI LoadLibrary*/
   then the same directories that lt_LoadLibrary would search are examined.  */
int
lt_dlforeachfile (const char *search_path,
		  int (*func) (const char *filename, void *data),
		  void *data)
{
  int is_done = 0;
  file_worker_func **fpptr = &func;

  if (search_path)
    {
      /* If a specific path was passed, search only the directories
	 listed in it.  */
      is_done = foreach_dirinpath (search_path, 0,
				   foreachfile_callback, fpptr, data);
    }
  else
    {
      /* Otherwise search the default paths.  */
      is_done = foreach_dirinpath (user_search_path, 0,
				   foreachfile_callback, fpptr, data);
      if (!is_done)
	{
	  is_done = foreach_dirinpath (getenv(LTDL_SEARCHPATH_VAR), 0,
				       foreachfile_callback, fpptr, data);
	}

#if defined LT_MODULE_PATH_VAR
      if (!is_done)
	{
	  is_done = foreach_dirinpath (getenv(LT_MODULE_PATH_VAR), 0,
				       foreachfile_callback, fpptr, data);
	}
#endif
#if defined LT_DLSEARCH_PATH
      if (!is_done && *sys_dlsearch_path)
	{
	  is_done = foreach_dirinpath (sys_dlsearch_path, 0,
				       foreachfile_callback, fpptr, data);
	}
#endif
    }

  return is_done;
}

int
lt_dlclose (lt_dlhandle handle)
{
  lt_dlhandle cur, last;
  int errors = 0;

  /* check whether the handle is valid */
  last = cur = handles;
  while (cur && handle != cur)
    {
      last = cur;
      cur = cur->next;
    }

  if (!cur)
    {
      LT__SETERROR (INVALID_HANDLE);
      ++errors;
      goto done;
    }

  cur = handle;
  cur->info.ref_count--;

  /* Note that even with resident modules, we must track the ref_count
     correctly incase the user decides to reset the residency flag
     later (even though the API makes no provision for that at the
     moment).  */
  if (cur->info.ref_count <= 0 && !LT_DLIS_RESIDENT (cur))
    {
      lt_user_data data = cur->vtable->dlloader_data;

      if (cur != handles)
	{
	  last->next = cur->next;
	}
      else
	{
	  handles = cur->next;
	}

      errors += cur->vtable->module_close (data, cur->module);
      errors += unload_deplibs (handle);

      /* It is up to the callers to free the data itself.  */
      FREE (cur->interface_data);

      FREE (cur->info.filename);
      FREE (cur->info.name);
      FREE (cur);

      goto done;
    }

  if (LT_DLIS_RESIDENT (handle))
    {
      LT__SETERROR (CLOSE_RESIDENT_MODULE);
      ++errors;
    }

 done:
  return errors;
}

void *
lt_dlsym (lt_dlhandle place, const char *symbol)
{
  size_t lensym;
  char	lsym[LT_SYMBOL_LENGTH];
  char	*sym;
  void *address;
  lt_user_data data;
  lt_dlhandle handle;

  if (!place)
    {
      LT__SETERROR (INVALID_HANDLE);
      return 0;
    }

  handle = place;

  if (!symbol)
    {
      LT__SETERROR (SYMBOL_NOT_FOUND);
      return 0;
    }

  lensym = LT_STRLEN (symbol) + LT_STRLEN (handle->vtable->sym_prefix)
					+ LT_STRLEN (handle->info.name);

  if (lensym + LT_SYMBOL_OVERHEAD < LT_SYMBOL_LENGTH)
    {
      sym = lsym;
    }
  else
    {
      sym = MALLOC (char, lensym + LT_SYMBOL_OVERHEAD + 1);
      if (!sym)
	{
	  LT__SETERROR (BUFFER_OVERFLOW);
	  return 0;
	}
    }

  data = handle->vtable->dlloader_data;
  if (handle->info.name)
    {
      const char *saved_error;

      LT__GETERROR (saved_error);

      /* this is a libtool module */
      if (handle->vtable->sym_prefix)
	{
	  strcpy(sym, handle->vtable->sym_prefix);
	  strcat(sym, handle->info.name);
	}
      else
	{
	  strcpy(sym, handle->info.name);
	}

      strcat(sym, "_LTX_");
      strcat(sym, symbol);

      /* try "modulename_LTX_symbol" */
      address = handle->vtable->find_sym (data, handle->module, sym);
      if (address)
	{
	  if (sym != lsym)
	    {
	      FREE (sym);
	    }
	  return address;
	}
      LT__SETERRORSTR (saved_error);
    }

  /* otherwise try "symbol" */
  if (handle->vtable->sym_prefix)
    {
      strcpy(sym, handle->vtable->sym_prefix);
      strcat(sym, symbol);
    }
  else
    {
      strcpy(sym, symbol);
    }

  address = handle->vtable->find_sym (data, handle->module, sym);
  if (sym != lsym)
    {
      FREE (sym);
    }

  return address;
}

const char *
lt_dlerror (void)
{
  const char *error;

  LT__GETERROR (error);
  LT__SETERRORSTR (0);

  return error;
}

static int
lt_dlpath_insertdir (char **ppath, char *before, const char *dir)
{
  int    errors		= 0;
  char  *canonical	= 0;
  char  *argz		= 0;
  size_t argz_len	= 0;

  assert (ppath);
  assert (dir && *dir);

  if (canonicalize_path (dir, &canonical) != 0)
    {
      ++errors;
      goto cleanup;
    }

  assert (canonical && *canonical);

  /* If *PPATH is empty, set it to DIR.  */
  if (*ppath == 0)
    {
      assert (!before);		/* BEFORE cannot be set without PPATH.  */
      assert (dir);		/* Without DIR, don't call this function!  */

      *ppath = lt__strdup (dir);
      if (*ppath == 0)
	++errors;

      goto cleanup;
    }

  assert (ppath && *ppath);

  if (argzize_path (*ppath, &argz, &argz_len) != 0)
    {
      ++errors;
      goto cleanup;
    }

  /* Convert BEFORE into an equivalent offset into ARGZ.  This only works
     if *PPATH is already canonicalized, and hence does not change length
     with respect to ARGZ.  We canonicalize each entry as it is added to
     the search path, and don't call this function with (uncanonicalized)
     user paths, so this is a fair assumption.  */
  if (before)
    {
      assert (*ppath <= before);
      assert ((int) (before - *ppath) <= (int) strlen (*ppath));

      before = before - *ppath + argz;
    }

  if (lt_argz_insert (&argz, &argz_len, before, dir) != 0)
    {
      ++errors;
      goto cleanup;
    }

  argz_stringify (argz, argz_len, LT_PATHSEP_CHAR);
  MEMREASSIGN(*ppath, argz);

 cleanup:
  FREE (argz);
  FREE (canonical);

  return errors;
}

int
lt_dladdsearchdir (const char *search_dir)
{
  int errors = 0;

  if (search_dir && *search_dir)
    {
      if (lt_dlpath_insertdir (&user_search_path, 0, search_dir) != 0)
	++errors;
    }

  return errors;
}

int
lt_dlinsertsearchdir (const char *before, const char *search_dir)
{
  int errors = 0;

  if (before)
    {
      if ((before < user_search_path)
	  || (before >= user_search_path + LT_STRLEN (user_search_path)))
	{
	  LT__SETERROR (INVALID_POSITION);
	  return 1;
	}
    }

  if (search_dir && *search_dir)
    {
      if (lt_dlpath_insertdir (&user_search_path,
			       (char *) before, search_dir) != 0)
	{
	  ++errors;
	}
    }

  return errors;
}

int
lt_dlsetsearchpath (const char *search_path)
{
  int   errors	    = 0;

  FREE (user_search_path);

  if (!search_path || !LT_STRLEN (search_path))
    {
      return errors;
    }

  if (canonicalize_path (search_path, &user_search_path) != 0)
    ++errors;

  return errors;
}

const char *
lt_dlgetsearchpath (void)
{
  const char *saved_path;

  saved_path = user_search_path;

  return saved_path;
}

int
lt_dlmakeresident (lt_dlhandle handle)
{
  int errors = 0;

  if (!handle)
    {
      LT__SETERROR (INVALID_HANDLE);
      ++errors;
    }
  else
    {
      handle->info.is_resident = 1;
    }

  return errors;
}

int
lt_dlisresident	(lt_dlhandle handle)
{
  if (!handle)
    {
      LT__SETERROR (INVALID_HANDLE);
      return -1;
    }

  return LT_DLIS_RESIDENT (handle);
}



/* --- MODULE INFORMATION --- */

typedef struct {
  char *id_string;
  lt_dlhandle_interface *iface;
} lt__interface_id;

lt_dlinterface_id
lt_dlinterface_register (const char *id_string, lt_dlhandle_interface *iface)
{
  lt__interface_id *interface_id = (lt__interface_id *) lt__malloc (sizeof *interface_id);

  /* If lt__malloc fails, it will LT__SETERROR (NO_MEMORY), which
     can then be detected with lt_dlerror() if we return 0.  */
  if (interface_id)
    {
      interface_id->id_string = lt__strdup (id_string);
      if (!interface_id->id_string)
	FREE (interface_id);
      else
	interface_id->iface = iface;
    }

  return (lt_dlinterface_id) interface_id;
}

void lt_dlinterface_free (lt_dlinterface_id key)
{
  lt__interface_id *interface_id = (lt__interface_id *)key;
  FREE (interface_id->id_string);
  FREE (interface_id);
}

void *
lt_dlcaller_set_data (lt_dlinterface_id key, lt_dlhandle handle, void *data)
{
  int n_elements = 0;
  void *stale = (void *) 0;
  lt_dlhandle cur = handle;
  int i;

  if (cur->interface_data)
    while (cur->interface_data[n_elements].key)
      ++n_elements;

  for (i = 0; i < n_elements; ++i)
    {
      if (cur->interface_data[i].key == key)
	{
	  stale = cur->interface_data[i].data;
	  break;
	}
    }

  /* Ensure that there is enough room in this handle's interface_data
     array to accept a new element (and an empty end marker).  */
  if (i == n_elements)
    {
      lt_interface_data *temp
	= REALLOC (lt_interface_data, cur->interface_data, 2+ n_elements);

      if (!temp)
	{
	  stale = 0;
	  goto done;
	}

      cur->interface_data = temp;

      /* We only need this if we needed to allocate a new interface_data.  */
      cur->interface_data[i].key	= key;
      cur->interface_data[1+ i].key	= 0;
    }

  cur->interface_data[i].data = data;

 done:
  return stale;
}

void *
lt_dlcaller_get_data (lt_dlinterface_id key, lt_dlhandle handle)
{
  void *result = (void *) 0;
  lt_dlhandle cur = handle;

  /* Locate the index of the element with a matching KEY.  */
  if (cur->interface_data)
    {
      int i;
      for (i = 0; cur->interface_data[i].key; ++i)
	{
	  if (cur->interface_data[i].key == key)
	    {
	      result = cur->interface_data[i].data;
	      break;
	    }
	}
    }

  return result;
}

const lt_dlinfo *
lt_dlgetinfo (lt_dlhandle handle)
{
  if (!handle)
    {
      LT__SETERROR (INVALID_HANDLE);
      return 0;
    }

  return &(handle->info);
}


lt_dlhandle
lt_dlhandle_iterate (lt_dlinterface_id iface, lt_dlhandle place)
{
  lt_dlhandle handle = place;
  lt__interface_id *iterator = (lt__interface_id *) iface;

  assert (iface); /* iface is a required argument */

  if (!handle)
    handle = handles;
  else
    handle = handle->next;

  /* advance while the interface check fails */
  while (handle && iterator->iface
	 && ((*iterator->iface) (handle, iterator->id_string) != 0))
    {
      handle = handle->next;
    }

  return handle;
}


lt_dlhandle
lt_dlhandle_fetch (lt_dlinterface_id iface, const char *module_name)
{
  lt_dlhandle handle = 0;

  assert (iface); /* iface is a required argument */

  while ((handle = lt_dlhandle_iterate (iface, handle)))
    {
      lt_dlhandle cur = handle;
      if (cur && cur->info.name && STREQ (cur->info.name, module_name))
	break;
    }

  return handle;
}


int
lt_dlhandle_map (lt_dlinterface_id iface,
		 int (*func) (lt_dlhandle handle, void *data), void *data)
{
  lt__interface_id *iterator = (lt__interface_id *) iface;
  lt_dlhandle cur = handles;

  assert (iface); /* iface is a required argument */

  while (cur)
    {
      int errorcode = 0;

      /* advance while the interface check fails */
      while (cur && iterator->iface
	     && ((*iterator->iface) (cur, iterator->id_string) != 0))
	{
	  cur = cur->next;
	}

      if ((errorcode = (*func) (cur, data)) != 0)
	return errorcode;
    }

  return 0;
}

lib/ltdl/libltdl/loaders/preopen.c 수정
/* loader-preopen.c -- emulate dynamic linking using preloaded_symbols

   Copyright (C) 1998-2000, 2004, 2006-2008, 2011-2015 Free Software
   Foundation, Inc.
   Written by Thomas Tanner, 1998

   NOTE: The canonical source of this file is maintained with the
   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.

GNU Libltdl is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later version.

As a special exception to the GNU Lesser General Public License,
if you distribute this file as part of a program or library that
is built using GNU Libtool, you may include this file under the
same distribution terms that you use for the rest of that program.

GNU Libltdl is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with GNU Libltdl; see the file COPYING.LIB.  If not, a
copy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,
or obtained by writing to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
*/

#include "lt__private.h"
#include "lt_dlloader.h"

/* Use the preprocessor to rename non-static symbols to avoid namespace
   collisions when the loader code is statically linked into libltdl.
   Use the "<module_name>_LTX_" prefix so that the symbol addresses can
   be fetched from the preloaded symbol list by lt_dlsym():  */
#define get_vtable	preopen_LTX_get_vtable

LT_BEGIN_C_DECLS
LT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);
LT_END_C_DECLS


/* Boilerplate code to set up the vtable for hooking this loader into
   libltdl's loader list:  */
static int	 vl_init  (lt_user_data loader_data);
static int	 vl_exit  (lt_user_data loader_data);
static lt_module vm_open  (lt_user_data loader_data, const char *filename,
                           lt_dladvise advise);
static int	 vm_close (lt_user_data loader_data, lt_module module);
static void *	 vm_sym   (lt_user_data loader_data, lt_module module,
			  const char *symbolname);

static lt_dlvtable *vtable = 0;

/* Return the vtable for this loader, only the name and sym_prefix
   attributes (plus the virtual function implementations, obviously)
   change between loaders.  */
lt_dlvtable *
get_vtable (lt_user_data loader_data)
{
  if (!vtable)
    {
      vtable = (lt_dlvtable *) lt__zalloc (sizeof *vtable);
    }

  if (vtable && !vtable->name)
    {
      vtable->name		= "lt_preopen";
      vtable->sym_prefix	= 0;
      vtable->module_open	= vm_open;
      vtable->module_close	= vm_close;
      vtable->find_sym		= vm_sym;
      vtable->dlloader_init	= vl_init;
      vtable->dlloader_exit	= vl_exit;
      vtable->dlloader_data	= loader_data;
      vtable->priority		= LT_DLLOADER_PREPEND;
    }

  if (vtable && (vtable->dlloader_data != loader_data))
    {
      LT__SETERROR (INIT_LOADER);
      return 0;
    }

  return vtable;
}



/* --- IMPLEMENTATION --- */


/* Wrapper type to chain together symbol lists of various origins.  */
typedef struct symlist_chain
{
  struct symlist_chain *next;
  const lt_dlsymlist   *symlist;
} symlist_chain;


static int add_symlist   (const lt_dlsymlist *symlist);
static int free_symlists (void);

/* The start of the symbol lists chain.  */
static symlist_chain	       *preloaded_symlists		= 0;

/* A symbol list preloaded before lt_init() was called.  */
static const	lt_dlsymlist   *default_preloaded_symbols	= 0;


/* A function called through the vtable to initialise this loader.  */
static int
vl_init (lt_user_data loader_data LT__UNUSED)
{
  int errors = 0;

  preloaded_symlists = 0;
  if (default_preloaded_symbols)
    {
      errors = lt_dlpreload (default_preloaded_symbols);
    }

  return errors;
}


/* A function called through the vtable when this loader is no
   longer needed by the application.  */
static int
vl_exit (lt_user_data loader_data LT__UNUSED)
{
  vtable = NULL;
  free_symlists ();
  return 0;
}


/* A function called through the vtable to open a module with this
   loader.  Returns an opaque representation of the newly opened
   module for processing with this loader's other vtable functions.  */
static lt_module
vm_open (lt_user_data loader_data LT__UNUSED, const char *filename,
         lt_dladvise advise LT__UNUSED)
{
  symlist_chain *lists;
  lt_module	 module = 0;

  if (!preloaded_symlists)
    {
      LT__SETERROR (NO_SYMBOLS);
      goto done;
    }

  /* Can't use NULL as the reflective symbol header, as NULL is
     used to mark the end of the entire symbol list.  Self-dlpreopened
     symbols follow this magic number, chosen to be an unlikely
     clash with a real module name.  */
  if (!filename)
    {
      filename = "@PROGRAM@";
    }

  for (lists = preloaded_symlists; lists; lists = lists->next)
    {
      const lt_dlsymlist *symbol;
      for (symbol= lists->symlist; symbol->name; ++symbol)
	{
	  if (!symbol->address && STREQ (symbol->name, filename))
	    {
	      /* If the next symbol's name and address is 0, it means
		 the module just contains the originator and no symbols.
		 In this case we pretend that we never saw the module and
	         hope that some other loader will be able to load the module
	         and have access to its symbols */
	      const lt_dlsymlist *next_symbol = symbol +1;
	      if (next_symbol->address && next_symbol->name)
		{
	          module = (lt_module) lists->symlist;
	          goto done;
		}
	    }
	}
    }

  LT__SETERROR (FILE_NOT_FOUND);

 done:
  return module;
}


/* A function called through the vtable when a particular module
   should be unloaded.  */
static int
vm_close (lt_user_data loader_data LT__UNUSED, lt_module module LT__UNUSED)
{
  /* Just to silence gcc -Wall */
  module = 0;
  return 0;
}


/* A function called through the vtable to get the address of
   a symbol loaded from a particular module.  */
static void *
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
{
  lt_dlsymlist	       *symbol = (lt_dlsymlist*) module;

  if (symbol[1].name && STREQ (symbol[1].name, "@INIT@"))
    {
      symbol++;			/* Skip optional init entry. */
    }

  symbol +=2;			/* Skip header (originator then libname). */

  while (symbol->name)
    {
      if (STREQ (symbol->name, name))
	{
	  return symbol->address;
	}

    ++symbol;
  }

  LT__SETERROR (SYMBOL_NOT_FOUND);

  return 0;
}



/* --- HELPER FUNCTIONS --- */


/* The symbol lists themselves are not allocated from the heap, but
   we can unhook them and free up the chain of links between them.  */
static int
free_symlists (void)
{
  symlist_chain *lists;

  lists = preloaded_symlists;
  while (lists)
    {
      symlist_chain *next = lists->next;
      FREE (lists);
      lists = next;
    }
  preloaded_symlists = 0;

  return 0;
}

/* Add a new symbol list to the global chain.  */
static int
add_symlist (const lt_dlsymlist *symlist)
{
  symlist_chain *lists;
  int		 errors   = 0;

  /* Search for duplicate entries:  */
  for (lists = preloaded_symlists;
       lists && lists->symlist != symlist; lists = lists->next)
    /*NOWORK*/;

  /* Don't add the same list twice:  */
  if (!lists)
    {
      symlist_chain *tmp = (symlist_chain *) lt__zalloc (sizeof *tmp);

      if (tmp)
	{
	  tmp->symlist = symlist;
	  tmp->next = preloaded_symlists;
	  preloaded_symlists = tmp;

	  if (symlist[1].name && STREQ (symlist[1].name, "@INIT@"))
	    {
	      void (*init_symlist)(void);
	      *(void **)(&init_symlist) = symlist[1].address;
	      (*init_symlist)();
	    }
	}
      else
	{
	  ++errors;
	}
    }

  return errors;
}



/* --- PRELOADING API CALL IMPLEMENTATIONS --- */


/* Save a default symbol list for later.  */
int
lt_dlpreload_default (const lt_dlsymlist *preloaded)
{
  default_preloaded_symbols = preloaded;
  return 0;
}


/* Add a symbol list to the global chain, or with a NULL argument,
   revert to just the default list.  */
int
lt_dlpreload (const lt_dlsymlist *preloaded)
{
  int errors = 0;

  if (preloaded)
    {
      errors = add_symlist (preloaded);
    }
  else
    {
      free_symlists();

      if (default_preloaded_symbols)
	{
	  errors = lt_dlpreload (default_preloaded_symbols);
	}
    }

  return errors;
}


/* Open all the preloaded modules from the named originator, executing
   a callback for each one.  If ORIGINATOR is NULL, then call FUNC for
   each preloaded module from the program itself.  */
int
lt_dlpreload_open (const char *originator, lt_dlpreload_callback_func *func)
{
  symlist_chain *list;
  int		 errors = 0;
  int		 found  = 0;

  /* For each symlist in the chain...  */
  for (list = preloaded_symlists; list; list = list->next)
    {
      /* ...that was preloaded by the requesting ORIGINATOR... */
      if ((originator && STREQ (list->symlist->name, originator))
          || (!originator && STREQ (list->symlist->name, "@PROGRAM@")))
	{
	  const lt_dlsymlist *symbol;
	  unsigned int idx = 0;

	  ++found;

	  /* ...load the symbols per source compilation unit:
	     (we preincrement the index to skip over the originator entry)  */
	  while ((symbol = &list->symlist[++idx])->name != 0)
	    {
	      if ((symbol->address == 0)
		  && (STRNEQ (symbol->name, "@PROGRAM@")))
		{
/* lt_dlhandle handle = lt_dlopen (symbol->name); */  /*dlopen->windowsAPI LoadLibrary*/
		  lt_dlhandle handle = lt_LoadLibrary (symbol->name);
		  if (handle == 0)
		    {
		      ++errors;
		    }
		  else
		    {
		      errors += (*func) (handle);
		    }
		}
	    }
	}
    }

  if (!found)
    {
      LT__SETERROR(CANNOT_OPEN);
      ++errors;
    }

  return errors;
}

(오류)
checking argz.h usability... no
checking argz.h presence... no
checking for argz.h... no
(수정)
argz.h 파일 누락
argz.h는 GNU 시스템에서 제공하는 파일로, 인수 벡터 작업을 위한 함수들이 포함
MinGW에서 argz.h를 지원하지 않기 때문에, 이 파일을 사용하는 부분을 조건부 컴파일로 처리하거나 대체할 수 있는 코드를 작성

argz.in.h 로 argz.h 생성하기
configure.ac 수정
AC_CONFIG_HEADERS([config.h lib/argz.h]) #config.h.in => config.h 생성, lib/argz.in.h => lib/argz.h 생성

(오류)
checking for strlcpy... no
(수정)
strlcpy 함수 누락
strlcpy는 BSD 시스템에서 사용되는 안전한 문자열 복사 함수
MinGW에는 기본적으로 이 함수가 포함되어 있지 않음

configure.ac 수정
GNULIB_MODULES="
	ncurses \
	terminfo \
	rpl_stpcpy \
	xalloc \
	xalloc_die \
	xmalloc \
	xrealloc \
	xgethostname \
	_gl_nothrow_get_osfhandle \
	fsync \
	getprogname \
	_get_osfhandle \
	strlcpy \
	argz 
"
LT_INIT([win32-dll], [dlopen disable-static]) #dlopen을 활성화하고 정적 라이브러리를 비활성화

(오류)
autoheader-2.72: warning: cannot read lib/argz.h.in: No such file or directory
configure.ac:1073: error: required file 'lib/argz.h.in' not found
(수정)
/c/libidn2/gettext-0.22.5/libtextstyle/lib/argz.c
/c/libidn2/gettext-0.22.5/libtextstyle/lib/argz.in.h
"C:\gnulib\lib\argz.c"
"C:\gnulib\lib\argz.in.h"

argz.h.in이 없음
argz.in.h -> argz.h.in 으로 복사
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# cp lib/argz.in.h lib/argz.h.in

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l lib/argz*
-rw-r--r-- 1 nayou nayou 10091  8월 30 11:54 lib/argz.c
-rw-r--r-- 1 nayou nayou  5190 10월  8 14:31 lib/argz.h.in
-rw-r--r-- 1 nayou nayou  5190  8월 30 11:54 lib/argz.in.h

Makefile.am 수정
# Add this rule to copy argz.in.h to argz.h
lib/argz.h: lib/argz.h.in
	cp lib/argz.h.in lib/argz.h
EXTRA_DIST = lib/argz.h.in


(오류)
./configure: line 4629: AC_CAN_COMPILE: command not found
./configure: line 15875: L_INLTDIT: command not found
(수정)
configure.ac 수정
#AC_CAN_COMPILE
m4_pattern_allow([AC_CAN_COMPILE])
GNULIB_MODULES="
    ncurses \
    terminfo \
	rpl_stpcpy \
	xalloc \
	xalloc_die \
    xmalloc \
    xrealloc \
    xgethostname \
    _gl_nothrow_get_osfhandle \
	fsync \
	getprogname \
	_get_osfhandle \
	strlcpy \
	argz \
	can-compile
"

(오류)
checking whether x86_64-w64-mingw32-gcc supports C23 features with -std=gnu23... no
checking whether x86_64-w64-mingw32-gcc supports C17 features with -std=gnu17... yes
checking whether x86_64-w64-mingw32-gcc supports C11 features with -std=gnu11... yes
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# gcc -dM -E - < /dev/null | grep __STDC_VERSION__
#define __STDC_VERSION__ 201710L
=> C17(또는 ISO C11) 표준을 지원
=>c11->c17 변경
configure.ac 수정
# C17 표준을 컴파일러 플래그로 추가
AX_CHECK_COMPILE_FLAG([-std=c17], [CFLAGS="$CFLAGS -std=c17"])
# 필요시 C17을 나타내는 변수 설정
AC_SUBST([CC_STANDARD], [17])

AC_SUBST([CFLAGS], ["-std=c17 -I/mingw64/include -O2"])

(오류)
checking for dlopen in -ldl... no
(수정 예시)
#ifdef _WIN32
#include <windows.h>
#define LOAD_LIBRARY LoadLibrary
#else
#include <dlfcn.h>
#define LOAD_LIBRARY dlopen
#endif

static void *
xmlModulePlatformOpen(const char *name)
{
    return LOAD_LIBRARY(name);
}

static int
xmlModulePlatformClose(void *handle)
{
    return CLOSE_LIBRARY(handle) ? 0 : -1; // 성공 시 0, 실패 시 -1
}

static int
xmlModulePlatformSymbol(void *handle, const char *name, void **symbol)
{
    *symbol = GET_PROC_ADDRESS(handle, name);
    return (*symbol == NULL) ? -1 : 0; // 성공 시 0, 실패 시 -1
}
=> 위에 있음(소스수정) line 20840

(오류)
Package glib-2.0 was not found in the pkg-config search path.
Package gobject-2.0 was not found in the pkg-config search path.
(수정)
업데이트 
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Syu

glib 및 gobject 설치 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pkg-config --modversion glib-2.0
pkg-config --modversion gobject-2.0
Package glib-2.0 was not found in the pkg-config search path.
Perhaps you should add the directory containing `glib-2.0.pc'
to the PKG_CONFIG_PATH environment variable
Package 'glib-2.0' not found
Package gobject-2.0 was not found in the pkg-config search path.
Perhaps you should add the directory containing `gobject-2.0.pc'
to the PKG_CONFIG_PATH environment variable
Package 'gobject-2.0' not found

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# echo $PKG_CONFIG_PATH
/c/Program Files/GLib/lib/pkgconfig:/c/libidn2/gettext-0.22.5/gettext-runtime/intl:/mingw64/lib/pkgconfig:/usr/lib/pkgconfig
(/mingw64/lib/pkgconfig 경로는 GLib와 GObject 패키지의 .pc 파일을 찾기에 중요한 경로)
/c/Program Files/GLib/lib/pkgconfig: GLib의 패키지 구성 파일이 위치할 수 있는 경로입니다.
/c/libidn2/gettext-0.22.5/gettext-runtime/intl: gettext와 관련된 패키지 구성 파일이 위치할 수 있는 경로입니다.
/mingw64/lib/pkgconfig: MinGW64 환경에서 일반적으로 사용하는 경로입니다. 여기에는 GLib 및 GObject와 같은 여러 패키지의 .pc 파일이 있어야 합니다.
/usr/lib/pkgconfig: Linux와 유사한 경로로, 일반적으로 시스템에 설치된 라이브러리의 .pc 파일이 위치하는 곳입니다.

GLib 및 GObject 패키지를 설치
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Syu mingw-w64-x86_64-glib2

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pkg-config --modversion glib-2.0
pkg-config --modversion gobject-2.0
2.82.1
2.82.1

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l /mingw64/lib/pkgconfig/glib-2.0.pc
-rw-r--r-- 1 nayou nayou 566  9월 20 15:04 /mingw64/lib/pkgconfig/glib-2.0.pc

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l /mingw64/lib/pkgconfig/gobject-2.0.pc
-rw-r--r-- 1 nayou nayou 289  9월 20 15:04 /mingw64/lib/pkgconfig/gobject-2.0.pc

환경변수 확인
echo $PKG_CONFIG_PATH
/mingw64/lib/pkgconfig (확인)

configure.ac 파일에 GLib와 GObject를 추가
configure.ac 수정
#각각의 패키지에 대해 별도의 호출을 사용하는 것이 더 일반적
#PKG_CHECK_MODULES 매크로가 각 패키지를 확인하고, 
#패키지가 성공적으로 발견되면 have_libintl, have_ncurses, have_glib 변수가 각각 yes로 설정
# 패키지 설정
PKG_CHECK_MODULES(
    [ITL], 
    [libintl], 
    [have_libintl=yes], 
    [have_libintl=no]
)

AC_SUBST([ITL_CFLAGS])
AC_SUBST([ITL_LIBS])

PKG_CHECK_MODULES(
    [NCURSES], 
    [ncurses], 
    [have_ncurses=yes], 
    [have_ncurses=no]
)

AC_SUBST([NCURSES_CFLAGS])
AC_SUBST([NCURSES_LIBS])

PKG_CHECK_MODULES(
    [GLIB], 
    [glib-2.0 gobject-2.0], 
    [have_glib=yes], 
    [have_glib=no]
)

AC_SUBST([GLIB_CFLAGS])
AC_SUBST([GLIB_LIBS])

Makefile.am 수정
# CFLAGS 설정
#AM_CFLAGS = -Wall -Wextra -Wpedantic -fdiagnostics-show-option # 모든 경고와 추가적인 경고를 활성화
AM_CFLAGS = -Wall -Wextra -Wpedantic -fdiagnostics-show-option \
            $(ITL_CFLAGS) $(NCURSES_CFLAGS) $(GLIB_CFLAGS)

# 링크 시 필요한 라이브러리 추가
AM_LIBS = $(ITL_LIBS) $(NCURSES_LIBS) $(GLIB_LIBS)

(오류)
WARNING: `gtk-doc` not found.
(수정)
gtk-doc 설치
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -S gtk-doc

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# gtk-doc --version
-bash: gtk-doc: 명령어를 찾을 수 없음

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Ss gtk-doc
clangarm64/mingw-w64-clang-aarch64-gtk-doc 1.34.0-2
    Documentation tool for public library API (mingw-w64)
mingw32/mingw-w64-i686-gtk-doc 1.34.0-2
    Documentation tool for public library API (mingw-w64)
mingw64/mingw-w64-x86_64-gtk-doc 1.34.0-2
    Documentation tool for public library API (mingw-w64)
ucrt64/mingw-w64-ucrt-x86_64-gtk-doc 1.34.0-2
    Documentation tool for public library API (mingw-w64)
clang32/mingw-w64-clang-i686-gtk-doc 1.34.0-2
    Documentation tool for public library API (mingw-w64)
clang64/mingw-w64-clang-x86_64-gtk-doc 1.34.0-2
    Documentation tool for public library API (mingw-w64)
msys/gtk-doc 1.34.0-1 [설치함]
    Documentation tool for public library API

gtk-doc의 실행 파일이 일반적으로 /mingw64/bin 또는 /usr/bin 디렉토리에 위치(확인)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls /mingw64/bin/gtk-doc*
ls /usr/bin/gtk-doc*
ls: cannot access '/mingw64/bin/gtk-doc*': No such file or directory
ls: cannot access '/usr/bin/gtk-doc*': No such file or directory

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find / -name "gtk-doc"
/usr/share/gtk-doc

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l /usr/share/pkgconfig/gtk*
-rw-r--r-- 1 nayou nayou 144  3월 10  2024 /usr/share/pkgconfig/gtk-doc.pc

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l /usr/share/aclocal/gtk*
-rw-r--r-- 1 nayou nayou 4528  3월 10  2024 /usr/share/aclocal/gtk-doc.m4

MSYS2 Packages
https://packages.msys2.org/packages/mingw-w64-x86_64-gtk-doc
pacman -S mingw-w64-x86_64-gtk-doc

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -S mingw-w64-x86_64-gtk-doc
의존성 해결 중...
꾸러미 충돌을 찾는 중...

꾸러미 (5) mingw-w64-x86_64-docbook-xml-1~4.5-3
           mingw-w64-x86_64-docbook-xsl-1.79.2-8
           mingw-w64-x86_64-libxslt-1.1.42-1
           mingw-w64-x86_64-python-pygments-2.18.0-1
           mingw-w64-x86_64-gtk-doc-1.34.0-2

총 다운로드 크기:   3.34 MiB
총 설치 크기:      42.86 MiB

:: 설치를 진행하시겠습니까? [Y/n] y
:: 꾸러미 가져오는 중...
 mingw-w64-x86_64...  1942.2 KiB   861 KiB/s 00:02 [########################] 100%
 mingw-w64-x86_64...   366.4 KiB   143 KiB/s 00:03 [########################] 100%
 mingw-w64-x86_64...    89.2 KiB  31.7 KiB/s 00:03 [########################] 100%
 mingw-w64-x86_64...   131.8 KiB  46.4 KiB/s 00:03 [########################] 100%
 mingw-w64-x86_64...   886.7 KiB   236 KiB/s 00:04 [########################] 100%
 총합 (5/5)              3.3 MiB   791 KiB/s 00:04 [########################] 100%
(5/5) 키링의 키를 검사 중                          [########################] 100%
(5/5) 꾸러미 무결성 검사 중                        [########################] 100%
(5/5) 꾸러미 파일 불러오는 중                      [########################] 100%
(5/5) 파일 충돌 검사 중                            [########################] 100%
(5/5) 사용 가능한 디스크 공간 검사 중              [########################] 100%
:: 꾸러미 변경사항을 처리 중...
(1/5) 설치 중 mingw-w64-x86_64-libxslt             [########################] 100%
(2/5) 설치 중 mingw-w64-x86_64-docbook-xml         [########################] 100%
/tmp/alpm_eogODS/.INSTALL: 줄 10: mingw64/bin/xmlcatalog.exe: No such file or directory
/tmp/alpm_eogODS/.INSTALL: 줄 12: mingw64/bin/xmlcatalog.exe: No such file or directory
/tmp/alpm_eogODS/.INSTALL: 줄 16: mingw64/bin/xmlcatalog.exe: No such file or directory
/tmp/alpm_eogODS/.INSTALL: 줄 20: mingw64/bin/xmlcatalog.exe: No such file or directory
/tmp/alpm_eogODS/.INSTALL: 줄 24: mingw64/bin/xmlcatalog.exe: No such file or directory
오류: 명령이 올바르게 실행되지 못하였습니다.
(3/5) 설치 중 mingw-w64-x86_64-docbook-xsl         [########################] 100%
/tmp/alpm_cFl47d/.INSTALL: 줄 5: /mingw64/bin/xmlcatalog.exe: No such file or directory
/tmp/alpm_cFl47d/.INSTALL: 줄 5: /mingw64/bin/xmlcatalog.exe: No such file or directory
/tmp/alpm_cFl47d/.INSTALL: 줄 5: /mingw64/bin/xmlcatalog.exe: No such file or directory
/tmp/alpm_cFl47d/.INSTALL: 줄 5: /mingw64/bin/xmlcatalog.exe: No such file or directory
/tmp/alpm_cFl47d/.INSTALL: 줄 5: /mingw64/bin/xmlcatalog.exe: No such file or directory
/tmp/alpm_cFl47d/.INSTALL: 줄 5: /mingw64/bin/xmlcatalog.exe: No such file or directory
/tmp/alpm_cFl47d/.INSTALL: 줄 5: /mingw64/bin/xmlcatalog.exe: No such file or directory
/tmp/alpm_cFl47d/.INSTALL: 줄 5: /mingw64/bin/xmlcatalog.exe: No such file or directory
/tmp/alpm_cFl47d/.INSTALL: 줄 5: /mingw64/bin/xmlcatalog.exe: No such file or directory
오류: 명령이 올바르게 실행되지 못하였습니다.
(4/5) 설치 중 mingw-w64-x86_64-python-pygments     [########################] 100%
(5/5) 설치 중 mingw-w64-x86_64-gtk-doc             [########################] 100%

(수정)
XML Catalog 도구 설치
xmlcatalog는 libxml2 패키지에 포함
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -S mingw-w64-x86_64-libxml2
경고: mingw-w64-x86_64-libxml2-2.12.9-1는 최신 버전입니다. -- 재설치
의존성 해결 중...
꾸러미 충돌을 찾는 중...

꾸러미 (1) mingw-w64-x86_64-libxml2-2.12.9-1

총 설치 크기:          6.73 MiB
알짜 업그레이드 크기:  0.00 MiB

:: 설치를 진행하시겠습니까? [Y/n] y
(1/1) 키링의 키를 검사 중                          [########################] 100%
(1/1) 꾸러미 무결성 검사 중                        [########################] 100%
(1/1) 꾸러미 파일 불러오는 중                      [########################] 100%
(1/1) 파일 충돌 검사 중                            [########################] 100%
(1/1) 사용 가능한 디스크 공간 검사 중              [########################] 100%
경고: mingw64/bin/libxml2-2.dll의 파일 정보를 얻을 수 없습니다
경고: mingw64/bin/xml2-config의 파일 정보를 얻을 수 없습니다
경고: mingw64/bin/xmlcatalog.exe의 파일 정보를 얻을 수 없습니다
경고: mingw64/bin/xmllint.exe의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/c14n.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/catalog.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/chvalid.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/debugXML.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/dict.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/encoding.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/entities.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/globals.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/hash.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/HTMLparser.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/HTMLtree.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/list.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/nanoftp.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/nanohttp.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/parser.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/parserInternals.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/pattern.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/relaxng.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/SAX.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/SAX2.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/schemasInternals.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/schematron.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/threads.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/tree.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/uri.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/valid.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xinclude.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xlink.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xmlautomata.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xmlerror.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xmlexports.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xmlIO.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xmlmemory.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xmlmodule.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xmlreader.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xmlregexp.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xmlsave.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xmlschemas.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xmlschemastypes.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xmlstring.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xmlunicode.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xmlversion.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xmlwriter.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xpath.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xpathInternals.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/include/libxml2/libxml/xpointer.h의 파일 정보를 얻을 수 없습니다
경고: mingw64/lib/cmake/libxml2/의 파일 정보를 얻을 수 없습니다
경고: mingw64/lib/cmake/libxml2/libxml2-config.cmake의 파일 정보를 얻을 수 없습니다
경고: mingw64/lib/libxml2.a의 파일 정보를 얻을 수 없습니다
경고: mingw64/lib/libxml2.dll.a의 파일 정보를 얻을 수 없습니다
경고: mingw64/lib/pkgconfig/libxml-2.0.pc의 파일 정보를 얻을 수 없습니다
경고: mingw64/lib/python3.11/site-packages/__pycache__/의 파일 정보를 얻을 수 없습니다
경고: mingw64/lib/python3.11/site-packages/__pycache__/drv_libxml2.cpython-311.opt-1.pyc의 파일 정보를 얻을 수 없습니다
경고: mingw64/lib/python3.11/site-packages/__pycache__/drv_libxml2.cpython-311.pyc의 파일 정보를 얻을 수 없습니다
경고: mingw64/lib/python3.11/site-packages/__pycache__/libxml2.cpython-311.opt-1.pyc의 파일 정보를 얻을 수 없습니다
경고: mingw64/lib/python3.11/site-packages/__pycache__/libxml2.cpython-311.pyc의 파일 정보를 얻을 수 없습니다
경고: mingw64/lib/python3.11/site-packages/drv_libxml2.py의 파일 정보를 얻을 수 없습니다
경고: mingw64/lib/python3.11/site-packages/libxml2.py의 파일 정보를 얻을 수 없습니다
경고: mingw64/lib/python3.11/site-packages/libxml2mod.dll.a의 파일 정보를 얻을 수 없습니다
경고: mingw64/lib/python3.11/site-packages/libxml2mod.pyd의 파일 정보를 얻을 수 없습니다
경고: mingw64/share/aclocal/libxml.m4의 파일 정보를 얻을 수 없습니다
경고: mingw64/share/licenses/libxml2/의 파일 정보를 얻을 수 없습니다
경고: mingw64/share/licenses/libxml2/COPYING의 파일 정보를 얻을 수 없습니다
경고: mingw64/share/man/man1/xml2-config.1.gz의 파일 정보를 얻을 수 없습니다
경고: mingw64/share/man/man1/xmlcatalog.1.gz의 파일 정보를 얻을 수 없습니다
경고: mingw64/share/man/man1/xmllint.1.gz의 파일 정보를 얻을 수 없습니다
:: 꾸러미 변경사항을 처리 중...
(1/1) 재설치 중 mingw-w64-x86_64-libxml2           [########################] 100%
오류: 명령이 올바르게 실행되지 못하였습니다.

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Sy
:: 꾸러미 데이터베이스 동기화 중...
 clangarm64는 최신입니다
 mingw32는 최신입니다
 mingw64는 최신입니다
 ucrt64는 최신입니다
 clang32는 최신입니다
 clang64는 최신입니다
 msys는 최신입니다

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Scc

캐시 디렉터리: /var/cache/pacman/pkg/
:: 캐시에서 모든 파일을 제거하시겠습니까? [Y/n] y
캐시에서 모든 파일 제거 중...

데이터베이스 디렉터리: /var/lib/pacman/
:: 사용하지 않는 저장소를 제거하시겠습니까? [Y/n] y
사용하지 않는 동기화 저장소 제거 중...

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l /mingw64/bin/gtk*
-rwxr-xr-x 1 nayou nayou 50777  9월 26 03:13 /mingw64/bin/gtkdoc-check.exe

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# gtkdocize --version
gtkdocize (gtk-doc) 1.34.0

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# which gtkdocize
/c/msys64/mingw64/bin/gtkdocize

환경변수확인
export PATH="/c/gnulib:/c/msys64/mingw64/bin:/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/c/msys64/bin:/c/gnulib/lib:/c/libidn2/gettext-0.22.5/libtextstyle/lib"
/mingw64/bin(확인)

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Q gtk-doc
gtk-doc 1.34.0-1

(빌드)
{ autopoint --force; } 2>&1 | tee ./log/autopoint.log &&   { rm -f po/Makefile.in.in; } &&   { rm -rf autom4te.cache; } &&   { aclocal -I m4 -I gnulib-m4 -I /usr/share/aclocal; } 2>&1 | tee ./log/aclocal.log &&   { libtoolize --copy --force --verbose; } 2>&1 | tee ./log/libtoolize.log &&   { autoconf --verbose; } 2>&1 | tee ./log/autoconf.log &&   { autoheader; } 2>&1 | tee ./log/autoheader.log &&  { automake --add-missing --force-missing; } 2>&1 | tee ./log/automake.log &&   { ./configure --host=x86_64-w64-mingw32; } 2>&1 | tee ./log/configure.log

(오류)
./configure: line 25769: syntax error near unexpected token `-std=c17,'
./configure: line 25769: `AX_CHECK_COMPILE_FLAG(-std=c17, CFLAGS="$CFLAGS -std=c17")'
(수정)
autoconf-archive 설치
AX_CHECK_COMPILE_FLAG 매크로는 autoconf-archive 패키지의 일부
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -S autoconf-archive

autoconf-archive 설치 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# autoreconf --version
autoreconf (GNU Autoconf) 2.72
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+/Autoconf: GNU GPL version 3 or later
<https://gnu.org/licenses/gpl.html>, <https://gnu.org/licenses/exceptions.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David J. MacKenzie and Akim Demaille.

m4 파일 경로 확인
AX_CHECK_COMPILE_FLAG 매크로를 포함하는 m4 파일이 m4 디렉토리에 있는지 확인
m4/ax_check_compile_flag.m4 파일이 있어야 함
업데이트
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# aclocal -I m4

configure.ac 또는 configure.in 수정
m4_ifdef([AX_PREFIX_CONFIG_H], [AX_PREFIX_CONFIG_H])

(오류)
configure: error: C++ 컴파일러가 -fno-rtti와 -fno-exceptions 플래그를 지원하지 않습니다.
(수정)
-fno-rtti: 이 플래그는 "Run-Time Type Information"을 비활성화합니다. RTTI는 프로그램 실행 중에 객체의 타입 정보를 얻을 수 있게 해주는 기능입니다. 이 기능을 사용하지 않으면 바이너리 크기를 줄일 수 있습니다.
-fno-exceptions: 이 플래그는 C++의 예외 처리 기능을 비활성화합니다. 예외 처리를 사용하지 않는 경우도 바이너리 크기를 줄이는 데 도움이 됩니다.
컴파일러 버전 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-g++ --version
x86_64-w64-mingw32-g++.exe (x86_64-win32-seh-rev0, Built by MinGW-Builds project) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

환경변수확인
# echo $PATH
/c/gnulib:/c/msys64/mingw64/bin:/mingw64/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/c/msys64/bin:/c/gnulib/lib:/c/libidn2/gettext-0.22.5/libtextstyle/lib
=> /c/msys64/mingw64/bin: MinGW-w64 툴체인의 바이너리가 위치한 경로입니다. C++ 컴파일러를 찾는 데 중요한 역할

configure.ac 수정
# C++ 컴파일러가 -fno-rtti와 -fno-exceptions 플래그를 지원하는지 확인
AC_COMPILE_IFELSE(
    AC_LANG_PROGRAM([  # C++ 프로그램을 정의
        #include <cstdlib>  // C++에서 사용하는 헤더
        int main(void) { return 0; }  # 기본적인 main 함수
    ], []),
    [
        CXXFLAGS="$CXXFLAGS -fno-rtti -fno-exceptions -std=c++17"  # C++17 및 플래그 추가
    ],
    [
        AC_MSG_ERROR([C++ 컴파일러가 -fno-rtti와 -fno-exceptions 플래그를 지원하지 않습니다.])  # 오류 메시지 출력
    ]
)

# C 컴파일러가 -std=c17 플래그를 지원하는지 확인
AC_COMPILE_IFELSE(
    AC_LANG_PROGRAM([  # C 프로그램을 정의
        #include <stdlib.h>
        int main(void) { return 0; }  # 기본적인 main 함수
    ], []),
    [
        CFLAGS="$CFLAGS -std=c17"  # C17 플래그 추가
    ],
    [
        AC_MSG_ERROR([C 컴파일러가 -std=c17 플래그를 지원하지 않습니다.])  # 오류 메시지 출력
    ]
)

지원확인(https://gcc.gnu.org/gcc-14/)
gcc와 g++는 GNU Compiler Collection(GCC)의 일부로, 
C 및 C++ 프로그래밍 언어를 컴파일하는 데 사용

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-g++ -dM -E - < /dev/null | grep -i __cpp_rtti
=> __cpp_rtti가 정의되지 않았다면, 컴파일러가 RTTI를 지원하지 않는 것
-fno-rtti 플래그를 사용해도 효과가 없으므로, 다른 접근 방법을 고려

~/.bashrc 수정 : 전체에 적용 (export CXXFLAGS="$CXXFLAGS -fno-rtti -fno-exceptions -std=c++17")
configure.ac 수정 : 해당 프로젝트에만 적용

환경변수 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# echo $CXXFLAGS
-std=c++17 -I/c/gnulib/lib -I/mingw64/include -O2 -DDEBUG -DVERSION="1.0.0"

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# echo $CFLAGS
-I/c/gnulib/lib -I/mingw64/include -O2

configure.ac 수정
# C++ 컴파일러가 -fno-rtti와 -fno-exceptions 플래그를 지원하는지 확인
# ~/.bashrc 로 옮김
#AC_COMPILE_IFELSE(
#    AC_LANG_PROGRAM([  # C++ 프로그램을 정의
#        #include <cstdlib>  // C++에서 사용하는 헤더
#        int main(void) { return 0; }  # 기본적인 main 함수
#    ], []),
#    [
#        CXXFLAGS="$CXXFLAGS -fno-rtti -fno-exceptions -std=c++17"  # C++17 플래그와 추가 플래그
#        AC_MSG_NOTICE([CXXFLAGS: $CXXFLAGS])  # 현재 CXXFLAGS 출력
#    ],
#    [
#        AC_MSG_ERROR([C++ 컴파일러가 -fno-rtti와 -fno-exceptions 플래그를 지원하지 않습니다.])  # 오류 메시지 출력
#		AC_MSG_NOTICE([CXXFLAGS: $CXXFLAGS])
#	]
#)
# ~/.bashrc 로 옮김
# C 컴파일러가 -std=c17 플래그를 지원하는지 확인
#AC_COMPILE_IFELSE(
#    AC_LANG_PROGRAM([  # C 프로그램을 정의
#        #include <stdlib.h>
#        int main(void) { return 0; }  # 기본적인 main 함수
#    ], []),
#    [
#        CFLAGS="$CFLAGS -std=c17"  # C17 플래그 추가
#        AC_MSG_NOTICE([CFLAGS: $CFLAGS])  # 현재 CFLAGS 출력
#    ],
#    [
#        AC_MSG_ERROR([C 컴파일러가 -std=c17 플래그를 지원하지 않습니다.])  # 오류 메시지 출력
#		AC_MSG_NOTICE([CXXFLAGS: $CXXFLAGS])
#	]
#)

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# echo | gcc -E -x c - -std=c17
# 0 "<stdin>"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "<stdin>"

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# echo | g++ -E -x c++ - -std=c++17
# 0 "<stdin>"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "<stdin>"

~/.bashrc 수정
# std 옵션 모두 제거 : configure.ac 에서 설정
export CFLAGS="-I/c/gnulib/lib -I/mingw64/include -O2" # C 컴파일러 설정(gcc14.2 c23지원안함)
export CPPFLAGS="-I/c/gnulib/lib -I/mingw64/include -O2" # C++ 전처리 설정
export CXXFLAGS="-I/c/gnulib/lib -I/mingw64/include -O2 -DDEBUG -DVERSION=\"1.0.0\"" # C++ 컴파일러 C++17 기능 설정

configure.ac 수정
# C17 표준을 컴파일러 플래그로 추가
#AX_CHECK_COMPILE_FLAG([-std=c17], [CFLAGS="$CFLAGS -std=c17"])
# 필요시 C17을 나타내는 변수 설정
#AC_SUBST([CC_STANDARD], [17])
#AC_SUBST([CFLAGS], ["-std=c17 -I/mingw64/include -O2"]) #-std=c23 제거 지원안함 gcc 14.2
#AC_SUBST([CPPFLAGS], ["-I/mingw64/include -O2"])
#AC_SUBST([CXXFLAGS], ["-std=c++17 -I/mingw64/include -O2 -DDEBUG -DVERSION=\"1.0.0\""])

"C11 지원 테스트"
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# gcc c11_test.c -o c11_test

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./c11_test
C11 is supported.

c11_test.c
#include <stdio.h>
#include <stdlib.h>
#include <stdalign.h>

int main(void) {
    // C11에서 도입된 _Alignas를 사용하여 16바이트 정렬된 변수 선언
    _Alignas(16) char buffer[32];  // 16바이트 정렬된 배열

    // static_assert로 C11 지원 여부 확인
    _Static_assert(sizeof(void*) == 4 || sizeof(void*) == 8, "C11 is supported.");

    printf("C11 is supported.\n");  // 출력 메시지 영어로 변경
    return 0; // 성공
}

"c++17 지원 테스트"
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# echo '#include <iostream>' > test.cpp
echo 'int main() { std::cout << "C++17 is supported!" << std::endl; return 0; }' >> test.cpp

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-g++ -std=c++17 test.cpp -o test.exe

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./test.exe
C++17 is supported!

configure.ac 수정
# C 컴파일러가 -std=c11 플래그를 지원하는지 확인
AC_LANG(C)
AC_COMPILE_IFELSE([  
    AC_LANG_SOURCE([[  // C 프로그램을 정의
        #include <stdio.h>
        #include <stdlib.h>
        #include <stdalign.h>

        int main(void) {
            // C11에서 도입된 _Alignas를 사용하여 16바이트 정렬된 변수 선언
            _Alignas(16) char buffer[32];  // 16바이트 정렬된 배열

            // static_assert로 C11 지원 여부 확인
            _Static_assert(1, "C11 is supported.");  // 항상 참인 조건

            printf("C11 is supported.\n");  // 출력 메시지
            return 0; // 성공
        }
    ]])
], [
	CFLAGS="$CFLAGS -std=c11"  # C11 플래그 추가
	AC_DEFINE([HAVE_C11], [1], [Define to 1 if C11 is supported.])
    AC_MSG_NOTICE([C11 지원: CFLAGS: $CFLAGS])
], [
	AC_MSG_NOTICE([C11 지원안함: CFLAGS: $CFLAGS])
    AC_MSG_ERROR([c11 지원 없습니다.])
])

# C++ 컴파일러가 -std=c++17 플래그를 지원하는지 확인
AC_LANG(C++)
AC_COMPILE_IFELSE([  
    AC_LANG_SOURCE([[  // C++ 프로그램을 정의
        #include <iostream>
        int main() { return 0; }
    ]])
], [
    CXXFLAGS="$CXXFLAGS -std=c++17"  # C++17 플래그 추가
    AC_DEFINE([HAVE_CPP17], [1], [Define to 1 if C++17 is supported.])
    AC_MSG_NOTICE([C++17 지원: CXXFLAGS: $CXXFLAGS])
], [
	AC_MSG_NOTICE([C++17 지원안함: CXXFLAGS: $CXXFLAGS])
    AC_MSG_ERROR([C++17 지원이 없습니다.])
])

(빌드)
configure: C11 지원: CFLAGS: -I/c/gnulib/lib -I/mingw64/include -O2 -std=c11
configure: C++17 지원: CXXFLAGS: -I/c/gnulib/lib -I/mingw64/include -O2 -DDEBUG -DVERSION="1.0.0" -std=c++17

config.h
(C11만 확인됨)
/* Define if the C compiler supports C11. */
#define HAVE_C11 1
(HAVE_CPP17 생성안됨)

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# grep 'HAVE_CPP17' config.log
| #define HAVE_CPP17 1
| #define HAVE_CPP17 1
| #define HAVE_CPP17 1
#define HAVE_CPP17 1
=> config.log에 따르면 HAVE_CPP17 매크로가 올바르게 정의되었고, #define HAVE_CPP17 1이 여러 번 출력
=> config.h파일을 삭제한후 재성성

config.h 재생성
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# rm -f config.h config.log
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# make clean
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# autoreconf -i --force

configure.ac 수정
# config.h가 없으면 생성
if test ! -f config.h; then
    AC_MSG_NOTICE([config.h does not exist. Creating it...])
fi

AC_CONFIG_HEADERS([C:\libidn2\gettext-0.22.5\libtextstyle\config.h]) #config.h.in => config.h 생성, lib/argz.in.h => lib/argz.h 생성

AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX

Makefile.am 수정
INCLUDES = -I$(top_srcdir)

lib/xgethostname.h lib/xgetaname-impl.h 파일이 존재하지 않아 백업폴더에서 가져옴
AC_CHECK_HEADERS([lib/xgethostname.h lib/xgetaname-impl.h])
AC_CHECK_HEADERS([stdlib.h stdio.h xalloc.h string.h unistd.h stdint.h])

# 사용법
nayou@kimnayooung MINGW64 ~
# info autoconf

(오류)
autoheader-2.72: warning: cannot read "/c/libidn2/gettext-0.22.5/libtextstyle/lib/argz.h".in: No such file or directory
autoheader-2.72: error: cannot rename /tmp/ar3X4v8a/ahu2w1eD/config.hin as "/c/libidn2/gettext-0.22.5/libtextstyle/config.h".in: No such file or directory
(수정)
configure.ac 수정
AC_CONFIG_HEADERS([c:\libidn2\gettext-0.22.5\libtextstyle\config.h])

(빌드)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# autoreconf -i --force && ./configure

config.h 생성
/usr/bin/autoheader-2.72 : rename /tmp/arEOARck/ahLccnMi/config.hin as c:\libidn2\gettext-0.22.5\libtextstyle\config.h

configure 파일 확인
ac_config_headers="$ac_config_headers c:\libidn2\gettext-0.22.5\libtextstyle\config.h"

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l config.h
-rw-r--r-- 1 nayou nayou 70494 10월 10 20:37 config.h

lib/argz.h
#argz.c기반으로 생성
#ifndef ARGZ_H
#define ARGZ_H

#include <stddef.h>
#include <errno.h>

#ifdef __cplusplus
extern "C" {
#endif

/* 함수 선언 */

/* Add BUF, of length BUF_LEN to the argz vector in ARGZ & ARGZ_LEN. */
error_t argz_append(char **argz, size_t *argz_len, const char *buf, size_t buf_len);

/* Add STR to the argz vector in ARGZ & ARGZ_LEN. */
error_t argz_add(char **argz, size_t *argz_len, const char *str);

/* Add STRING, separated by DELIM, to the argz vector in ARGZ & ARGZ_LEN. */
error_t argz_add_sep(char **argz, size_t *argz_len, const char *string, int delim);

/* Create an argz vector from STRING, using DELIM to separate the entries. */
error_t argz_create_sep(const char *string, int delim, char **argz, size_t *len);

/* Insert ENTRY into ARGZ & ARGZ_LEN before BEFORE. */
error_t argz_insert(char **argz, size_t *argz_len, char *before, const char *entry);

/* Return the next entry in ARGZ after ENTRY, or the first if ENTRY is NULL. */
char *argz_next(const char *argz, size_t argz_len, const char *entry);

/* Make '\0' separated argz vector printable by converting all the '\0's except
   the last into the character SEP. */
void argz_stringify(char *argz, size_t len, int sep);

/* Return the number of strings in ARGZ. */
size_t argz_count(const char *argz, size_t len);

/* Extract the ARGZ vector into ARGV. */
void argz_extract(const char *argz, size_t len, char **argv);

/* Create an argz vector from a unix argv vector. */
error_t argz_create(char *const argv[], char **argz, size_t *len);

/* Delete ENTRY from ARGZ & ARGZ_LEN. */
void argz_delete(char **argz, size_t *argz_len, char *entry);

/* Replace occurrences of STR in ARGZ with WITH, reallocating as necessary. */
error_t argz_replace(char **argz, size_t *argz_len, const char *str, const char *with, unsigned *replace_count);

#ifdef __cplusplus
}
#endif

#endif /* ARGZ_H */

(빌드)
{ autopoint --force; } 2>&1 | tee ./log/autopoint.log &&  
{ rm -f po/Makefile.in.in; } &&  
{ rm -rf autom4te.cache; } &&  
{ aclocal -I m4 -I gnulib-m4 -I /usr/share/aclocal; } 2>&1 | tee ./log/aclocal.log &&  
{ libtoolize --copy --force --verbose; } 2>&1 | tee ./log/libtoolize.log &&  
{ autoconf --verbose; } 2>&1 | tee ./log/autoconf.log &&  
{ autoheader; } 2>&1 | tee ./log/autoheader.log && 
{ automake --add-missing --force-missing; } 2>&1 | tee ./log/automake.log &&  
{ ./configure --host=x86_64-w64-mingw32; } 2>&1 | tee ./log/configure.log

(오류)
config.log
conftest.c:73:10: fatal error: argz.h: No such file or directory
   73 | #include <argz.h>
      |          ^~~~~~~~
(수정)
~/.bashrc 수정
export CFLAGS="-I/c/gnulib/lib -I/mingw64/include -I/c/libidn2/gettext-0.22.5/libtextstyle/lib -O2"		# C 컴파일러 설정(gcc14.2 c23지원안함)

lib/argz.h 파일 생성
#ifndef _ARGZ_H
#define _ARGZ_H 1

#define __need_error_t
#include <errno.h>
#include <string.h>             /* Need size_t.  */

#ifdef __cplusplus
extern "C" {
#endif

#ifndef __error_t_defined
typedef int error_t;
#endif

/* Make a '\0' separated arg vector from a unix argv vector, returning it in
   ARGZ, and the total length in LEN.  If a memory allocation error occurs,
   ENOMEM is returned, otherwise 0.  The result can be destroyed using free.  */
extern error_t argz_create (char *const /*argv*/[], char **restrict /*argz*/,
                            size_t *restrict /*len*/);

/* Make a '\0' separated arg vector from a SEP separated list in
   STRING, returning it in ARGZ, and the total length in LEN.  If a
   memory allocation error occurs, ENOMEM is returned, otherwise 0.
   The result can be destroyed using free.  */
extern error_t argz_create_sep (const char *restrict /*string*/,
                                int /*sep*/, char **restrict /*argz*/,
                                size_t *restrict /*len*/);

/* Returns the number of strings in ARGZ.  */
extern size_t argz_count (const char * /*argz*/, size_t /*len*/);

/* Puts pointers to each string in ARGZ into ARGV, which must be large enough
   to hold them all.  */
extern void argz_extract (const char *restrict /*argz*/, size_t /*len*/,
                          char **restrict /*argv*/);

/* Make '\0' separated arg vector ARGZ printable by converting all the '\0's
   except the last into the character SEP.  */
extern void argz_stringify (char * /*argz*/, size_t /*len*/, int /*sep*/);

/* Append BUF, of length BUF_LEN to the argz vector in ARGZ & ARGZ_LEN.  */
extern error_t argz_append (char **restrict /*argz*/,
                            size_t *restrict /*argz_len*/,
                            const char *restrict /*buf*/, size_t /*buf_len*/);

/* Append STR to the argz vector in ARGZ & ARGZ_LEN.  */
extern error_t argz_add (char **restrict /*argz*/,
                         size_t *restrict /*argz_len*/,
                         const char *restrict str);

/* Append SEP separated list in STRING to the argz vector in ARGZ &
   ARGZ_LEN.  */
extern error_t argz_add_sep (char **restrict /*argz*/,
                             size_t *restrict /*argz_len*/,
                             const char *restrict /*string*/, int /*delim*/);

/* Delete ENTRY from ARGZ & ARGZ_LEN, if it appears there.  */
extern void argz_delete (char **restrict /*argz*/,
                         size_t *restrict /*argz_len*/,
                         char *restrict /*entry*/);

/* Insert ENTRY into ARGZ & ARGZ_LEN before BEFORE, which should be an
   existing entry in ARGZ; if BEFORE is NULL, ENTRY is appended to the end.
   Since ARGZ's first entry is the same as ARGZ, argz_insert (ARGZ, ARGZ_LEN,
   ARGZ, ENTRY) will insert ENTRY at the beginning of ARGZ.  If BEFORE is not
   in ARGZ, EINVAL is returned, else if memory can't be allocated for the new
   ARGZ, ENOMEM is returned, else 0.  */
extern error_t argz_insert (char **restrict /*argz*/,
                            size_t *restrict /*argz_len*/,
                            char *restrict /*before*/,
                            const char *restrict /*entry*/);

/* Replace any occurrences of the string STR in ARGZ with WITH, reallocating
   ARGZ as necessary.  If REPLACE_COUNT is non-zero, *REPLACE_COUNT will be
   incremented by number of replacements performed.  */
extern error_t argz_replace (char **restrict /*argz*/,
                             size_t *restrict /*argz_len*/,
                             const char *restrict /*str*/,
                             const char *restrict /*with*/,
                             unsigned int *restrict /*replace_count*/);

/* Returns the next entry in ARGZ & ARGZ_LEN after ENTRY, or NULL if there
   are no more.  If entry is NULL, then the first entry is returned.  This
   behavior allows two convenient iteration styles:

    char *entry = 0;
    while ((entry = argz_next (argz, argz_len, entry)))
      ...;

   or

    char *entry;
    for (entry = argz; entry; entry = argz_next (argz, argz_len, entry))
      ...;
*/
extern char *argz_next (const char *restrict /*argz*/, size_t /*argz_len*/,
                        const char *restrict /*entry*/);

#ifdef __cplusplus
}
#endif

#endif /* argz.h */

configure.ac 수정
#lib/argz.h 자동생성이안되서 수동으로 만듬
AC_CONFIG_HEADERS([config.h.in:config.h lib/argz.h.in:lib/argz.h])

(빌드) 생성된파일 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l config.h* 
-rw-r--r-- 1 nayou nayou 70457 10월 11 14:00 config.h (자동생성)
-rw-r--r-- 1 nayou nayou 70460 10월 11 13:11 config.h.in

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l lib/argz.h*
-rw-r--r-- 1 nayou nayou  5294 10월 11 14:15 lib/argz.h (수동생성)
-rw-r--r-- 1 nayou nayou  5190 10월 11 13:53 lib/argz.h.in

(오류)
configure: error: in '/c/libidn2/gettext-0.22.5/libtextstyle':
configure: error: cannot make x86_64-w64-mingw32-gcc report undeclared builtins
See 'config.log' for more details
(수정)
x86_64-w64-mingw32-gcc 크로스 컴파일러가 선언되지 않은 빌트인 함수들을 제대로 감지하지 못함
~/.bashrc 수정
export CC=x86_64-w64-mingw32-gcc  # C 컴파일러
export CXX=x86_64-w64-mingw32-g++  # C++ 컴파일러
export CPPFLAGS="-I/c/msys64/mingw64/x86_64-w64-mingw32/include -I/c/gnulib/lib -I/mingw64/include -O2"  # C++ 전처리기 설정
export LDFLAGS="-L/c/gnulib/lib -L/c/libidn2/gettext-0.22.5/libtextstyle/lib -L/mingw64/lib -L/usr/lib -Wl,-rpath,/mingw64/bin"  # 링커 플래그
MinGW 툴체인 설치 확인(gcc, g++, binutils 등의 기본 툴체인과 함께 필수 라이브러리들을 설치)
pacman -S mingw-w64-x86_64-toolchain
MSYS2 업데이트
pacman -Syu
헤더 파일 및 라이브러리 설치
pacman -S mingw-w64-x86_64-headers
pacman -S mingw-w64-x86_64-libraries
필요한 추가 라이브러리 설치
pacman -S mingw-w64-x86_64-libiconv
pacman -S mingw-w64-x86_64-zlib
pacman -S mingw-w64-x86_64-pcre
pacman -S mingw-w64-x86_64-ncurses
pacman -S mingw-w64-x86_64-crt

(빌드)
{ autopoint --force; } 2>&1 | tee ./log/autopoint.log &&   { rm -f po/Makefile.in.in; } &&   { rm -rf autom4te.cache; } &&   { aclocal -I m4 -I gnulib-m4 -I /usr/share/aclocal; } 2>&1 | tee ./log/aclocal.log &&   { libtoolize --copy --force --verbose; } 2>&1 | tee ./log/libtoolize.log &&   { autoconf --verbose; } 2>&1 | tee ./log/autoconf.log &&   { autoheader; } 2>&1 | tee ./log/autoheader.log &&  { automake --add-missing --force-missing; } 2>&1 | tee ./log/automake.log &&   { ./configure --host=x86_64-w64-mingw32; } 2>&1 | tee ./log/configure.log; 

(오류)

(수정)
"C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h"
"C:\msys64\mingw64\include\stdio.h" <= 이것으로 정함(MSYS2의 MinGW 환경에서 작업 중일경우 기본적인 폴더)
"C:\msys64\mingw64-backup-11.2.0\include\stdio.h"
"C:\msys64\mingw64\lib\gcc\x86_64-w64-mingw32\14.2.0\include\c++\tr1\stdio.h"
"C:\msys64\mingw64\x86_64-w64-mingw32\include\stdio.h"
"C:\libidn2\gettext-0.22.5\libtextstyle\lib\stdio.h"
"C:\libidn2\gettext-0.22.5\gettext-runtime\gnulib-lib\stdio.h"
"C:\libidn2\gettext-0.22.5\gettext-runtime\intl\gnulib-lib\stdio.h"
"C:\libidn2\gettext-0.22.5\gettext-runtime\libasprintf\gnulib-lib\stdio.h"
"C:\libidn2\gettext-0.19.8\gettext-0.22.5\libtextstyle\lib\stdio.h"
"C:\libidn2\gettext-0.19.8\gettext-0.22.5\gettext-runtime\libasprintf\gnulib-lib\stdio.h"
"C:\libidn2\gettext-0.19.8\gettext-0.22.5\gettext-runtime\gnulib-lib\stdio.h"
"C:\libidn2\gettext-0.19.8\gettext-0.22.5\gettext-runtime\intl\gnulib-lib\stdio.h"
"C:\Dart\runtime\bin\stdio.h"
"C:\msys64\mingw64\include\c++\14.2.0\tr1\stdio.h"
"C:\msys64\mingw64-backup-11.2.0\include\c++\14.2.0\tr1\stdio.h"
"C:\msys64\mingw64-backup-11.2.0\lib\clang\18\include\llvm_libc_wrappers\stdio.h"
"C:\Qt\6.7.1\Src\qtwebengine\src\3rdparty\chromium\third_party\libc++\src\include\stdio.h"
"C:\Users\nayou\AppData\Local\Arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\stdio.h"
"C:\Users\nayou\anaconda3\include\cuda\std\detail\libcxx\include\stdio.h"
"C:\Users\nayou\anaconda3\pkgs\cuda-cccl-12.4.127-0\include\cuda\std\detail\libcxx\include\stdio.h"
"C:\Qt\Tools\QtCreator\bin\clang\lib\clang\17\include\llvm_libc_wrappers\stdio.h"
"C:\Users\nayou\anaconda3\pkgs\pyarrow-14.0.2-py311h847bd2a_0\Lib\site-packages\pyarrow\include\arrow\io\stdio.h"
"C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h"
"C:\Users\nayou\anaconda3\pkgs\arrow-cpp-14.0.2-ha81ea56_1\Library\include\arrow\io\stdio.h"
"C:\Qt\Tools\llvm-mingw1706_64\include\stdio.h"
"C:\Qt\Tools\llvm-mingw1706_64\include\c++\v1\stdio.h"
"C:\Qt\Tools\llvm-mingw1706_64\lib\clang\17\include\llvm_libc_wrappers\stdio.h"
"C:\Users\nayou\vcpkg\downloads\tools\perl\5.38.0.1\c\include\c++\13.1.0\tr1\stdio.h"
"C:\Users\nayou\vcpkg\downloads\tools\perl\5.38.0.1\c\lib\gcc\x86_64-w64-mingw32\13.1.0\include\ssp\stdio.h"
"C:\Users\nayou\vcpkg\downloads\tools\perl\5.38.0.1\c\x86_64-w64-mingw32\include\stdio.h"
"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1\include\cuda\std\detail\libcxx\include\stdio.h"
"C:\Users\nayou\anaconda3\Lib\site-packages\pyarrow\include\arrow\io\stdio.h"
"C:\Users\nayou\anaconda3\Library\include\arrow\io\stdio.h"
"C:\Users\nayou\anaconda3\pkgs\libarrow-11.0.0-hbddb5ef_5_cpu\Library\include\arrow\io\stdio.h"
"C:\Users\nayou\anaconda3\pkgs\pyarrow-11.0.0-py311h6a6099b_5_cpu\Lib\site-packages\pyarrow\include\arrow\io\stdio.h"
"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include\cuda\std\detail\libcxx\include\stdio.h"
"C:\Qt\Tools\mingw1120_64\lib\gcc\x86_64-w64-mingw32\11.2.0\include\ssp\stdio.h"
"C:\Qt\Tools\mingw1120_64\lib\gcc\x86_64-w64-mingw32\11.2.0\include\c++\tr1\stdio.h"
"C:\Qt\Tools\mingw1120_64\x86_64-w64-mingw32\include\stdio.h"
"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.5\include\cuda\std\detail\libcxx\include\stdio.h"

~/.bashrc 수정 (/c/msys64/mingw64/include 추가)
# 시스템 언어 설정
export LANG=ko_KR.UTF-8                     # 한국어 설정
export LC_ALL=ko_KR.UTF-8                    # 모든 로케일 설정을 한국어로

# C 컴파일러 설정
export CC=x86_64-w64-mingw32-gcc             # C 컴파일러
export CXX=x86_64-w64-mingw32-g++            # C++ 컴파일러
export CPP=/mingw64/bin/cpp                   # C++ 전처리기

# CFLAGS 초기화
export CFLAGS=""                              # CFLAGS 초기화
export CFLAGS="-I/c/msys64/mingw64/include"  # MSYS2 MinGW 64-bit 기본 include 디렉토리
export CFLAGS="$CFLAGS -I/c/gnulib/lib"      # Gnulib 라이브러리 헤더 파일 디렉토리
export CFLAGS="$CFLAGS -I/mingw64/include"   # MinGW 기본 include 디렉토리
export CFLAGS="$CFLAGS -I/c/libidn2/gettext-0.22.5/libtextstyle/lib"  # libidn2의 gettext 라이브러리 헤더 파일 디렉토리
export CFLAGS="$CFLAGS -O2"                   # 최적화 레벨 2 설정

# CPPFLAGS 초기화
export CPPFLAGS=""                            # CPPFLAGS 초기화
export CPPFLAGS="-I/c/msys64/mingw64/include" # MSYS2 MinGW 64-bit 기본 include 디렉토리
export CPPFLAGS="$CPPFLAGS -I/c/gnulib/lib"   # Gnulib 라이브러리 헤더 파일 디렉토리
export CPPFLAGS="$CPPFLAGS -I/mingw64/include" # MinGW 기본 include 디렉토리
export CPPFLAGS="$CPPFLAGS -O2"               # 최적화 레벨 2 설정

# CXXFLAGS 초기화
export CXXFLAGS=""                            # CXXFLAGS 초기화
export CXXFLAGS="-I/c/gnulib/lib"            # Gnulib 라이브러리 헤더 파일 디렉토리
export CXXFLAGS="$CXXFLAGS -I/mingw64/include" # MinGW 기본 include 디렉토리
export CXXFLAGS="$CXXFLAGS -O2"               # 최적화 레벨 2 설정
export CXXFLAGS="$CXXFLAGS -DDEBUG"           # 디버그 모드 활성화
export CXXFLAGS="$CXXFLAGS -DVERSION=\"1.0.0\""  # 버전 정의

# 링커 및 아카이버 설정
export LD=/mingw64/bin/ld.exe                 # 링커
export AR=/mingw64/bin/ar.exe                 # 아카이버
export CXXDEPMODE=depmode=gcc                 # C++ 의존성 모드 설정
export PKG_CONFIG=/mingw64/bin/pkg-config     # pkg-config 경로 설정

# pkg-config 경로 설정
export PKG_CONFIG_PATH="/c/Program Files/GLib/lib/pkgconfig:/c/libidn2/gettext-0.22.5/gettext-runtime/intl:/mingw64/lib/pkgconfig:/usr/lib/pkgconfig" # pkg-config 검색 경로

# 기타 도구 경로 설정
export SED=/usr/bin/sed                       # sed 경로
export GREP=/usr/bin/grep                     # grep 경로
export FGREP=/usr/bin/fgrep                   # fgrep 경로
export EGREP=/usr/bin/egrep                   # egrep 경로

# 라이브러리 경로 설정
export LD_LIBRARY_PATH="/mingw64/lib:/usr/lib:/c/gnulib/lib" # 라이브러리 검색 경로
export LDFLAGS="-L/c/gnulib/lib -L/c/libidn2/gettext-0.22.5/libtextstyle/lib -L/mingw64/lib -L/usr/lib -Wl,-rpath,/mingw64/bin" # 링커 플래그
export LIBRARY_PATH="/c/gnulib/lib:/mingw64/lib" # 라이브러리 경로 설정

# gettext 및 libiconv 설정
export GETTEXT_PACKAGE=libidn2               # gettext 패키지 이름
export LIBICONV_DIR=/mingw64                  # libiconv 디렉토리 설정

# C++ 및 C 인클루드 경로 설정
export CXX_INCLUDE_PATH="/c/msys64/mingw64/include:/c/gnulib/lib:/mingw64/include:/c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE"  # C++ 인클루드 경로
export C_INCLUDE_PATH="/c/msys64/mingw64/include:/c/gnulib/lib:/mingw64/include:/c/msys64/mingw64/x86_64-w64-mingw32/include:/c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE" # C 인클루드 경로
export CPLUS_INCLUDE_PATH="/c/msys64/mingw64/include:/c/gnulib/lib:/mingw64/include:/c/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++:/c/Users/nayou/vcpkg/downloads/tools/perl/5.38.0.1/perl/lib/CORE" # C++ 인클루드 경로

# Ant 관련 설정
export ANT_HOME="/c/apache-ant-1.10.15"      # Ant 홈 디렉토리
export PATH="$ANT_HOME/bin:$PATH"             # Ant 바이너리 경로 추가

# Java 관련 설정
export JAVA_HOME="/c/Program Files/Java/jdk-21"  # Java 홈 디렉토리
export PATH="$JAVA_HOME/bin:$PATH"                # Java 바이너리 경로 추가

# Gnulib 경로 설정
export PATH="$PATH:/c/gnulib"                     # Gnulib 경로 추가
export GL_GNU_SOURCE=1                             # Gnulib 소스 버전 설정
export GL_REQUIRE_VERSION=2.0                      # Gnulib 요구 버전 설정

# M4 설정
export M4=/usr/bin/m4                              # M4 경로 설정

# ACLOCAL_PATH 설정
export ACLOCAL_PATH="/c/gnulib/lib:/c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl:/c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl/m4:/c/msys64/usr/share/aclocal:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/m4" # aclocal 검색 경로

# AUTOCONF_PATH 설정
export AUTOCONF_PATH="/c/libidn2/m4:/usr/share/aclocal:/mingw64/share/aclocal" # autoconf 검색 경로

# PATH 
export PATH="/c/msys64/mingw64/include"  # MinGW의 include 디렉토리 추가
export PATH="$PATH:/c/gnulib"  # Gnulib 디렉토리 추가
export PATH="$PATH:/mingw64/bin" # MinGW-w64의 바이너리 디렉토리 추가
export PATH="$PATH:/c/msys64/mingw64/bin"  # 64비트 MinGW 도구의 바이너리 디렉토리 추가
export PATH="$PATH:/c/msys64/mingw32/bin"  # 32비트 MinGW 도구의 바이너리 디렉토리 추가 (필요한 경우)
export PATH="$PATH:/usr/bin"  # 시스템 기본 UNIX 도구 디렉토리 추가
export PATH="$PATH:/bin"  # 기본 UNIX 유틸리티 디렉토리 추가
export PATH="$PATH:/usr/share/aclocal"  # aclocal 매크로를 위한 디렉토리 추가
export PATH="$PATH:/mingw64/share/aclocal"  # MinGW 전용 aclocal 매크로 디렉토리 추가
export PATH="$PATH:/c/libidn2/autoconf-2.72/bin"  # libidn2용 Autoconf 바이너리 디렉토리 추가
export PATH="$PATH:/c/libidn2/libtool-2.4.6"  # libidn2용 Libtool 바이너리 디렉토리 추가
export PATH="$PATH:/c/Program Files/Java/jdk-21/bin"  # Java JDK 바이너리 디렉토리 추가
export PATH="$PATH:/c/Windows/System32"  # Windows System32 디렉토리 추가
export PATH="$PATH:/c/Windows"  # Windows 디렉토리 추가
export PATH="$PATH:/c/Windows/System32/Wbem"  # Windows WMI 디렉토리 추가
export PATH="$PATH:/c/Windows/System32/WindowsPowerShell/v1.0"  # Windows PowerShell 디렉토리 추가
export PATH="$PATH:/usr/bin/site_perl"  # Perl 사이트 디렉토리 추가
export PATH="$PATH:/usr/bin/vendor_perl"  # Perl 공급자 디렉토리 추가
export PATH="$PATH:/usr/bin/core_perl"  # Perl 기본 디렉토리 추가
export PATH="$PATH:/c/Users/nayou/AppData/Local/Programs/Python/Python312"  # Python 디렉토리 추가
export PATH="$PATH:/c/msys64/bin"  # MSYS2 바이너리 디렉토리 추가
export PATH="$PATH:/c/gnulib/lib"  # Gnulib 라이브러리 디렉토리 추가
export PATH="$PATH:/c/libidn2/gettext-0.22.5/libtextstyle/lib"  # libtextstyle을 위한 gettext 라이브러리 디렉토리 추가

# 기존 환경 변수 설정 ...

# C 컴파일러가 작동하지 않는 경우
if ! command -v $CC &> /dev/null; then
    echo "C 컴파일러가 설치되어 있지 않습니다."
    exit 1
fi

$CC --version || {
    echo "C 컴파일러 버전을 확인할 수 없습니다."
    exit 1
}

# C++ 컴파일러가 작동하지 않는 경우
if ! command -v $CXX &> /dev/null; then
    echo "C++ 컴파일러가 설치되어 있지 않습니다."
    exit 1
fi

$CXX --version || {
    echo "C++ 컴파일러 버전을 확인할 수 없습니다."
    exit 1
}

(오류)
configure: loading site script /etc/config.site
checking for x86_64-w64-mingw32-gcc... x86_64-w64-mingw32-gcc
checking whether the C compiler works... no
configure: error: in '/c/libidn2/gettext-0.22.5/libtextstyle':
configure: error: C compiler cannot create executables
See 'config.log' for more details
(수정)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Ss gcc
mingw64/mingw-w64-x86_64-gcc 14.2.0-1 (mingw-w64-x86_64-toolchain) [설치함]
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Ss binutils
mingw64/mingw-w64-x86_64-binutils 2.43.1-1 (mingw-w64-x86_64-toolchain) [설치함]
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Ss make
mingw64/mingw-w64-x86_64-make 4.4.1-3 (mingw-w64-x86_64-toolchain) [설치함]
(설치)
pacman -S mingw64/mingw-w64-x86_64-gcc
pacman -S mingw64/mingw-w64-x86_64-binutils
pacman -S mingw64/mingw-w64-x86_64-make
(환경변수확인)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# echo $PATH (/mingw64/bin 확인)
/c/msys64/mingw64/include:/c/gnulib:/mingw64/bin:/c/msys64/mingw64/bin:/c/msys64/mingw32/bin:/usr/bin:/bin:/usr/share/aclocal:/mingw64/share/aclocal:/c/libidn2/autoconf-2.72/bin:/c/libidn2/libtool-2.4.6:/c/Program Files/Java/jdk-21/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/nayou/AppData/Local/Programs/Python/Python312:/c/msys64/bin:/c/gnulib/lib:/c/libidn2/gettext-0.22.5/libtextstyle/lib
(권한확인)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5
# ls
drwxr-xr-x 1 nayou nayou      0 10월 11 20:32 libtextstyle
(설치위치확인)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5
# echo $CC
x86_64-w64-mingw32-gcc
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5
# which $CC
/mingw64/bin/x86_64-w64-mingw32-gcc

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5
# echo $CXX
x86_64-w64-mingw32-g++
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5
# which $CXX
/mingw64/bin/x86_64-w64-mingw32-g++

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5
# echo $CPP
/mingw64/bin/cpp
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5
# which $CPP
/mingw64/bin/cpp

config.log 확인
필수 개발 패키지가 설치
pacman -S base-devel mingw-w64-x86_64-gcc
pacman -S mingw-w64-x86_64-toolchain
echo $PATH 명령어를 입력해 환경 변수에서 mingw64/bin 경로가 포함되어 있는지 확인
pacman -S autoconf automake libtool
./configure 명령어를 실행할 때, 컴파일러에 불필요한 옵션이 전달되지 않도록 CFLAGS 및 LDFLAGS 등의 환경 변수를 비워두고 실행
./configure CFLAGS="" LDFLAGS="" 빌드

config.log에서 /etc/config.site 스크립트가 로드되는 부분
MinGW 환경과 충돌하거나 잘못된 설정을 할 가능성
/etc/config.site 파일을 일시적으로 비활성화하고, 환경 변수로 직접 설정
/etc/config.site 파일을 무시하고 configure 스크립트를 실행
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# CONFIG_SITE= ./configure
configure: loading site script /usr/local/etc/config.site
checking for gcc... x86_64-w64-mingw32-gcc
checking whether the C compiler works... no
configure: error: in '/c/libidn2/gettext-0.22.5/libtextstyle':
configure: error: C compiler cannot create executables
See 'config.log' for more details

(빌드)
{ autopoint --force; } 2>&1 | tee ./log/autopoint.log &&  
{ rm -f po/Makefile.in.in; } &&  
{ rm -rf autom4te.cache; } &&  
{ aclocal -I m4 -I gnulib-m4 -I /usr/share/aclocal; } 2>&1 | tee ./log/aclocal.log &&  
{ libtoolize --copy --force --verbose; } 2>&1 | tee ./log/libtoolize.log &&  
{ autoconf --verbose; } 2>&1 | tee ./log/autoconf.log &&  
{ autoheader; } 2>&1 | tee ./log/autoheader.log && 
{ automake --add-missing --force-missing; } 2>&1 | tee ./log/automake.log &&  
{ ./configure --host=x86_64-w64-mingw32; } 2>&1 | tee ./log/configure.log

(오류)
checking for stdio.h... no
checking for stdlib.h... no
checking for string.h... no
checking for inttypes.h... no
checking for stdint.h... no
checking for strings.h... no
checking for sys/stat.h... no
checking for sys/types.h... no
checking for unistd.h... no
checking for wchar.h... no
checking for minix/config.h... no
(수정)
컴파일러가 기본 C 표준 라이브러리 헤더 파일을 찾을 수 없다는 것
환경변수 경로 확인 및 수정(~/.bashrc 수정)
nayou@kimnayooung MINGW64 ~
# ls -l /mingw64/bin/pkg-config
-rwxr-xr-x 1 nayou nayou 77879  8월  9 09:07 /mingw64/bin/pkg-config
export PKG_CONFIG=/mingw64/bin/pkg-config     # pkg-config 경로 설정

nayou@kimnayooung MINGW64 ~
# ls -l /mingw64/lib/pkgconfig/glib-2.0.pc
-rw-r--r-- 1 nayou nayou 566  9월 20 15:04 /mingw64/lib/pkgconfig/glib-2.0.pc
nayou@kimnayooung MINGW64 ~
# ls -l /usr/lib/pkgconfig
-rw-r--r-- 1 nayou nayou 334  9월 18 17:07 libalpm.pc
export PKG_CONFIG_PATH="/mingw64/lib/pkgconfig"
export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/usr/lib/pkgconfig"

nayou@kimnayooung MINGW64 ~
# ls -l /mingw64/bin/lib*dll
export LD_LIBRARY_PATH="/mingw64/bin" # 라이브러리 검색 경로

nayou@kimnayooung MINGW64 ~
# ls -l /c/msys64/mingw64/x86_64-w64-mingw32/include/stdio.h
-rw-r--r-- 1 nayou nayou 63230  9월  4 04:22 /c/msys64/mingw64/x86_64-w64-mingw32/include/stdio.h
nayou@kimnayooung MINGW64 ~
# ls -l /c/msys64/mingw64/include/stdio.h
-rw-r--r-- 1 nayou nayou 59028 10월 10 21:04 /c/msys64/mingw64/include/stdio.h
nayou@kimnayooung MINGW64 ~
# ls -l /mingw64/include/stdio.h
-rw-r--r-- 1 nayou nayou 59028 10월 10 21:04 /mingw64/include/stdio.h
nayou@kimnayooung MINGW64 ~
# ls -l /c/libidn2/gettext-0.22.5/libtextstyle/lib/stdio.h
-rw-r--r-- 1 nayou nayou 89386  9월  3 20:51 /c/libidn2/gettext-0.22.5/libtextstyle/lib/stdio.h
export C_INCLUDE_PATH="/c/msys64/mingw64/x86_64-w64-mingw32/include"
export C_INCLUDE_PATH="$C_INCLUDE_PATH:/c/msys64/mingw64/include"
export C_INCLUDE_PATH="$C_INCLUDE_PATH:/mingw64/include"
nayou@kimnayooung MINGW64 ~
# ls -l /c/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/iostream
-rw-r--r-- 1 nayou nayou 3074  9월  4 06:37 /c/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/iostream
export CXX_INCLUDE_PATH="/c/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++"  # C++ 인클루드 경로
export CPLUS_INCLUDE_PATH="/c/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++"  # C++ 인클루드 경로

nayou@kimnayooung MINGW64 ~
# ls -l /usr/lib/*.a
-rw-r--r-- 1 nayou nayou  352188  9월 18 17:07 /usr/lib/libalpm.a
nayou@kimnayooung MINGW64 ~
# ls -l /usr/lib/*.a
-rw-r--r-- 1 nayou nayou  352188  9월 18 17:07 /usr/lib/libalpm.a
export LDFLAGS="-L/mingw64/lib"
export LDFLAGS="$LDFLAGS -L/usr/lib"
export LDFLAGS="$LDFLAGS -Wl,-rpath,/mingw64/bin"

nayou@kimnayooung MINGW64 ~
# ls -l /mingw64/lib/*.a
-rw-r--r-- 1 nayou nayou    6954 10월 10 15:14 /mingw64/lib/libacledit.a
export LIBRARY_PATH="/mingw64/lib"

nayou@kimnayooung MINGW64 ~
# ls -l /c/libidn2/m4/*.m4
-rw-r--r-- 1 nayou nayou    946  8월 25 05:52 /c/libidn2/m4/ax_ac_append_to_file.m4
nayou@kimnayooung MINGW64 ~
# ls -l /c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl/*.m4
-rw-r--r-- 1 nayou nayou 42556 10월  4 08:29 /c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl/aclocal.m4
nayou@kimnayooung MINGW64 ~
# ls -l /c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl/m4/*.m4
-rw-r--r-- 1 nayou nayou   1032 10월  2 09:36 /c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl/m4/autobuild.m4
nayou@kimnayooung MINGW64 ~
# ls -l /c/msys64/usr/share/aclocal/*.m4
-rw-r--r-- 1 nayou nayou   2983  3월 21  2023 /c/msys64/usr/share/aclocal/ax_absolute_header.m4
nayou@kimnayooung MINGW64 ~
# ls -l /mingw64/share/aclocal/*.m4
-rw-r--r-- 1 nayou nayou  8371  9월 20 15:04 /mingw64/share/aclocal/glib-2.0.m4
nayou@kimnayooung MINGW64 ~
# ls -l /c/libidn2/m4/*.m4
-rw-r--r-- 1 nayou nayou    946  8월 25 05:52 /c/libidn2/m4/ax_ac_append_to_file.m4
export ACLOCAL_PATH="/c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl"
export ACLOCAL_PATH="$ACLOCAL_PATH:/c/libidn2/gettext-0.22.5/libtextstyle/lib/ltdl/m4"
export ACLOCAL_PATH="$ACLOCAL_PATH:/c/msys64/usr/share/aclocal"
export ACLOCAL_PATH="$ACLOCAL_PATH:/usr/share/aclocal"
export ACLOCAL_PATH="$ACLOCAL_PATH:/mingw64/share/aclocal"
export ACLOCAL_PATH="$ACLOCAL_PATH:/c/libidn2/m4"

# PATH 
export PATH="$PATH:/c/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++"
export PATH="$PATH:/c/msys64/mingw64/include:/mingw64/include:/c/libidn2/gettext-0.22.5/libtextstyle/lib"
export PATH="$PATH:/mingw64/bin" # MinGW-w64의 바이너리 디렉토리 추가
export PATH="$PATH:/c/msys64/mingw64/include"  # MinGW의 include 디렉토리 추가
export PATH="$PATH:/c/gnulib"  # Gnulib 디렉토리 추가
export PATH="$PATH:/c/msys64/mingw64/bin"  # 64비트 MinGW 도구의 바이너리 디렉토리 추가
export PATH="$PATH:/usr/bin"  # 시스템 기본 UNIX 도구 디렉토리 추가
export PATH="$PATH:/bin"  # 기본 UNIX 유틸리티 디렉토리 추가
export PATH="$PATH:/usr/share/aclocal"  # aclocal 매크로를 위한 디렉토리 추가
export PATH="$PATH:/mingw64/share/aclocal"  # MinGW 전용 aclocal 매크로 디렉토리 추가
export PATH="$PATH:/c/libidn2/autoconf-2.72/bin"  # libidn2용 Autoconf 바이너리 디렉토리 추가
export PATH="$PATH:/c/libidn2/libtool-2.4.6"  # libidn2용 Libtool 바이너리 디렉토리 추가
export PATH="$PATH:/c/Program Files/Java/jdk-21/bin"  # Java JDK 바이너리 디렉토리 추가
export PATH="$PATH:/c/Windows/System32"  # Windows System32 디렉토리 추가
export PATH="$PATH:/c/Windows"  # Windows 디렉토리 추가
export PATH="$PATH:/c/Windows/System32/Wbem"  # Windows WMI 디렉토리 추가
export PATH="$PATH:/c/Windows/System32/WindowsPowerShell/v1.0"  # Windows PowerShell 디렉토리 추가
export PATH="$PATH:/usr/bin/vendor_perl"  # Perl 공급자 디렉토리 추가
export PATH="$PATH:/usr/bin/core_perl"  # Perl 기본 디렉토리 추가
export PATH="$PATH:/c/Users/nayou/AppData/Local/Programs/Python/Python312"  # Python 디렉토리 추가
export PATH="$PATH:/c/gnulib/lib"  # Gnulib 라이브러리 디렉토리 추가
export PATH="$PATH:/c/libidn2/gettext-0.22.5/libtextstyle/lib"  # libtextstyle을 위한 gettext 라이브러리 디렉토리 추가

configure.ac 수정
#LDFLAGS="$LDFLAGS"
#AC_SUBST(LDFLAGS)
#CPPFLAGS="$CPPFLAGS -I/mingw64/include -I/c/libidn2/gettext-0.22.5/libtextstyle/lib -DNEED_MACRO"
#AC_SUBST([CPPFLAGS], ["$CPPFLAGS"])

exist_file.sh 생성(CFLAGS, LDFLAGS에 설정된 각 경로에 필요한 파일들이 존재하는지 확인)
# 필요한 헤더 파일 리스트 (CFLAGS와 관련된 include 경로에서 확인)
HEADER_FILES=("stdio.h" "stdlib.h" "string.h" "unistd.h")

# CFLAGS 경로에서 헤더 파일 확인
for dir in /c/msys64/mingw64/include /mingw64/include /c/libidn2/gettext-0.22.5/libtextstyle/lib; do
  echo "Checking directory: $dir"
  for header in "${HEADER_FILES[@]}"; do
    if [ -f "$dir/$header" ]; then
      echo "  Found: $header"
    else
      echo "  Not found: $header"
    fi
  done
done

# 필요한 라이브러리 파일 리스트 (LDFLAGS와 관련된 lib 경로에서 확인)
LIBRARY_FILES=("libc.a" "libm.a" "libgcc.a" "libpthread.a")

# LDFLAGS 경로에서 라이브러리 파일 확인
for dir in /mingw64/lib /usr/lib /mingw64/bin; do
  echo "Checking directory: $dir"
  for lib in "${LIBRARY_FILES[@]}"; do
    if [ -f "$dir/$lib" ]; then
      echo "  Found: $lib"
    else
      echo "  Not found: $lib"
    fi
  done
done
(결과)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ./exist_file.sh
Checking directory: /c/msys64/mingw64/include
  Found: stdio.h
  Found: stdlib.h
  Found: string.h
  Found: unistd.h
Checking directory: /mingw64/include
  Found: stdio.h
  Found: stdlib.h
  Found: string.h
  Found: unistd.h
Checking directory: /c/libidn2/gettext-0.22.5/libtextstyle/lib
  Found: stdio.h
  Found: stdlib.h
  Found: string.h
  Found: unistd.h
Checking directory: /mingw64/lib
  Not found: libc.a
  Found: libm.a
  Not found: libgcc.a
  Found: libpthread.a
Checking directory: /usr/lib
  Not found: libc.a
  Not found: libm.a
  Not found: libgcc.a
  Not found: libpthread.a
Checking directory: /mingw64/bin
  Not found: libc.a
  Not found: libm.a
  Not found: libgcc.a
  Not found: libpthread.a

=>stdio.h, stdlib.h, string.h, unistd.h는 모든 CFLAGS 경로
(/c/msys64/mingw64/include, /mingw64/include, /c/libidn2/gettext-0.22.5/libtextstyle/lib)에서 존재함
=>라이브러리 파일 (일부 라이브러리가 없음):
경로: /mingw64/lib

libc.a: 없음
libm.a: 있음
libgcc.a: 없음
libpthread.a: 있음
경로: /usr/lib

libc.a: 없음
libm.a: 없음
libgcc.a: 없음
libpthread.a: 없음
경로: /mingw64/bin

libc.a: 없음
libm.a: 없음
libgcc.a: 없음
libpthread.a: 없음

libc.a, libgcc.a가 주요 라이브러리로서 누락된 상태
libgcc.a**는 GCC와 관련된 중요한 라이브러리로, 컴파일 시 필수적
libpthread.a도 쓰레드 관련 라이브러리로 필요

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# # libgcc.a 파일 검색
find / -name "libgcc.a" 2>/dev/null
/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/libgcc.a

~/.bashrc 수정
export LDFLAGS="-L/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0"
export LDFLAGS="$LDFLAGS -L/mingw64/lib"
export LDFLAGS="$LDFLAGS -L/usr/lib"
export LDFLAGS="$LDFLAGS -Wl,-rpath,/mingw64/bin"

configure.ac 디버깅
configure: TOP START =======================================
configure: C 컴파일러: x86_64-w64-mingw32-gcc
configure: C++ 컴파일러: x86_64-w64-mingw32-g++
configure: 링커: /mingw64/bin/ld.exe
configure: AR: /mingw64/bin/ar.exe
configure: CFLAGS: -I/c/msys64/mingw64/include -I/mingw64/include -I/c/libidn2/gettext-0.22.5/libtextstyle/lib -O2
configure: CXXFLAGS: -I/c/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++ -O2 -DDEBUG -DVERSION="1.0.0"
configure: LDFLAGS: -L/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0 -L/mingw64/lib -L/usr/lib -Wl,-rpath,/mingw64/bin
configure: TOP END =======================================
 
환경변수 LD_LIBRARY_PATH에 등록할 경로 검색(주요 파일: libc.so, libpthread.so, libdl.so, libstdc++.so...)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find / -type f \( -name "libc.so" -o -name "libpthread.so" -o -name "libdl.so" -o -name "libstdc++.so" \) 2>/dev/null
find /: 루트 디렉토리부터 검색을 시작합니다.
-type f: 일반 파일만 검색합니다.
\( ... \): 괄호는 여러 조건을 묶을 때 사용하며, 반드시 백슬래시로 이스케이프해야 합니다.
-name "libc.so" -o -name "libpthread.so" ...: -o는 "OR"을 의미하며, 여러 파일 이름을 조건으로 추가합니다.
2>/dev/null: 오류 메시지를 숨깁니다 (권한이 없는 디렉토리에 대한 오류를 숨기기 위함).
-rw-r--r-- 1 nayou nayou 81440 10월 10 15:21 /mingw64/lib/libpthread.a
-rw-r--r-- 1 nayou nayou 1664 10월 10 15:14 /mingw64/lib/libm.a
-rw-r--r-- 1 nayou nayou 7692606  8월  2 14:20 /mingw64/lib/libstdc++.a
=> /mingw64/lib
~/.bashrc 수정
#LD_LIBRARY_PATH vs LIBRARY_PATH
#LD_LIBRARY_PATH: 런타임에 동적으로 라이브러리를 찾을 때 사용하는 경로.
#LIBRARY_PATH: 컴파일할 때 라이브러리를 찾는 경로.
# 라이브러리 경로 설정
export LD_LIBRARY_PATH="/mingw64/lib"
export LIBRARY_PATH="/mingw64/lib"
export LDFLAGS="-L/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0" # libgcc.a
export LDFLAGS="$LDFLAGS -L/mingw64/lib"
export LDFLAGS="$LDFLAGS -L/usr/lib"
export LDFLAGS="$LDFLAGS -Wl,-rpath,/mingw64/bin"

정확한 명칭 찾기
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Ql mingw-w64-x86_64-binutils
mingw-w64-x86_64-binutils /mingw64/x86_64-w64-mingw32/bin/ar.exe
mingw-w64-x86_64-binutils /mingw64/x86_64-w64-mingw32/bin/ld.exe

~/.bashrc 수정
# 링커 및 아카이버 설정
export LD=/mingw64/x86_64-w64-mingw32/bin/ld.exe                 # 링커
export AR=/mingw64/x86_64-w64-mingw32/bin/ar.exe                 # 아카이버
export PATH="/mingw64/x86_64-w64-mingw32/bin"(맨앞에위치로변경) 
export PATH="$PATH:/c/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++"
export PATH="$PATH:/c/msys64/mingw64/include"
export PATH="$PATH:/mingw64/include"
export PATH="$PATH:/c/libidn2/gettext-0.22.5/libtextstyle/lib"
export PATH="$PATH:/mingw64/bin" # MinGW-w64의 바이너리 디렉토리 추가
export PATH="$PATH:/c/gnulib"  # Gnulib 디렉토리 추가
export PATH="$PATH:/c/msys64/mingw64/bin"  # 64비트 MinGW 도구의 바이너리 디렉토리 추가
export PATH="$PATH:/usr/bin"  # 시스템 기본 UNIX 도구 디렉토리 추가
export PATH="$PATH:/bin"  # 기본 UNIX 유틸리티 디렉토리 추가
export PATH="$PATH:/usr/share/aclocal"  # aclocal 매크로를 위한 디렉토리 추가
export PATH="$PATH:/mingw64/share/aclocal"  # MinGW 전용 aclocal 매크로 디렉토리 추가
export PATH="$PATH:/c/libidn2/autoconf-2.72/bin"  # libidn2용 Autoconf 바이너리 디렉토리 추가
export PATH="$PATH:/c/libidn2/libtool-2.4.6"  # libidn2용 Libtool 바이너리 디렉토리 추가
export PATH="$PATH:/c/Program Files/Java/jdk-21/bin"  # Java JDK 바이너리 디렉토리 추가
export PATH="$PATH:/c/Windows/System32"  # Windows System32 디렉토리 추가
export PATH="$PATH:/c/Windows"  # Windows 디렉토리 추가
export PATH="$PATH:/c/Windows/System32/Wbem"  # Windows WMI 디렉토리 추가
export PATH="$PATH:/c/Windows/System32/WindowsPowerShell/v1.0"  # Windows PowerShell 디렉토리 추가
export PATH="$PATH:/usr/bin/vendor_perl"  # Perl 공급자 디렉토리 추가
export PATH="$PATH:/usr/bin/core_perl"  # Perl 기본 디렉토리 추가
export PATH="$PATH:/c/Users/nayou/AppData/Local/Programs/Python/Python312"  # Python 디렉토리 추가
export PATH="$PATH:$JAVA_HOME/bin"                # Java 바이너리 경로 추가
export PATH="$PATH:$ANT_HOME/bin"             # Ant 바이너리 경로 추가
 
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# which ar
/mingw64/x86_64-w64-mingw32/bin/ar

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# which ld
/mingw64/x86_64-w64-mingw32/bin/ld

테스트 프로그램을 컴파일하려다 실패
x86_64-w64-mingw32-gcc를 사용하여 conftest.c라는 파일을 컴파일하려고 했지만, 컴파일이 실패하여 $? = 1을 반환
config.log
configure:XXXX: checking whether the C compiler works
configure:XXXX: x86_64-w64-mingw32-gcc -o conftest conftest.c
configure:XXXX: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "example"
| #define PACKAGE_TARNAME "example"
| #define PACKAGE_VERSION "1.0"
| #define PACKAGE_STRING "example 1.0"
| #define PACKAGE_BUGREPORT "bugs@example.com"
| #define PACKAGE_URL ""
| #define PACKAGE "example"
| #define VERSION "1.0"
| /* end confdefs.h.  */
| int main() { return 0; }
configure:XXXX: error: in `/path/to/build/directory':
configure:XXXX: error: C compiler cannot create executables

컴파일러가 제대로 설치되어 있는지 확인(해당 디렉터리 안에 .a 파일이나 .dll 파일이 있는지 확인)
MSYS2 환경에서 MinGW-w64 도구체인을 사용하여 프로그램을 빌드할 때, 기본적으로 참조되는 경로
/mingw64/include:헤더 파일들이 위치
/mingw64/lib:라이브러리 파일들이 위치

gettext, glib, libiconv 등 필요한 라이브러리가 제대로 설치되어 있는지 확인
pacman -S mingw-w64-x86_64-gettext mingw-w64-x86_64-libiconv mingw-w64-x86_64-glib2
설치된 패키지 파일 목록을 출력
pacman -Ql mingw-w64-x86_64-gettext
pacman -Ql mingw-w64-x86_64-libiconv
pacman -Ql mingw-w64-x86_64-glib2

Linux에서 주로 사용되는 소 (.so) 라이브러리
libc.so, libpthread.so, libdl.so, libstdc++.so 등 파일 설치 방법
vcpkg 또는 MSYS2를 사용 MinGW-w64에서 C 라이브러리 설치

MinGW-w64에서는 DLL (.dll) 형식으로 대응되는 라이브러리를 사용
MinGW-w64 설치 패키지 확인
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# pacman -Ss mingw-w64-x86_64-gcc
기본 패키지들:
msys/ccache 4.10.2-1: MinGW-w64를 위한 컴파일러 캐시.
msys/mingw-w64-cross-binutils 2.43.1-2: 이진 파일과 객체 파일을 조작하는 프로그램 모음.
msys/mingw-w64-cross-clang 11.0.0-4: MinGW-w64를 위한 Clang 컴파일러.
msys/mingw-w64-cross-clang-crt 9.0.0.6158.1c773877-2: Clang 컴파일러용 MinGW-w64 CRT.
msys/mingw-w64-cross-clang-headers 9.0.0.6158.1c773877-2: Clang 컴파일러용 MinGW-w64 헤더 파일.
msys/mingw-w64-cross-common-binutils 2.43.1-2: 모든 타겟을 위한 공통 이진 파일 조작 툴.
msys/mingw-w64-cross-compiler-rt 11.0.0-6: Clang 컴파일러를 위한 런타임 라이브러리.
msys/mingw-w64-cross-crt 12.0.0.r250.gc6bf4bdf6-1: MinGW-w64 CRT (호환성 유지용 메타 패키지).
msys/mingw-w64-cross-gcc 14.2.0-3: MinGW-w64를 위한 GCC 컴파일러.
msys/mingw-w64-cross-headers 12.0.0.r250.gc6bf4bdf6-1: MinGW-w64 헤더 파일들 (호환성 유지용 메타 패키지).
타겟별 패키지:
mingw32 (32비트 MinGW-w64 환경):
msys/mingw-w64-cross-mingw32-binutils 2.43.1-2: 32비트 이진 파일 조작 툴.
msys/mingw-w64-cross-mingw32-crt 12.0.0.r250.gc6bf4bdf6-1: 32비트 MinGW-w64 CRT.
msys/mingw-w64-cross-mingw32-gcc 14.2.0-3: 32비트 MinGW-w64 GCC.
mingw64 (64비트 MinGW-w64 환경):
msys/mingw-w64-cross-mingw64-binutils 2.43.1-2: 64비트 이진 파일 조작 툴.
msys/mingw-w64-cross-mingw64-crt 12.0.0.r250.gc6bf4bdf6-1: 64비트 MinGW-w64 CRT.
msys/mingw-w64-cross-mingw64-gcc 14.2.0-3: 64비트 MinGW-w64 GCC.
mingwarm64 (ARM 64비트 MinGW-w64 환경):
msys/mingw-w64-cross-mingwarm64-binutils 2.43dev-1: ARM 64비트 이진 파일 조작 툴.
msys/mingw-w64-cross-mingwarm64-crt 12.0.0dev-2: ARM 64비트 CRT.
msys/mingw-w64-cross-mingwarm64-gcc 15.0.0dev-2: ARM 64비트 GCC.
ucrt64 (UCRT 64비트 MinGW-w64 환경):
msys/mingw-w64-cross-ucrt64-binutils 2.43.1-2: UCRT 64비트 이진 파일 조작 툴.
msys/mingw-w64-cross-ucrt64-crt 12.0.0.r250.gc6bf4bdf6-1: UCRT 64비트 MinGW-w64 CRT.
msys/mingw-w64-cross-ucrt64-gcc 14.2.0-3: UCRT 64비트 MinGW-w64 GCC.
기타 필수 패키지들:
msys/mingw-w64-cross-zlib 1.3.1-4: Gzip과 PKZIP에서 사용하는 deflate 압축 방법을 구현하는 압축 라이브러리.
msys/mingw-w64-cross-winpthreads 12.0.0.r250.gc6bf4bdf6-1: MinGW-w64 winpthreads 라이브러리.
msys/mingw-w64-cross-winstorecompat 12.0.0.r250.gc6bf4bdf6-1: MinGW-w64 WinRT 호환성 라이브러리.

GCC, Make, 그리고 libwinpthread와 같은 필수적인 패키지를 설치
pacman -S mingw-w64-x86_64-gcc mingw-w64-x86_64-make mingw-w64-x86_64-libwinpthread-git

컴파일러 확인
x86_64-w64-mingw32-gcc --version

MinGW-w64 패키지가 설치
pacman -S mingw-w64-x86_64-gcc

컴파일 환경 확인
ls /mingw64/include
ls /mingw64/lib

패키지 확인 및 설치
gettext 패키지 확인
pacman -S mingw-w64-x86_64-gettext
pacman -Ql mingw-w64-x86_64-gettext
libiconv 패키지 확인
pacman -S mingw-w64-x86_64-libiconv
pacman -Ql mingw-w64-x86_64-libiconv
glib2 패키지 확인
pacman -S mingw-w64-x86_64-glib2
pacman -Ql mingw-w64-x86_64-glib2

테스트 프로그램 컴파일
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-gcc -o conftest conftest.c
컴파일이 성공하면 conftest.exe가 생성
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# ls -l conftest.exe
ls: cannot access 'conftest.exe': No such file or directory
디버깅
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# x86_64-w64-mingw32-gcc -v -o conftest conftest.c
Using built-in specs.
COLLECT_GCC=C:\msys64\mingw64\bin\x86_64-w64-mingw32-gcc.exe
COLLECT_LTO_WRAPPER=C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/lto-wrapper.exe
Target: x86_64-w64-mingw32
Configured with: ../gcc-14.2.0/configure --prefix=/mingw64 --with-local-prefix=/mingw64/local --build=x86_64-w64-mingw32 --host=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --with-native-system-header-dir=/mingw64/include --libexecdir=/mingw64/lib --enable-bootstrap --enable-checking=release --with-arch=nocona --with-tune=generic --enable-languages=c,lto,c++,fortran,ada,objc,obj-c++,rust,jit --enable-shared --enable-static --enable-libatomic --enable-threads=posix --enable-graphite --enable-fully-dynamic-string --enable-libstdcxx-filesystem-ts --enable-libstdcxx-time --disable-libstdcxx-pch --enable-lto --enable-libgomp --disable-libssp --disable-multilib --disable-rpath --disable-win32-registry --disable-nls --disable-werror --disable-symvers --with-libiconv --with-system-zlib --with-gmp=/mingw64 --with-mpfr=/mingw64 --with-mpc=/mingw64 --with-isl=/mingw64 --with-pkgversion='Rev1, Built by MSYS2 project' --with-bugurl=https://github.com/msys2/MINGW-packages/issues --with-gnu-as --with-gnu-ld --disable-libstdcxx-debug --enable-plugin --with-boot-ldflags=-static-libstdc++ --with-stage1-ldflags=-static-libstdc++
Thread model: posix
Supported LTO compression algorithms: zlib zstd
gcc version 14.2.0 (Rev1, Built by MSYS2 project)
COLLECT_GCC_OPTIONS='-v' '-o' 'conftest.exe' '-mtune=generic' '-march=nocona'
 C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/cc1.exe -quiet -v -iprefix C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/14.2.0/ -D_REENTRANT conftest.c -quiet -dumpbase conftest.c -dumpbase-ext .c -mtune=generic -march=nocona -version -o C:\msys64\tmp\ccoDaws9.s

필수파일찾기(경로검색)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# /usr/share/gettext/gettext.h

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# /mingw64/include/iconv.h
/mingw64/x86_64-w64-mingw32/include/iconv.h
/mingw64-backup-11.2.0/include/iconv.h
/usr/include/iconv.h

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find / -name glib.h 2>/dev/null
/mingw64/include/glib-2.0/glib.h
/mingw64-backup-11.2.0/include/glib-2.0/glib.h

nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# find / -name lib*.a 2>/dev/null
/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/libatomic.a
/mingw64/lib/gcc/x86_64-w64-mingw32/lib/libgcc_s.a
/mingw64/lib/libacledit.a
/mingw64/lib/python3.11/site-packages/libxml2mod.dll.a
/mingw64/libexec/gcc/x86_64-w64-mingw32/14.2.0/liblto_plugin.dll.a
/mingw64/opt/lib/dde1.4/libtcldde14.dll.a
/mingw64/opt/lib/itcl4.2.1/libitclstub421.a
/mingw64/opt/lib/libbz2.dll.a
/mingw64/x86_64-w64-mingw32/lib/libacledit.a
/usr/lib/libalpm.a
/usr/lib/perl5/core_perl/CORE/libperl.dll.a
/usr/lib/python3.12/config-3.12-x86_64-cygwin/libpython3.12.dll.a
/usr/lib/python3.12/site-packages/libxml2mod.a

환경변수에추가하기
# C 인클루드 경로 설정
export C_INCLUDE_PATH="$C_INCLUDE_PATH:/usr/share/gettext"
export C_INCLUDE_PATH="$C_INCLUDE_PATH:/mingw64/include"
export C_INCLUDE_PATH="$C_INCLUDE_PATH:/mingw64/include/glib-2.0"

# CPPFLAGS 추가
export CPPFLAGS="$CPPFLAGS -I/usr/share/gettext"
export CPPFLAGS="$CPPFLAGS -I/mingw64/include"
export CPPFLAGS="$CPPFLAGS -I/mingw64/include/glib-2.0"

# 라이브러리 경로 설정
export LIBRARY_PATH="$LIBRARY_PATH:/mingw64/lib"
export LIBRARY_PATH="$LIBRARY_PATH:/usr/lib"
export LIBRARY_PATH="$LIBRARY_PATH:/mingw64/x86_64-w64-mingw32/lib"

# LDFLAGS 추가
export LDFLAGS="$LDFLAGS -L/mingw64/lib"
export LDFLAGS="$LDFLAGS -L/usr/lib"
export LDFLAGS="$LDFLAGS -L/mingw64/x86_64-w64-mingw32/lib"

(빌드)
{ autopoint --force; } 2>&1 | tee ./log/autopoint.log &&   { rm -f po/Makefile.in.in; } &&   { rm -rf autom4te.cache; } &&   { aclocal -I m4 -I gnulib-m4 -I /usr/share/aclocal; } 2>&1 | tee ./log/aclocal.log &&   { libtoolize --copy --force --verbose; } 2>&1 | tee ./log/libtoolize.log &&   { autoconf --verbose; } 2>&1 | tee ./log/autoconf.log &&   { autoheader; } 2>&1 | tee ./log/autoheader.log &&  { automake --add-missing --force-missing; } 2>&1 | tee ./log/automake.log &&   { ./configure --verbose; } 2>&1 | tee ./log/configure.log

(오류)
AC_USE_SYSTEM_EXTENSIONS
(수정)
매크로는 POSIX, BSD, GNU 등에서 제공하는 시스템 확장 기능을 활성화하는데, 특정 시스템이나 설정에 따라 충돌이 생길 수 있다.
Autoconf 버전을 확인(최소한 Autoconf 2.60 이상이 필요)
nayou@kimnayooung MINGW64 /c/libidn2/gettext-0.22.5/libtextstyle
# autoconf --version
autoconf (GNU Autoconf) 2.72
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+/Autoconf: GNU GPL version 3 or later
<https://gnu.org/licenses/gpl.html>, <https://gnu.org/licenses/exceptions.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David J. MacKenzie and Akim Demaille.

AC_USE_SYSTEM_EXTENSIONS는 적절한 위치에 삽입(초기 설정 블록 안에 위치)
configure.ac 수정
AC_INIT([libtextstyle], [1.0], [bug-libtextstyle@example.com])
AC_USE_SYSTEM_EXTENSIONS # AC_INIT 보다 먼저 호출하면 (AC_INIT 바로 밑으로 위치 이동)

















